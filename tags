!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/fb06a6c/
"	editors/vim/config/plugins/all.vim	/^	nnoremap <buffer> <silent> " :<c-u>call peekaboo#peek(v:count1, 'quote',  0)<cr>$/;"	m
"	editors/vim/config/plugins/all.vim	/^	xnoremap <buffer> <silent> " :<c-u>call peekaboo#peek(v:count1, 'quote',  1)<cr>$/;"	m
#	editors/vim/config/plugins/all.vim	/^	map #   <Plug>(asterisk-g#)$/;"	m
$(ACLOCAL_M4)	src/dev/tmux/Makefile	/^$(ACLOCAL_M4):  $(am__aclocal_m4_deps)$/;"	t
$(ACLOCAL_M4)	src/dev/tmux/Makefile.in	/^$(ACLOCAL_M4):  $(am__aclocal_m4_deps)$/;"	t
$(PLUGIN_TARGET)	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^$(PLUGIN_TARGET): $(HEADER_FILES) $(SRC_FILES)$/;"	t
$(TESTS)	src/dev/tmux/regress/Makefile	/^$(TESTS):$/;"	t
$(am__aclocal_m4_deps)	src/dev/tmux/Makefile	/^$(am__aclocal_m4_deps):$/;"	t
$(am__aclocal_m4_deps)	src/dev/tmux/Makefile.in	/^$(am__aclocal_m4_deps):$/;"	t
$(srcdir)/Makefile.in	src/dev/tmux/Makefile	/^$(srcdir)\/Makefile.in:  $(srcdir)\/Makefile.am  $(am__configure_deps)$/;"	t
$(srcdir)/Makefile.in	src/dev/tmux/Makefile.in	/^$(srcdir)\/Makefile.in:  $(srcdir)\/Makefile.am  $(am__configure_deps)$/;"	t
$(top_builddir)/config.status	src/dev/tmux/Makefile	/^$(top_builddir)\/config.status: $(top_srcdir)\/configure $(CONFIG_STATUS_DEPENDENCIES)$/;"	t
$(top_builddir)/config.status	src/dev/tmux/Makefile.in	/^$(top_builddir)\/config.status: $(top_srcdir)\/configure $(CONFIG_STATUS_DEPENDENCIES)$/;"	t
$(top_srcdir)/configure	src/dev/tmux/Makefile	/^$(top_srcdir)\/configure:  $(am__configure_deps)$/;"	t
$(top_srcdir)/configure	src/dev/tmux/Makefile.in	/^$(top_srcdir)\/configure:  $(am__configure_deps)$/;"	t
$VARPATH	editors/vim/config/fullrc.vim	/^let $VARPATH = expand(($XDG_CACHE_HOME ? $XDG_CACHE_HOME : '~\/.cache').'\/vim')$/;"	v
$VARPATH	editors/vim/config/minrc.vim	/^let $VARPATH = expand(($XDG_CACHE_HOME ? $XDG_CACHE_HOME : '~\/.cache').'\/vim')$/;"	v
$VIMPATH	editors/vim/config/fullrc.vim	/^let $VIMPATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')$/;"	v
$VIMPATH	editors/vim/config/minrc.vim	/^let $VIMPATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')$/;"	v
$VIMRC	editors/vim/config/fullrc.vim	/^let $VIMRC = expand($VIMPATH.'\/init.vim')$/;"	v
$VIMRC	editors/vim/config/minrc.vim	/^let $VIMRC = expand($VIMPATH.'\/init.vim')$/;"	v
*	editors/vim/config/plugins/all.vim	/^	map *   <Plug>(asterisk-g*)$/;"	m
*	src/dev/tmux/configure	/^s\/[	 `~#$^&*(){}\\\\|;'\\''"<>?]\/\\\\&\/g$/;"	f
,	editors/vim/config/init.vim	/^nnoremap ,        <Nop>$/;"	m
,	editors/vim/config/init.vim	/^xnoremap ,        <Nop>$/;"	m
,<Space>	editors/vim/config/mappings.vim	/^nnoremap <silent> ,<Space> :<C-u>silent! keeppatterns %substitute\/\\s\\+$\/\/e<CR>$/;"	m
,da	editors/vim/config/plugins/all.vim	/^	vnoremap ,da :LinediffAdd<CR>$/;"	m
,df	editors/vim/config/plugins/all.vim	/^	vnoremap ,df :Linediff<CR>$/;"	m
,dr	editors/vim/config/plugins/all.vim	/^	nnoremap ,dr :<C-u>LinediffReset<CR>$/;"	m
,ds	editors/vim/config/plugins/all.vim	/^	nnoremap ,ds :<C-u>LinediffShow<CR>$/;"	m
-	editors/vim/config/plugins/all.vim	/^	nmap -         <Plug>(choosewin)$/;"	m
--	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^    REPLY="${"$(alias -- $arg)"#*=}"$/;"	a
--	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^alias -- +plus=plus$/;"	a
--	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^alias -- _other=other$/;"	a
-L	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^if [[ $original_alias_dash_L_output == $(alias -L) ]]; then$/;"	a
-Lm	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^zsh_highlight__aliases=`builtin alias -Lm '[^+]*'`$/;"	a
-g	src/dev/tmux/config.status	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	src/dev/tmux/configure	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	src/dev/tmux/configure	/^  alias -g '\\${1+\\"\\$@\\"}'='\\"\\$@\\"'$/;"	a
-s	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^alias -s alias2="echo"$/;"	a
.	editors/vim/config/mappings.vim	/^vnoremap . :normal .<CR>$/;"	m
.DEFAULT_GOAL	src/zplug/Makefile	/^.DEFAULT_GOAL := help$/;"	m
.DEFAULT_GOAL	src/zplug/repos/zplug/zplug/Makefile	/^.DEFAULT_GOAL := help$/;"	m
.c.o	src/dev/tmux/Makefile	/^.c.o:$/;"	t
.c.o	src/dev/tmux/Makefile.in	/^.c.o:$/;"	t
.c.obj	src/dev/tmux/Makefile	/^.c.obj:$/;"	t
.c.obj	src/dev/tmux/Makefile.in	/^.c.obj:$/;"	t
0	src/crouton-clipboard/manifest.json	/^    "js": ["oncopy.js"]$/;"	s	array:content_scripts.0.js
0	src/crouton-clipboard/manifest.json	/^    "matches": ["https:\/\/*\/*","http:\/\/*\/*"],$/;"	s	array:content_scripts.0.matches
0	src/crouton-clipboard/manifest.json	/^  "content_scripts": [{$/;"	o	array:content_scripts
1	src/crouton-clipboard/manifest.json	/^    "matches": ["https:\/\/*\/*","http:\/\/*\/*"],$/;"	s	array:content_scripts.0.matches
;	editors/vim/config/init.vim	/^nnoremap ;        <Nop>$/;"	m
;	editors/vim/config/init.vim	/^xnoremap ;        <Nop>$/;"	m
<	editors/vim/config/mappings.vim	/^nnoremap < <<_$/;"	m
<	editors/vim/config/mappings.vim	/^xnoremap < <gv$/;"	m
<BS>	editors/vim/config/mappings.vim	/^nmap <BS> %$/;"	m
<BS>	editors/vim/config/mappings.vim	/^xmap <BS> %$/;"	m
<BS>	editors/vim/ftplugin/help.vim	/^nmap <buffer> <BS> <C-T>$/;"	m
<C-b>	editors/vim/config/mappings.vim	/^cnoremap <C-b> <Left>$/;"	m
<C-b>	editors/vim/config/mappings.vim	/^noremap <expr> <C-b> max([winheight(0) - 2, 1])$/;"	m
<C-b>	editors/vim/config/plugins/deoplete.vim	/^inoremap <expr><C-b> pumvisible() ? "\\<PageUp>" : "\\<Left>"$/;"	m
<C-b>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr><C-b>   pumvisible() ? "\\<PageUp>" : "\\<Left>"$/;"	m
<C-d>	editors/vim/config/mappings.vim	/^cnoremap <C-d> <C-w>$/;"	m
<C-d>	editors/vim/config/mappings.vim	/^vnoremap <C-d> <gv$/;"	m
<C-d>	editors/vim/config/plugins/all.vim	/^		imap <buffer><C-d> <Plug>(committia-scroll-diff-down-half)$/;"	m
<C-d>	editors/vim/config/plugins/deoplete.vim	/^imap     <expr><C-d> pumvisible() ? "\\<PageDown>" : "\\<C-d>"$/;"	m
<C-d>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr><C-d>   pumvisible() ? "\\<PageDown>" : "\\<Right>"$/;"	m
<C-e>	editors/vim/config/mappings.vim	/^noremap <expr> <C-e> (line("w$") >= line('$') ? "j" : "3\\<C-e>")$/;"	m
<C-f>	editors/vim/config/mappings.vim	/^cnoremap <C-f> <Right>$/;"	m
<C-f>	editors/vim/config/mappings.vim	/^noremap <expr> <C-f> max([winheight(0) - 2, 1])$/;"	m
<C-f>	editors/vim/config/plugins/deoplete.vim	/^inoremap <expr><C-f> pumvisible() ? "\\<PageDown>" : "\\<Right>"$/;"	m
<C-f>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr><C-f>   pumvisible() ? "\\<PageDown>" : "\\<Right>"$/;"	m
<C-g>	editors/vim/config/plugins/deoplete.vim	/^inoremap <expr><C-g> deoplete#refresh()$/;"	m
<C-g>	editors/vim/config/plugins/neocomplete.vim	/^inoremap <expr><C-g>   neocomplete#undo_completion()$/;"	m
<C-h>	editors/vim/config/mappings.vim	/^cnoremap <C-h> <Home>$/;"	m
<C-h>	editors/vim/config/mappings.vim	/^nnoremap <C-h> <C-w>h$/;"	m
<C-j>	editors/vim/config/mappings.vim	/^nnoremap <C-j> <C-w>j$/;"	m
<C-j>	editors/vim/config/plugins/deoplete.vim	/^imap <expr><C-j>   pumvisible() ? "\\<Down>" : "\\<C-j>"$/;"	m
<C-j>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr><C-j>   pumvisible() ? "\\<C-n>" : "\\<C-j>"$/;"	m
<C-k>	editors/vim/config/mappings.vim	/^nnoremap <C-k> <C-w>k$/;"	m
<C-k>	editors/vim/config/plugins/deoplete.vim	/^imap <expr><C-k>   pumvisible() ? "\\<Up>" : "\\<C-k>"$/;"	m
<C-k>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr><C-k>   pumvisible() ? "\\<C-p>" : "\\<C-k>"$/;"	m
<C-l>	editors/vim/config/mappings.vim	/^cnoremap <C-l> <End>$/;"	m
<C-l>	editors/vim/config/mappings.vim	/^nnoremap <C-l> <C-w>l$/;"	m
<C-l>	editors/vim/config/plugins/deoplete.vim	/^inoremap <expr><C-l> deoplete#complete_common_string()$/;"	m
<C-l>	editors/vim/config/plugins/neocomplete.vim	/^inoremap <expr><C-l>  neocomplete#mappings#refresh()$/;"	m
<C-n>	editors/vim/config/mappings.vim	/^cnoremap <C-n>  <Down>$/;"	m
<C-n>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr> <C-n>  pumvisible() ? "\\<C-n>" : "\\<C-x>\\<C-u>\\<C-p>\\<Down>"$/;"	m
<C-o>	editors/vim/config/plugins/all.vim	/^	imap <expr><C-o> neosnippet#expandable_or_jumpable()$/;"	m
<C-p>	editors/vim/config/mappings.vim	/^cnoremap <C-p>  <Up>$/;"	m
<C-p>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr> <C-p>  pumvisible() ? "\\<C-p>" : "\\<C-p>\\<C-n>"$/;"	m
<C-q>	editors/vim/config/mappings.vim	/^nnoremap <silent> <C-q> :execute 'SessionSave '.fnamemodify(resolve(getcwd()), ':p:gs?[\\\\\/:-]/;"	m
<C-r>	editors/vim/config/mappings.vim	/^xnoremap <C-r> :<C-u>call <SID>get_selection('\/')<CR>:%s\/\\V<C-R>=@\/<CR>\/\/gc<Left><Left><Le/;"	m
<C-s>	editors/vim/config/mappings.vim	/^cnoremap <silent><C-s> :<C-u>write<CR>$/;"	m
<C-s>	editors/vim/config/mappings.vim	/^nnoremap <silent><C-s> :<C-u>write<CR>$/;"	m
<C-s>	editors/vim/config/mappings.vim	/^vnoremap <silent><C-s> :<C-u>write<CR>$/;"	m
<C-s>	editors/vim/config/plugins/all.vim	/^	xmap <silent><C-s> <Plug>(neosnippet_register_oneshot_snippet)$/;"	m
<C-t>	editors/vim/config/mappings.vim	/^vnoremap <C-t> >gv$/;"	m
<C-u>	editors/vim/config/plugins/all.vim	/^		imap <buffer><C-u> <Plug>(committia-scroll-diff-up-half)$/;"	m
<C-u>	editors/vim/config/plugins/deoplete.vim	/^imap     <expr><C-u> pumvisible() ? "\\<PageUp>" : "\\<C-u>"$/;"	m
<C-u>	editors/vim/config/plugins/neocomplete.vim	/^imap <expr><C-u>   pumvisible() ? "\\<PageUp>" : "\\<Left>"$/;"	m
<C-w>z	editors/vim/config/mappings.vim	/^nnoremap <silent><C-w>z :vert resize<CR>:resize<CR>:normal! ze<CR>$/;"	m
<C-x>	editors/vim/config/mappings.vim	/^nnoremap <C-x> <C-w>x$/;"	m
<C-x><C-f>	editors/vim/config/plugins/neocomplete.vim	/^imap <silent><expr> <C-x><C-f> neocomplete#start_manual_complete('file')$/;"	m
<C-y>	editors/vim/config/mappings.vim	/^noremap <expr> <C-y> (line("w0") <= 1         ? "k" : "3\\<C-y>")$/;"	m
<CR>	editors/vim/config/mappings.vim	/^nnoremap <CR> za$/;"	m
<CR>	editors/vim/config/plugins/deoplete.vim	/^inoremap <silent><expr><CR> pumvisible() ?$/;"	m
<CR>	editors/vim/config/plugins/neocomplete.vim	/^imap <silent><expr><CR> pumvisible() ?$/;"	m
<CR>	editors/vim/ftplugin/help.vim	/^nmap <buffer> <CR> <C-]>$/;"	m
<CR>	editors/vim/ftplugin/qf.vim	/^nnoremap <buffer> <CR> <CR><C-w>p$/;"	m
<Down>	editors/vim/config/mappings.vim	/^cnoremap <Down> <C-n>$/;"	m
<Down>	editors/vim/config/mappings.vim	/^nnoremap <Down>    :resize +5<CR>$/;"	m
<Esc>[200~	editors/vim/config/terminal.vim	/^cnoremap <special> <Esc>[200~ <nop>$/;"	m
<Esc>[200~	editors/vim/config/terminal.vim	/^inoremap <special> <expr> <Esc>[200~ <SID>XTermPasteBegin('')$/;"	m
<Esc>[200~	editors/vim/config/terminal.vim	/^noremap  <special> <expr> <Esc>[200~ <SID>XTermPasteBegin('0i')$/;"	m
<Esc>[201~	editors/vim/config/terminal.vim	/^cnoremap <special> <Esc>[201~ <nop>$/;"	m
<F2>	editors/vim/config/mappings.vim	/^nnoremap <F2> :source $VIMRC<CR>$/;"	m
<Leader>,	editors/vim/config/plugins/all.vim	/^	nmap <Leader>, <Plug>(quickhl-manual-this)$/;"	m
<Leader>,	editors/vim/config/plugins/all.vim	/^	xmap <Leader>, <Plug>(quickhl-manual-this)$/;"	m
<Leader>-	editors/vim/config/plugins/all.vim	/^	nmap <Leader>- :<C-u>ChooseWinSwapStay<CR>$/;"	m
<Leader><Leader>	editors/vim/config/mappings.vim	/^nmap <silent> <Leader><Leader> V$/;"	m
<Leader><Leader>	editors/vim/config/mappings.vim	/^vmap <Leader><Leader> <Esc>$/;"	m
<Leader>?	editors/vim/config/mappings.vim	/^	nmap <Leader>? :!open dict:\/\/<cword><CR><CR>$/;"	m
<Leader>G	editors/vim/config/plugins/all.vim	/^	nnoremap <Leader>G :Goyo<CR>$/;"	m
<Leader>K	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>K :<C-u>OnlineThesaurusCurrentWord<CR>$/;"	m
<Leader>S	editors/vim/config/mappings.vim	/^nnoremap <Leader>S ^vg_y:execute @@<CR>:echo 'Sourced line.'<CR>$/;"	m
<Leader>S	editors/vim/config/mappings.vim	/^vnoremap <Leader>S y:execute @@<CR>:echo 'Sourced selection.'<CR>$/;"	m
<Leader>W	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>W :<C-u>VimwikiIndex<CR>$/;"	m
<Leader>be	editors/vim/config/plugins/all.vim	/^	nmap <silent><Leader>be :<C-u>execute 'BookmarkSave'.g:bookmark_path.'\/'.fnamemodify(resolve(g/;"	m
<Leader>bg	editors/vim/config/mappings.vim	/^nnoremap <silent><Leader>bg :<C-u>call ToggleBg()<CR>$/;"	m
<Leader>cd	editors/vim/config/mappings.vim	/^map <Leader>cd :lcd %:p:h<CR>:pwd<CR>$/;"	m
<Leader>d	editors/vim/config/mappings.vim	/^nnoremap <Leader>d m`YP``$/;"	m
<Leader>d	editors/vim/config/mappings.vim	/^vnoremap <Leader>d YPgv$/;"	m
<Leader>gc	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>gc :<C-u>Denite gitbranch<CR>$/;"	m
<Leader>gf	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>gf :DeniteCursorWord file_rec<CR>$/;"	m
<Leader>gg	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>gg :DeniteCursorWord grep:::<CR>$/;"	m
<Leader>gg	editors/vim/config/plugins/all.vim	/^	vnoremap <silent> <Leader>gg$/;"	m
<Leader>gl	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>gl :<C-u>Denite gitlog:all<CR>$/;"	m
<Leader>gs	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>gs :<C-u>Denite gitstatus<CR>$/;"	m
<Leader>gu	editors/vim/config/plugins/all.vim	/^	nnoremap <Leader>gu :UndotreeToggle<CR>$/;"	m
<Leader>hj	editors/vim/config/plugins/all.vim	/^	nmap <Leader>hj <Plug>GitGutterNextHunk$/;"	m
<Leader>hk	editors/vim/config/plugins/all.vim	/^	nmap <Leader>hk <Plug>GitGutterPrevHunk$/;"	m
<Leader>hp	editors/vim/config/plugins/all.vim	/^	nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	editors/vim/config/plugins/all.vim	/^	nmap <Leader>hr <Plug>GitGutterUndoHunk$/;"	m
<Leader>hs	editors/vim/config/plugins/all.vim	/^	nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>im	editors/vim/config/plugins/all.vim	/^	nnoremap <Leader>im :PymodeRopeAutoImport<CR>$/;"	m
<Leader>j	editors/vim/config/mappings.vim	/^nmap <Leader>j :lnext<CR>$/;"	m
<Leader>k	editors/vim/config/mappings.vim	/^nmap <Leader>k :lprev<CR>$/;"	m
<Leader>l	editors/vim/config/plugins/all.vim	/^	nmap <Leader>l <Plug>(sidemenu)$/;"	m
<Leader>l	editors/vim/config/plugins/all.vim	/^	xmap <Leader>l <Plug>(sidemenu-visual)$/;"	m
<Leader>ml	editors/vim/config/mappings.vim	/^nnoremap <silent> <Leader>ml :call <SID>append_modeline()<CR>$/;"	m
<Leader>o	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>o   :<C-u>TagbarOpen fj<CR>$/;"	m
<Leader>ob	editors/vim/config/plugins/all.vim	/^	nmap <silent><Leader>ob :<C-u>execute 'BookmarkLoad'.g:bookmark_path.'\/'.fnamemodify(resolve(g/;"	m
<Leader>os	editors/vim/config/mappings.vim	/^nmap <silent> <Leader>os :<C-u>execute 'source '.g:session_directory.'\/'.fnamemodify(resolve(ge/;"	m
<Leader>p	editors/vim/config/mappings.vim	/^	nnoremap <Leader>p :r !cat $HOME\/.crouton-clipboard\/data.txt<CR>$/;"	m
<Leader>r	editors/vim/config/mappings.vim	/^nnoremap <Leader>r :call Replace(0, input('Replace '.expand('<cword>').' with: '))<CR>$/;"	m
<Leader>rm	editors/vim/config/plugins/all.vim	/^	nnoremap <Leader>rm :PymodeRopeRenameModule<CR>$/;"	m
<Leader>se	editors/vim/config/mappings.vim	/^nmap <silent> <Leader>se :<C-u>execute 'SessionSave '.fnamemodify(resolve(getcwd()), ':p:gs?[\\\\/;"	m
<Leader>toh	editors/vim/config/mappings.vim	/^nmap <silent> <Leader>toh :nohlsearch<CR>$/;"	m
<Leader>toi	editors/vim/config/plugins/all.vim	/^	nmap <silent><Leader>toi :<C-u>IndentGuidesToggle<CR>$/;"	m
<Leader>tol	editors/vim/config/mappings.vim	/^nmap <silent> <Leader>tol :setlocal nolist!<CR>$/;"	m
<Leader>ton	editors/vim/config/mappings.vim	/^nmap <silent> <Leader>ton :setlocal nonumber!<CR>$/;"	m
<Leader>tos	editors/vim/config/mappings.vim	/^nmap <silent> <Leader>tos :setlocal spell!<cr>$/;"	m
<Leader>tow	editors/vim/config/mappings.vim	/^nmap <silent> <Leader>tow :setlocal wrap! breakindent!<CR>$/;"	m
<Leader>tt	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <Leader>tt$/;"	m
<Leader>u	editors/vim/config/plugins/all.vim	/^	nnoremap <Leader>u :PymodeRopeUndo<CR>$/;"	m
<Leader>v	editors/vim/config/plugins/all.vim	/^	nmap <Leader>v  <Plug>CommentaryLine$/;"	m
<Leader>v	editors/vim/config/plugins/all.vim	/^	xmap <Leader>v  <Plug>Commentary$/;"	m
<Leader>vb	editors/vim/config/mappings.vim	/^nnoremap <silent><Leader>vb :<C-u>call <SID>toggle_verbose()<CR>$/;"	m
<Leader>w	editors/vim/config/mappings.vim	/^nnoremap <silent><Leader>w :write<CR>$/;"	m
<Leader>w	editors/vim/config/mappings.vim	/^vnoremap <silent><Leader>w <Esc>:write<CR>$/;"	m
<Leader>y	editors/vim/config/mappings.vim	/^	vnoremap <Leader>y :'<,'>w! $HOME\/.crouton-clipboard\/data.txt<CR>$/;"	m
<Left>	editors/vim/config/mappings.vim	/^nnoremap <Left> :vertical resize -5<CR>$/;"	m
<LocalLeader>*	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>* :<C-u>DeniteCursorWord line<CR>$/;"	m
<LocalLeader>/	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>\/ :<C-u>Denite line<CR>$/;"	m
<LocalLeader>;	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>; :<C-u>Denite command command_history<CR>$/;"	m
<LocalLeader>a	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <LocalLeader>a :<C-u>NERDTreeFind<CR>$/;"	m
<LocalLeader>b	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>b :<C-u>Denite buffer file_old -default-action=switch<CR>$/;"	m
<LocalLeader>d	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>d :<C-u>Denite directory_rec -default-action=cd<CR>$/;"	m
<LocalLeader>e	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <LocalLeader>e :<C-u>NERDTreeToggle<CR>$/;"	m
<LocalLeader>f	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>f :<C-u>DeniteProjectDir -buffer-name=files file_rec<CR>$/;"	m
<LocalLeader>g	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>g :<C-u>Denite grep<CR>$/;"	m
<LocalLeader>h	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>h :<C-u>Denite help<CR>$/;"	m
<LocalLeader>j	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>j :<C-u>Denite jump change file_point -auto-preview=true<CR>$/;"	m
<LocalLeader>l	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>l :<C-u>Denite location_list -buffer-name=list<CR>$/;"	m
<LocalLeader>m	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>m :<C-u>Denite mpc -buffer-name=mpc<CR>$/;"	m
<LocalLeader>n	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>n :<C-u>Denite dein<CR>$/;"	m
<LocalLeader>o	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>o :<C-u>Denite outline -auto-preview=true<CR>$/;"	m
<LocalLeader>p	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><expr> <LocalLeader>p  &filetype == 'help' ?$/;"	m
<LocalLeader>q	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>q :<C-u>Denite quickfix -buffer-name=list -auto-preview=true<CR>$/;"	m
<LocalLeader>r	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>r :<C-u>Denite -resume -refresh<CR>$/;"	m
<LocalLeader>s	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>s :<C-u>Denite session -buffer-name=list<CR>$/;"	m
<LocalLeader>t	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><expr> <LocalLeader>t &filetype == 'help' ? "g\\<C-]>" :$/;"	m
<LocalLeader>v	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>v :<C-u>Denite register -buffer-name=register<CR>$/;"	m
<LocalLeader>v	editors/vim/config/plugins/all.vim	/^	xnoremap <silent><LocalLeader>v :<C-u>Denite register -buffer-name=register -default-action=rep/;"	m
<LocalLeader>z	editors/vim/config/plugins/all.vim	/^	nnoremap <silent><LocalLeader>z :<C-u>Denite z<CR>$/;"	m
<Nul>	editors/vim/config/mappings.vim	/^map <Nul> <C-Space>$/;"	m
<Nul>	editors/vim/config/mappings.vim	/^map! <Nul> <C-Space>$/;"	m
<Plug>(StopHL)	editors/vim/plugin/hlsearch.vim	/^		noremap  <expr> <Plug>(StopHL) execute('nohlsearch')[-1]$/;"	m
<Plug>(StopHL)	editors/vim/plugin/hlsearch.vim	/^		noremap! <expr> <Plug>(StopHL) execute('nohlsearch')[-1]$/;"	m
<Right>	editors/vim/config/mappings.vim	/^nnoremap <Right>  :vertical resize +5<CR>$/;"	m
<S-Return>	editors/vim/config/mappings.vim	/^inoremap <S-Return> <C-o>o$/;"	m
<S-Tab>	editors/vim/config/mappings.vim	/^vnoremap <S-Tab> <gv$/;"	m
<S-Tab>	editors/vim/config/plugins/deoplete.vim	/^inoremap <expr><S-Tab>  pumvisible() ? "\\<Up>" : "\\<C-h>"$/;"	m
<S-Tab>	editors/vim/config/plugins/neocomplete.vim	/^inoremap <expr><S-Tab>  pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<S-h>	editors/vim/config/mappings.vim	/^nnoremap <silent> <S-h> :<C-U>tabprevious<CR>$/;"	m
<S-l>	editors/vim/config/mappings.vim	/^nnoremap <silent> <S-l> :<C-U>tabnext<CR>$/;"	m
<S-z>	editors/vim/config/mappings.vim	/^nnoremap <S-z> zMzvzz$/;"	m
<Space>	editors/vim/config/init.vim	/^nnoremap <Space>  <Nop>$/;"	m
<Space>	editors/vim/config/init.vim	/^xnoremap <Space>  <Nop>$/;"	m
<Tab>	editors/vim/config/mappings.vim	/^vnoremap <Tab> >gv|$/;"	m
<Tab>	editors/vim/config/plugins/deoplete.vim	/^imap <silent><expr><Tab> pumvisible() ? "\\<Down>"$/;"	m
<Tab>	editors/vim/config/plugins/deoplete.vim	/^smap <silent><expr><Tab> pumvisible() ? "\\<Down>"$/;"	m
<Tab>	editors/vim/config/plugins/neocomplete.vim	/^imap <silent><expr><Tab> pumvisible() ? "\\<C-n>"$/;"	m
<Tab>	editors/vim/config/plugins/neocomplete.vim	/^smap <silent><expr><Tab> pumvisible() ? "\\<C-n>"$/;"	m
<Up>	editors/vim/config/mappings.vim	/^cnoremap <Up>   <C-p>$/;"	m
<Up>	editors/vim/config/mappings.vim	/^nnoremap <Up>  :resize -5<CR>$/;"	m
<c-h>	editors/vim/config/mappings.vim	/^inoremap <c-h> <c-w>$/;"	m
<c-r>	editors/vim/config/plugins/all.vim	/^	inoremap <buffer> <silent> <c-r> <c-o>:call peekaboo#peek(1, 'ctrl-r',  0)<cr>$/;"	m
<leader>a	editors/vim/config/mappings.vim	/^nnoremap <leader>a =ip$/;"	m
<leader>gB	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <leader>gB :Gbrowse<CR>$/;"	m
<leader>gD	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <leader>gD :Gdiffoff<CR>$/;"	m
<leader>gS	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <leader>gS :Gstatus<CR>$/;"	m
<leader>gb	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <leader>gb :Gblame<CR>$/;"	m
<leader>gc	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <leader>gc :Gcommit<CR>$/;"	m
<leader>gd	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <leader>gd :Gdiff<CR>$/;"	m
<leader>gp	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> <leader>gp :Gpush<CR>$/;"	m
>	editors/vim/config/mappings.vim	/^nnoremap > >>_$/;"	m
>	editors/vim/config/mappings.vim	/^xnoremap > >gv|$/;"	m
@	editors/vim/config/plugins/all.vim	/^	nnoremap <buffer> <silent> @ :<c-u>call peekaboo#peek(v:count1, 'replay', 0)<cr>$/;"	m
A	editors/vim/config/plugins/all.vim	/^	xmap A  <Plug>(niceblock-A)$/;"	m
ACCESSPERMS	src/dev/tmux/compat.h	/^#define ACCESSPERMS /;"	d
ACLOCAL	src/dev/tmux/Makefile	/^ACLOCAL = ${SHELL} \/home\/hle\/.dotfiles\/src\/dev\/tmux\/etc\/missing aclocal-1.15$/;"	m
ACLOCAL	src/dev/tmux/Makefile.in	/^ACLOCAL = @ACLOCAL@$/;"	m
ACLOCAL_M4	src/dev/tmux/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/dev/tmux/Makefile.in	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AC_PROG_CC	src/dev/tmux/aclocal.m4	/^m4_define([AC_PROG_CC],$/;"	d
ACustomState	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class ACustomState(AnInstance):$/;"	c	function:_make_objects	file:
ACustomState	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class ACustomState(AnInstance):$/;"	c	function:_make_objects	file:
ALERT_ANY	src/dev/tmux/tmux.h	/^#define ALERT_ANY /;"	d
ALERT_CURRENT	src/dev/tmux/tmux.h	/^#define ALERT_CURRENT /;"	d
ALERT_NONE	src/dev/tmux/tmux.h	/^#define ALERT_NONE /;"	d
ALERT_OTHER	src/dev/tmux/tmux.h	/^#define ALERT_OTHER /;"	d
ALL_MODES	src/dev/tmux/tmux.h	/^#define ALL_MODES /;"	d
ALL_MOUSE_MODES	src/dev/tmux/tmux.h	/^#define ALL_MOUSE_MODES /;"	d
AMTAR	src/dev/tmux/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/dev/tmux/Makefile.in	/^AMTAR = @AMTAR@$/;"	m
AM_AUTOMAKE_VERSION	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_AUTOMAKE_VERSION],$/;"	m
AM_AUX_DIR_EXPAND	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_AUX_DIR_EXPAND],$/;"	m
AM_CFLAGS	src/dev/tmux/Makefile	/^AM_CFLAGS =  -D_GNU_SOURCE   $(am__append_1) $(am__append_2) \\$/;"	m
AM_CFLAGS	src/dev/tmux/Makefile.in	/^AM_CFLAGS = @AM_CFLAGS@ $(am__append_1) $(am__append_2) \\$/;"	m
AM_CFLAGS	src/dev/tmux/configure.ac	/^AC_SUBST(AM_CFLAGS)$/;"	s
AM_CONDITIONAL	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_CONDITIONAL],$/;"	m
AM_CPPFLAGS	src/dev/tmux/Makefile	/^AM_CPPFLAGS =   \\$/;"	m
AM_CPPFLAGS	src/dev/tmux/Makefile.in	/^AM_CPPFLAGS = @AM_CPPFLAGS@ @XOPEN_DEFINES@ \\$/;"	m
AM_CPPFLAGS	src/dev/tmux/configure.ac	/^AC_SUBST(AM_CPPFLAGS)$/;"	s
AM_DEFAULT_VERBOSITY	src/dev/tmux/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/dev/tmux/Makefile.in	/^AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@$/;"	m
AM_DEP_TRACK	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_DEP_TRACK],$/;"	m
AM_INIT_AUTOMAKE	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_INIT_AUTOMAKE],$/;"	m
AM_LDFLAGS	src/dev/tmux/Makefile	/^AM_LDFLAGS = $/;"	m
AM_LDFLAGS	src/dev/tmux/Makefile.in	/^AM_LDFLAGS = @AM_LDFLAGS@$/;"	m
AM_LDFLAGS	src/dev/tmux/configure.ac	/^AC_SUBST(AM_LDFLAGS)$/;"	s
AM_MAKE_INCLUDE	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_MAKE_INCLUDE],$/;"	m
AM_MISSING_HAS_RUN	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_MISSING_HAS_RUN],$/;"	m
AM_MISSING_PROG	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_MISSING_PROG],$/;"	m
AM_OUTPUT_DEPENDENCY_COMMANDS	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],$/;"	m
AM_PROG_CC_C_O	src/dev/tmux/aclocal.m4	/^AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])$/;"	m
AM_PROG_INSTALL_SH	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_PROG_INSTALL_SH],$/;"	m
AM_PROG_INSTALL_STRIP	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_PROG_INSTALL_STRIP],$/;"	m
AM_RECURSIVE_TARGETS	src/dev/tmux/Makefile	/^AM_RECURSIVE_TARGETS = cscope$/;"	m
AM_RECURSIVE_TARGETS	src/dev/tmux/Makefile.in	/^AM_RECURSIVE_TARGETS = cscope$/;"	m
AM_RUN_LOG	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_RUN_LOG],$/;"	m
AM_SANITY_CHECK	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_SANITY_CHECK],$/;"	m
AM_SET_CURRENT_AUTOMAKE_VERSION	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],$/;"	m
AM_SET_DEPDIR	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_SET_DEPDIR],$/;"	m
AM_SET_LEADING_DOT	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_SET_LEADING_DOT],$/;"	m
AM_SILENT_RULES	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_SILENT_RULES],$/;"	m
AM_SUBST_NOTMAKE	src/dev/tmux/aclocal.m4	/^AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])$/;"	m
AM_V_CC	src/dev/tmux/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/dev/tmux/Makefile.in	/^AM_V_CC = $(am__v_CC_@AM_V@)$/;"	m
AM_V_CCLD	src/dev/tmux/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/dev/tmux/Makefile.in	/^AM_V_CCLD = $(am__v_CCLD_@AM_V@)$/;"	m
AM_V_GEN	src/dev/tmux/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/dev/tmux/Makefile.in	/^AM_V_GEN = $(am__v_GEN_@AM_V@)$/;"	m
AM_V_P	src/dev/tmux/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/dev/tmux/Makefile.in	/^AM_V_P = $(am__v_P_@AM_V@)$/;"	m
AM_V_at	src/dev/tmux/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/dev/tmux/Makefile.in	/^AM_V_at = $(am__v_at_@AM_V@)$/;"	m
ANCHOR_TEMPLATE	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    ANCHOR_TEMPLATE = u'id%03d'$/;"	v	class:Serializer
ANCHOR_TEMPLATE	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    ANCHOR_TEMPLATE = 'id%03d'$/;"	v	class:Serializer
ASSERT_EQ	src/dev/ninja/src/test.h	/^#define ASSERT_EQ(/;"	d
ASSERT_FALSE	src/dev/ninja/src/test.h	/^#define ASSERT_FALSE(/;"	d
ASSERT_GE	src/dev/ninja/src/test.h	/^#define ASSERT_GE(/;"	d
ASSERT_GT	src/dev/ninja/src/test.h	/^#define ASSERT_GT(/;"	d
ASSERT_LE	src/dev/ninja/src/test.h	/^#define ASSERT_LE(/;"	d
ASSERT_LT	src/dev/ninja/src/test.h	/^#define ASSERT_LT(/;"	d
ASSERT_NE	src/dev/ninja/src/test.h	/^#define ASSERT_NE(/;"	d
ASSERT_NO_FATAL_FAILURE	src/dev/ninja/src/test.h	/^#define ASSERT_NO_FATAL_FAILURE(/;"	d
ASSERT_TRUE	src/dev/ninja/src/test.h	/^#define ASSERT_TRUE(/;"	d
AState	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class AState(AnInstance):$/;"	c	function:_make_objects	file:
AState	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class AState(AnInstance):$/;"	c	function:_make_objects	file:
AUTHOR	meta/dotbot/lib/pyyaml/setup.py	/^AUTHOR = "Kirill Simonov"$/;"	v
AUTHORS	src/dev/tmux/tmux.1	/^.Sh AUTHORS$/;"	s
AUTHORS	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/doc/man/man1/zplug-check.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-CHECK
AUTHORS	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-CLEAN
AUTHORS	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-CLEAR
AUTHORS	src/zplug/doc/man/man1/zplug-info.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INFO
AUTHORS	src/zplug/doc/man/man1/zplug-install.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INSTALL
AUTHORS	src/zplug/doc/man/man1/zplug-list.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LIST
AUTHORS	src/zplug/doc/man/man1/zplug-load.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/doc/man/man1/zplug-status.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-STATUS
AUTHORS	src/zplug/doc/man/man1/zplug-update.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-UPDATE
AUTHORS	src/zplug/doc/man/man1/zplug.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DEPTH
AUTHORS	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INSTALL
AUTHORS	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INSTALL
AUTHORS	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/doc/man/man5/zplug-as.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-AS
AUTHORS	src/zplug/doc/man/man5/zplug-at.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-AT
AUTHORS	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-AT
AUTHORS	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DEFER
AUTHORS	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DEPTH
AUTHORS	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DIR
AUTHORS	src/zplug/doc/man/man5/zplug-do.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
AUTHORS	src/zplug/doc/man/man5/zplug-from.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-FROM
AUTHORS	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-FROZEN
AUTHORS	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
AUTHORS	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
AUTHORS	src/zplug/doc/man/man5/zplug-if.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-IF
AUTHORS	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-IGNORE
AUTHORS	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LAZY
AUTHORS	src/zplug/doc/man/man5/zplug-of.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-USE
AUTHORS	src/zplug/doc/man/man5/zplug-on.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-ON
AUTHORS	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-RENAME\\-TO
AUTHORS	src/zplug/doc/man/man5/zplug-use.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-USE
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-CHECK
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-CLEAN
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-CLEAR
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INFO
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INSTALL
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LIST
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-STATUS
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-UPDATE
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DEPTH
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INSTALL
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-INSTALL
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LOAD
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-AS
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-AT
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-AT
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DEFER
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DEPTH
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-DIR
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-FROM
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-FROZEN
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-IF
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-IGNORE
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-LAZY
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-USE
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-ON
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-RENAME\\-TO
AUTHORS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "AUTHORS"$/;"	s	title:ZPLUG\\-USE
AUTHOR_EMAIL	meta/dotbot/lib/pyyaml/setup.py	/^AUTHOR_EMAIL = 'xi@resolvent.net'$/;"	v
AUTOCONF	src/dev/tmux/Makefile	/^AUTOCONF = ${SHELL} \/home\/hle\/.dotfiles\/src\/dev\/tmux\/etc\/missing autoconf$/;"	m
AUTOCONF	src/dev/tmux/Makefile.in	/^AUTOCONF = @AUTOCONF@$/;"	m
AUTOHEADER	src/dev/tmux/Makefile	/^AUTOHEADER = ${SHELL} \/home\/hle\/.dotfiles\/src\/dev\/tmux\/etc\/missing autoheader$/;"	m
AUTOHEADER	src/dev/tmux/Makefile.in	/^AUTOHEADER = @AUTOHEADER@$/;"	m
AUTOMAKE	src/dev/tmux/Makefile	/^AUTOMAKE = ${SHELL} \/home\/hle\/.dotfiles\/src\/dev\/tmux\/etc\/missing automake-1.15$/;"	m
AUTOMAKE	src/dev/tmux/Makefile.in	/^AUTOMAKE = @AUTOMAKE@$/;"	m
AWK	src/dev/tmux/Makefile	/^AWK = gawk$/;"	m
AWK	src/dev/tmux/Makefile.in	/^AWK = @AWK@$/;"	m
Abort	src/dev/ninja/src/build.cc	/^void RealCommandRunner::Abort() {$/;"	f	class:RealCommandRunner	typeref:typename:void
Abort	src/dev/ninja/src/build.h	/^  virtual void Abort() {}$/;"	f	struct:CommandRunner	typeref:typename:void
Abort	src/dev/ninja/src/build_test.cc	/^void FakeCommandRunner::Abort() {$/;"	f	class:FakeCommandRunner	typeref:typename:void
AbsPath	src/dev/ninja/src/includes_normalize-win32.cc	/^string IncludesNormalize::AbsPath(StringPiece s) {$/;"	f	class:IncludesNormalize	typeref:typename:string
Add	src/dev/ninja/src/subprocess-posix.cc	/^Subprocess *SubprocessSet::Add(const string& command, bool use_console) {$/;"	f	class:SubprocessSet	typeref:typename:Subprocess *
Add	src/dev/ninja/src/subprocess-win32.cc	/^Subprocess *SubprocessSet::Add(const string& command, bool use_console) {$/;"	f	class:SubprocessSet	typeref:typename:Subprocess *
AddAssertionFailure	src/dev/ninja/src/test.h	/^  void AddAssertionFailure() { assertion_failures_++; }$/;"	f	class:testing::Test	typeref:typename:void
AddBinding	src/dev/ninja/src/eval_env.cc	/^void BindingEnv::AddBinding(const string& key, const string& val) {$/;"	f	class:BindingEnv	typeref:typename:void
AddBinding	src/dev/ninja/src/eval_env.cc	/^void Rule::AddBinding(const string& key, const EvalString& val) {$/;"	f	class:Rule	typeref:typename:void
AddCatRule	src/dev/ninja/src/test.cc	/^void StateTestWithBuiltinRules::AddCatRule(State* state) {$/;"	f	class:StateTestWithBuiltinRules	typeref:typename:void
AddDefault	src/dev/ninja/src/state.cc	/^bool State::AddDefault(StringPiece path, string* err) {$/;"	f	class:State	typeref:typename:bool
AddEdge	src/dev/ninja/src/state.cc	/^Edge* State::AddEdge(const Rule* rule) {$/;"	f	class:State	typeref:typename:Edge *
AddHighlighting	editors/vim/themes/rafi-2016.vim	/^augroup AddHighlighting$/;"	a
AddIn	src/dev/ninja/src/state.cc	/^void State::AddIn(Edge* edge, StringPiece path, unsigned int slash_bits) {$/;"	f	class:State	typeref:typename:void
AddOut	src/dev/ninja/src/state.cc	/^bool State::AddOut(Edge* edge, StringPiece path, unsigned int slash_bits) {$/;"	f	class:State	typeref:typename:bool
AddOutEdge	src/dev/ninja/src/graph.h	/^  void AddOutEdge(Edge* edge) { out_edges_.push_back(edge); }$/;"	f	struct:Node	typeref:typename:void
AddPool	src/dev/ninja/src/state.cc	/^void State::AddPool(Pool* pool) {$/;"	f	class:State	typeref:typename:void
AddRule	src/dev/ninja/src/eval_env.cc	/^void BindingEnv::AddRule(const Rule* rule) {$/;"	f	class:BindingEnv	typeref:typename:void
AddSpecial	src/dev/ninja/src/eval_env.cc	/^void EvalString::AddSpecial(StringPiece text) {$/;"	f	class:EvalString	typeref:typename:void
AddSubTarget	src/dev/ninja/src/build.cc	/^bool Plan::AddSubTarget(Node* node, vector<Node*>* stack, string* err) {$/;"	f	class:Plan	typeref:typename:bool
AddTarget	src/dev/ninja/src/build.cc	/^Node* Builder::AddTarget(const string& name, string* err) {$/;"	f	class:Builder	typeref:typename:Node *
AddTarget	src/dev/ninja/src/build.cc	/^bool Builder::AddTarget(Node* node, string* err) {$/;"	f	class:Builder	typeref:typename:bool
AddTarget	src/dev/ninja/src/build.cc	/^bool Plan::AddTarget(Node* node, string* err) {$/;"	f	class:Plan	typeref:typename:bool
AddTarget	src/dev/ninja/src/graphviz.cc	/^void GraphViz::AddTarget(Node* node) {$/;"	f	class:GraphViz	typeref:typename:void
AddText	src/dev/ninja/src/eval_env.cc	/^void EvalString::AddText(StringPiece text) {$/;"	f	class:EvalString	typeref:typename:void
AliasEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^AliasEvent = yaml.events.AliasEvent$/;"	v
AliasEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class AliasEvent(NodeEvent):$/;"	c
AliasEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class AliasEvent(NodeEvent):$/;"	c
AliasToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^AliasToken = yaml.tokens.AliasToken$/;"	v
AliasToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class AliasToken(Token):$/;"	c
AliasToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class AliasToken(Token):$/;"	c
AllInputsReady	src/dev/ninja/src/graph.cc	/^bool Edge::AllInputsReady() const {$/;"	f	class:Edge	typeref:typename:bool
AllowStatCache	src/dev/ninja/src/disk_interface.cc	/^void RealDiskInterface::AllowStatCache(bool allow) {$/;"	f	class:RealDiskInterface	typeref:typename:void
AlreadyUpToDate	src/dev/ninja/src/build.cc	/^bool Builder::AlreadyUpToDate() const {$/;"	f	class:Builder	typeref:typename:bool
AnInstance	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class AnInstance:$/;"	c	function:_make_objects	file:
AnInstance	meta/dotbot/lib/pyyaml/tests/lib/test_recursive.py	/^class AnInstance:$/;"	c
AnInstance	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class AnInstance:$/;"	c	function:_make_objects	file:
AnInstance	meta/dotbot/lib/pyyaml/tests/lib3/test_recursive.py	/^class AnInstance:$/;"	c
AnInstanceWithState	meta/dotbot/lib/pyyaml/tests/lib/test_recursive.py	/^class AnInstanceWithState(AnInstance):$/;"	c
AnInstanceWithState	meta/dotbot/lib/pyyaml/tests/lib3/test_recursive.py	/^class AnInstanceWithState(AnInstance):$/;"	c
AnObject	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class AnObject(object):$/;"	c	function:_make_objects	file:
AnObject	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class AnObject:$/;"	c	function:_make_objects	file:
AnchorToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^AnchorToken = yaml.tokens.AnchorToken$/;"	v
AnchorToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class AnchorToken(Token):$/;"	c
AnchorToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class AnchorToken(Token):$/;"	c
AnonymousFunction0378feb40100	src/crouton-clipboard/server.js	/^  .once('error', function (err) {$/;"	f	function:isPortTaken
AnonymousFunction0378feb40200	src/crouton-clipboard/server.js	/^  .once('listening', function() {$/;"	f	function:isPortTaken
AnonymousFunction0378feb40300	src/crouton-clipboard/server.js	/^    tester.once('close', function() { fn(null, false) })$/;"	f
AsString	src/dev/ninja/src/string_piece.h	/^  string AsString() const {$/;"	f	struct:StringPiece	typeref:typename:string
AssertHash	src/dev/ninja/src/test.cc	/^void AssertHash(const char* expected, uint64_t actual) {$/;"	f	typeref:typename:void
AssertParse	src/dev/ninja/src/manifest_parser_test.cc	/^  void AssertParse(const char* input) {$/;"	f	struct:ParserTest	typeref:typename:void	file:
AssertParse	src/dev/ninja/src/test.cc	/^void AssertParse(State* state, const char* input) {$/;"	f	typeref:typename:void
AssertionFailures	src/dev/ninja/src/test.h	/^  int AssertionFailures() const { return assertion_failures_; }$/;"	f	class:testing::Test	typeref:typename:int
BADARG	src/dev/tmux/compat/getopt.c	/^#define	BADARG	/;"	d	file:
BADCH	src/dev/tmux/compat/getopt.c	/^#define	BADCH	/;"	d	file:
BIG_CONSTANT	src/dev/ninja/src/build_log.cc	/^#define BIG_CONSTANT(/;"	d	file:
BLUE	meta/dotbot/dotbot/messenger/color.py	/^    BLUE = '\\033[94m'$/;"	v	class:Color
BORDER	src/dev/tmux/server-client.c	/^	enum { NOWHERE, PANE, STATUS, BORDER } where;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0203	file:
BREAK_PANE_TEMPLATE	src/dev/tmux/cmd-break-pane.c	/^#define BREAK_PANE_TEMPLATE /;"	d	file:
BROKEN_CMSG_FIRSTHDR	src/dev/tmux/configure.ac	/^		AC_DEFINE(BROKEN_CMSG_FIRSTHDR)$/;"	d
BSDgetopt	src/dev/tmux/compat/getopt.c	/^BSDgetopt(int nargc, char *const *nargv, const char *ostr)$/;"	f	typeref:typename:int
BSDoptarg	src/dev/tmux/compat/getopt.c	/^char	*BSDoptarg;		\/* argument associated with option *\/$/;"	v	typeref:typename:char *
BSDopterr	src/dev/tmux/compat/getopt.c	/^int	BSDopterr = 1,		\/* if error message should be printed *\/$/;"	v	typeref:typename:int
BSDoptind	src/dev/tmux/compat/getopt.c	/^	BSDoptind = 1,		\/* index into parent argv vector *\/$/;"	v	typeref:typename:int
BSDoptopt	src/dev/tmux/compat/getopt.c	/^	BSDoptopt,		\/* character checked for validity *\/$/;"	v	typeref:typename:int
BSDoptreset	src/dev/tmux/compat/getopt.c	/^	BSDoptreset;		\/* reset getopt *\/$/;"	v	typeref:typename:int
BUFFERS	src/dev/tmux/tmux.1	/^.Sh BUFFERS$/;"	s
BUILD	src/dev/ninja/src/lexer.h	/^    BUILD,$/;"	e	enum:Lexer::Token
BUILD_FILENAME	src/dev/ninja/configure.py	/^BUILD_FILENAME = 'build.ninja'$/;"	v
Base64	src/dev/tmux/compat/base64.c	/^static const char Base64[] =$/;"	v	typeref:typename:const char[]	file:
BaseConstructor	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^class BaseConstructor(object):$/;"	c
BaseConstructor	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^class BaseConstructor:$/;"	c
BaseDumper	meta/dotbot/lib/pyyaml/lib/yaml/dumper.py	/^class BaseDumper(Emitter, Serializer, BaseRepresenter, BaseResolver):$/;"	c
BaseDumper	meta/dotbot/lib/pyyaml/lib3/yaml/dumper.py	/^class BaseDumper(Emitter, Serializer, BaseRepresenter, BaseResolver):$/;"	c
BaseLoader	meta/dotbot/lib/pyyaml/lib/yaml/loader.py	/^class BaseLoader(Reader, Scanner, Parser, Composer, BaseConstructor, BaseResolver):$/;"	c
BaseLoader	meta/dotbot/lib/pyyaml/lib3/yaml/loader.py	/^class BaseLoader(Reader, Scanner, Parser, Composer, BaseConstructor, BaseResolver):$/;"	c
BaseRepresenter	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^class BaseRepresenter(object):$/;"	c
BaseRepresenter	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^class BaseRepresenter:$/;"	c
BaseResolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^class BaseResolver(object):$/;"	c
BaseResolver	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^class BaseResolver:$/;"	c
BindingEnv	src/dev/ninja/src/eval_env.h	/^  BindingEnv() : parent_(NULL) {}$/;"	f	struct:BindingEnv
BindingEnv	src/dev/ninja/src/eval_env.h	/^  explicit BindingEnv(BindingEnv* parent) : parent_(parent) {}$/;"	f	struct:BindingEnv
BindingEnv	src/dev/ninja/src/eval_env.h	/^struct BindingEnv : public Env {$/;"	s
Bindings	src/dev/ninja/src/eval_env.h	/^  typedef map<string, EvalString> Bindings;$/;"	t	struct:Rule	typeref:typename:map<string,EvalString>
BlockEndToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^BlockEndToken = yaml.tokens.BlockEndToken$/;"	v
BlockEndToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class BlockEndToken(Token):$/;"	c
BlockEndToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class BlockEndToken(Token):$/;"	c
BlockEntryToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^BlockEntryToken = yaml.tokens.BlockEntryToken$/;"	v
BlockEntryToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class BlockEntryToken(Token):$/;"	c
BlockEntryToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class BlockEntryToken(Token):$/;"	c
BlockMappingStartToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^BlockMappingStartToken = yaml.tokens.BlockMappingStartToken$/;"	v
BlockMappingStartToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class BlockMappingStartToken(Token):$/;"	c
BlockMappingStartToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class BlockMappingStartToken(Token):$/;"	c
BlockSequenceStartToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^BlockSequenceStartToken = yaml.tokens.BlockSequenceStartToken$/;"	v
BlockSequenceStartToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class BlockSequenceStartToken(Token):$/;"	c
BlockSequenceStartToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class BlockSequenceStartToken(Token):$/;"	c
Bootstrap	src/dev/ninja/configure.py	/^class Bootstrap:$/;"	c
Build	src/dev/ninja/src/build.cc	/^bool Builder::Build(string* err) {$/;"	f	class:Builder	typeref:typename:bool
BuildConfig	src/dev/ninja/src/build.h	/^  BuildConfig() : verbosity(NORMAL), dry_run(false), parallelism(1),$/;"	f	struct:BuildConfig
BuildConfig	src/dev/ninja/src/build.h	/^struct BuildConfig {$/;"	s
BuildDryRun	src/dev/ninja/src/build_test.cc	/^  BuildDryRun() {$/;"	f	struct:BuildDryRun	file:
BuildDryRun	src/dev/ninja/src/build_test.cc	/^struct BuildDryRun : public BuildWithLogTest {$/;"	s	file:
BuildEdgeFinished	src/dev/ninja/src/build.cc	/^void BuildStatus::BuildEdgeFinished(Edge* edge,$/;"	f	class:BuildStatus	typeref:typename:void
BuildEdgeStarted	src/dev/ninja/src/build.cc	/^void BuildStatus::BuildEdgeStarted(Edge* edge) {$/;"	f	class:BuildStatus	typeref:typename:void
BuildFinished	src/dev/ninja/src/build.cc	/^void BuildStatus::BuildFinished() {$/;"	f	class:BuildStatus	typeref:typename:void
BuildLog	src/dev/ninja/src/build_log.cc	/^BuildLog::BuildLog()$/;"	f	class:BuildLog
BuildLog	src/dev/ninja/src/build_log.h	/^struct BuildLog {$/;"	s
BuildLogRecompactTest	src/dev/ninja/src/build_log_test.cc	/^struct BuildLogRecompactTest : public BuildLogTest {$/;"	s	namespace:__anon4bc521c40110	file:
BuildLogTest	src/dev/ninja/src/build_log_test.cc	/^struct BuildLogTest : public StateTestWithBuiltinRules, public BuildLogUser {$/;"	s	namespace:__anon4bc521c40110	file:
BuildLogUser	src/dev/ninja/src/build_log.h	/^struct BuildLogUser {$/;"	s
BuildRequires	src/dev/ninja/misc/packaging/ninja.spec	/^BuildRequires: asciidoc$/;"	t
BuildRoot	src/dev/ninja/misc/packaging/ninja.spec	/^BuildRoot: %{_tmppath}\/%{name}-%{version}-%{rel}$/;"	t
BuildStarted	src/dev/ninja/src/build.cc	/^void BuildStatus::BuildStarted() {$/;"	f	class:BuildStatus	typeref:typename:void
BuildStatus	src/dev/ninja/src/build.cc	/^BuildStatus::BuildStatus(const BuildConfig& config)$/;"	f	class:BuildStatus
BuildStatus	src/dev/ninja/src/build.h	/^struct BuildStatus {$/;"	s
BuildTest	src/dev/ninja/src/build_test.cc	/^  BuildTest() : config_(MakeConfig()), command_runner_(&fs_),$/;"	f	struct:BuildTest	file:
BuildTest	src/dev/ninja/src/build_test.cc	/^struct BuildTest : public StateTestWithBuiltinRules, public BuildLogUser {$/;"	s	file:
BuildWithDepsLogTest	src/dev/ninja/src/build_test.cc	/^  BuildWithDepsLogTest() {}$/;"	f	struct:BuildWithDepsLogTest	file:
BuildWithDepsLogTest	src/dev/ninja/src/build_test.cc	/^struct BuildWithDepsLogTest : public BuildTest {$/;"	s	file:
BuildWithLogTest	src/dev/ninja/src/build_test.cc	/^  BuildWithLogTest() {$/;"	f	struct:BuildWithLogTest	file:
BuildWithLogTest	src/dev/ninja/src/build_test.cc	/^struct BuildWithLogTest : public BuildTest {$/;"	s	file:
Builder	src/dev/ninja/src/build.cc	/^Builder::Builder(State* state, const BuildConfig& config,$/;"	f	class:Builder
Builder	src/dev/ninja/src/build.h	/^struct Builder {$/;"	s
CBaseDumper	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^class CBaseDumper(CEmitter, BaseRepresenter, BaseResolver):$/;"	c
CBaseDumper	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^class CBaseDumper(CEmitter, BaseRepresenter, BaseResolver):$/;"	c
CBaseLoader	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^class CBaseLoader(CParser, BaseConstructor, BaseResolver):$/;"	c
CBaseLoader	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^class CBaseLoader(CParser, BaseConstructor, BaseResolver):$/;"	c
CC	src/dev/tmux/Makefile	/^CC = gcc$/;"	m
CC	src/dev/tmux/Makefile.in	/^CC = @CC@$/;"	m
CCDEPMODE	src/dev/tmux/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/dev/tmux/Makefile.in	/^CCDEPMODE = @CCDEPMODE@$/;"	m
CCLD	src/dev/tmux/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/dev/tmux/Makefile.in	/^CCLD = $(CC)$/;"	m
CDumper	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^class CDumper(CEmitter, Serializer, Representer, Resolver):$/;"	c
CDumper	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^class CDumper(CEmitter, Serializer, Representer, Resolver):$/;"	c
CELL_BORDERS	src/dev/tmux/screen-redraw.c	/^#define CELL_BORDERS /;"	d	file:
CELL_BOTTOMJOIN	src/dev/tmux/screen-redraw.c	/^#define CELL_BOTTOMJOIN /;"	d	file:
CELL_BOTTOMLEFT	src/dev/tmux/screen-redraw.c	/^#define CELL_BOTTOMLEFT /;"	d	file:
CELL_BOTTOMRIGHT	src/dev/tmux/screen-redraw.c	/^#define CELL_BOTTOMRIGHT /;"	d	file:
CELL_INSIDE	src/dev/tmux/screen-redraw.c	/^#define CELL_INSIDE /;"	d	file:
CELL_JOIN	src/dev/tmux/screen-redraw.c	/^#define CELL_JOIN /;"	d	file:
CELL_LEFTJOIN	src/dev/tmux/screen-redraw.c	/^#define CELL_LEFTJOIN /;"	d	file:
CELL_LEFTRIGHT	src/dev/tmux/screen-redraw.c	/^#define CELL_LEFTRIGHT /;"	d	file:
CELL_OUTSIDE	src/dev/tmux/screen-redraw.c	/^#define CELL_OUTSIDE /;"	d	file:
CELL_RIGHTJOIN	src/dev/tmux/screen-redraw.c	/^#define CELL_RIGHTJOIN /;"	d	file:
CELL_STATUS_BOTTOM	src/dev/tmux/screen-redraw.c	/^#define CELL_STATUS_BOTTOM /;"	d	file:
CELL_STATUS_OFF	src/dev/tmux/screen-redraw.c	/^#define CELL_STATUS_OFF /;"	d	file:
CELL_STATUS_TOP	src/dev/tmux/screen-redraw.c	/^#define CELL_STATUS_TOP /;"	d	file:
CELL_TOPBOTTOM	src/dev/tmux/screen-redraw.c	/^#define CELL_TOPBOTTOM /;"	d	file:
CELL_TOPJOIN	src/dev/tmux/screen-redraw.c	/^#define CELL_TOPJOIN /;"	d	file:
CELL_TOPLEFT	src/dev/tmux/screen-redraw.c	/^#define CELL_TOPLEFT /;"	d	file:
CELL_TOPRIGHT	src/dev/tmux/screen-redraw.c	/^#define CELL_TOPRIGHT /;"	d	file:
CEmitter	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^cdef class CEmitter:$/;"	c
CFLAGS	src/dev/tmux/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/dev/tmux/Makefile.in	/^CFLAGS = @CFLAGS@$/;"	m
CLASSIFIERS	meta/dotbot/lib/pyyaml/setup.py	/^CLASSIFIERS = [$/;"	v
CLEANFILES	src/dev/tmux/Makefile	/^CLEANFILES = tmux.1.mdoc tmux.1.man$/;"	m
CLEANFILES	src/dev/tmux/Makefile.am	/^CLEANFILES = tmux.1.mdoc tmux.1.man$/;"	m
CLEANFILES	src/dev/tmux/Makefile.in	/^CLEANFILES = tmux.1.mdoc tmux.1.man$/;"	m
CLIENTS	src/dev/tmux/tmux.1	/^.Sh CLIENTS AND SESSIONS$/;"	s
CLIENT_256COLOURS	src/dev/tmux/tmux.h	/^#define CLIENT_256COLOURS /;"	d
CLIENT_ATTACHED	src/dev/tmux/tmux.h	/^#define CLIENT_ATTACHED /;"	d
CLIENT_BORDERS	src/dev/tmux/tmux.h	/^#define CLIENT_BORDERS /;"	d
CLIENT_CONTROL	src/dev/tmux/tmux.h	/^#define CLIENT_CONTROL /;"	d
CLIENT_CONTROLCONTROL	src/dev/tmux/tmux.h	/^#define CLIENT_CONTROLCONTROL /;"	d
CLIENT_DEAD	src/dev/tmux/tmux.h	/^#define CLIENT_DEAD /;"	d
CLIENT_DETACHING	src/dev/tmux/tmux.h	/^#define CLIENT_DETACHING /;"	d
CLIENT_DOUBLECLICK	src/dev/tmux/tmux.h	/^#define CLIENT_DOUBLECLICK /;"	d
CLIENT_EXIT	src/dev/tmux/tmux.h	/^#define CLIENT_EXIT /;"	d
CLIENT_EXIT_DETACHED	src/dev/tmux/client.c	/^	CLIENT_EXIT_DETACHED,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_EXIT_DETACHED_HUP	src/dev/tmux/client.c	/^	CLIENT_EXIT_DETACHED_HUP,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_EXIT_EXITED	src/dev/tmux/client.c	/^	CLIENT_EXIT_EXITED,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_EXIT_LOST_SERVER	src/dev/tmux/client.c	/^	CLIENT_EXIT_LOST_SERVER,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_EXIT_LOST_TTY	src/dev/tmux/client.c	/^	CLIENT_EXIT_LOST_TTY,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_EXIT_NONE	src/dev/tmux/client.c	/^	CLIENT_EXIT_NONE,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_EXIT_SERVER_EXITED	src/dev/tmux/client.c	/^	CLIENT_EXIT_SERVER_EXITED,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_EXIT_TERMINATED	src/dev/tmux/client.c	/^	CLIENT_EXIT_TERMINATED,$/;"	e	enum:__anonfb464b170103	file:
CLIENT_FOCUSED	src/dev/tmux/tmux.h	/^#define CLIENT_FOCUSED /;"	d
CLIENT_IDENTIFIED	src/dev/tmux/tmux.h	/^#define CLIENT_IDENTIFIED /;"	d
CLIENT_IDENTIFY	src/dev/tmux/tmux.h	/^#define CLIENT_IDENTIFY /;"	d
CLIENT_LOGIN	src/dev/tmux/tmux.h	/^#define CLIENT_LOGIN /;"	d
CLIENT_READONLY	src/dev/tmux/tmux.h	/^#define CLIENT_READONLY /;"	d
CLIENT_REDRAW	src/dev/tmux/tmux.h	/^#define CLIENT_REDRAW /;"	d
CLIENT_REPEAT	src/dev/tmux/tmux.h	/^#define CLIENT_REPEAT /;"	d
CLIENT_SIZECHANGED	src/dev/tmux/tmux.h	/^#define CLIENT_SIZECHANGED /;"	d
CLIENT_STATUS	src/dev/tmux/tmux.h	/^#define CLIENT_STATUS /;"	d
CLIENT_STATUSFORCE	src/dev/tmux/tmux.h	/^#define CLIENT_STATUSFORCE /;"	d
CLIENT_SUSPENDED	src/dev/tmux/tmux.h	/^#define CLIENT_SUSPENDED /;"	d
CLIENT_TERMINAL	src/dev/tmux/tmux.h	/^#define CLIENT_TERMINAL /;"	d
CLIENT_TRIPLECLICK	src/dev/tmux/tmux.h	/^#define CLIENT_TRIPLECLICK /;"	d
CLIENT_UTF8	src/dev/tmux/tmux.h	/^#define CLIENT_UTF8 /;"	d
CLParser	src/dev/ninja/src/clparser.h	/^struct CLParser {$/;"	s
CLWrapper	src/dev/ninja/src/msvc_helper.h	/^  CLWrapper() : env_block_(NULL) {}$/;"	f	struct:CLWrapper
CLWrapper	src/dev/ninja/src/msvc_helper.h	/^struct CLWrapper {$/;"	s
CLoader	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^class CLoader(CParser, Constructor, Resolver):$/;"	c
CLoader	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^class CLoader(CParser, Constructor, Resolver):$/;"	c
CMDQ_CALLBACK	src/dev/tmux/tmux.h	/^	CMDQ_CALLBACK,$/;"	e	enum:cmdq_type
CMDQ_COMMAND	src/dev/tmux/tmux.h	/^	CMDQ_COMMAND,$/;"	e	enum:cmdq_type
CMDQ_FIRED	src/dev/tmux/tmux.h	/^#define CMDQ_FIRED /;"	d
CMDQ_NOHOOKS	src/dev/tmux/tmux.h	/^#define CMDQ_NOHOOKS /;"	d
CMDQ_SHARED_REPEAT	src/dev/tmux/tmux.h	/^#define CMDQ_SHARED_REPEAT /;"	d
CMDQ_WAITING	src/dev/tmux/tmux.h	/^#define CMDQ_WAITING /;"	d
CMD_AFTERHOOK	src/dev/tmux/tmux.h	/^#define CMD_AFTERHOOK /;"	d
CMD_BUFFER_USAGE	src/dev/tmux/tmux.h	/^#define CMD_BUFFER_USAGE /;"	d
CMD_CONTROL	src/dev/tmux/tmux.h	/^#define CMD_CONTROL /;"	d
CMD_FIND_CANFAIL	src/dev/tmux/tmux.h	/^#define CMD_FIND_CANFAIL /;"	d
CMD_FIND_DEFAULT_MARKED	src/dev/tmux/tmux.h	/^#define CMD_FIND_DEFAULT_MARKED /;"	d
CMD_FIND_EXACT_SESSION	src/dev/tmux/tmux.h	/^#define CMD_FIND_EXACT_SESSION /;"	d
CMD_FIND_EXACT_WINDOW	src/dev/tmux/tmux.h	/^#define CMD_FIND_EXACT_WINDOW /;"	d
CMD_FIND_PANE	src/dev/tmux/tmux.h	/^	CMD_FIND_PANE,$/;"	e	enum:cmd_find_type
CMD_FIND_PREFER_UNATTACHED	src/dev/tmux/tmux.h	/^#define CMD_FIND_PREFER_UNATTACHED /;"	d
CMD_FIND_QUIET	src/dev/tmux/tmux.h	/^#define CMD_FIND_QUIET /;"	d
CMD_FIND_SESSION	src/dev/tmux/tmux.h	/^	CMD_FIND_SESSION,$/;"	e	enum:cmd_find_type
CMD_FIND_WINDOW	src/dev/tmux/tmux.h	/^	CMD_FIND_WINDOW,$/;"	e	enum:cmd_find_type
CMD_FIND_WINDOW_INDEX	src/dev/tmux/tmux.h	/^#define CMD_FIND_WINDOW_INDEX /;"	d
CMD_READONLY	src/dev/tmux/tmux.h	/^#define CMD_READONLY /;"	d
CMD_RETURN_ERROR	src/dev/tmux/tmux.h	/^	CMD_RETURN_ERROR = -1,$/;"	e	enum:cmd_retval
CMD_RETURN_NORMAL	src/dev/tmux/tmux.h	/^	CMD_RETURN_NORMAL = 0,$/;"	e	enum:cmd_retval
CMD_RETURN_STOP	src/dev/tmux/tmux.h	/^	CMD_RETURN_STOP$/;"	e	enum:cmd_retval
CMD_RETURN_WAIT	src/dev/tmux/tmux.h	/^	CMD_RETURN_WAIT,$/;"	e	enum:cmd_retval
CMD_SRCDST_CLIENT_USAGE	src/dev/tmux/tmux.h	/^#define CMD_SRCDST_CLIENT_USAGE /;"	d
CMD_SRCDST_PANE_USAGE	src/dev/tmux/tmux.h	/^#define CMD_SRCDST_PANE_USAGE /;"	d
CMD_SRCDST_SESSION_USAGE	src/dev/tmux/tmux.h	/^#define CMD_SRCDST_SESSION_USAGE /;"	d
CMD_SRCDST_WINDOW_USAGE	src/dev/tmux/tmux.h	/^#define CMD_SRCDST_WINDOW_USAGE /;"	d
CMD_STARTSERVER	src/dev/tmux/tmux.h	/^#define CMD_STARTSERVER /;"	d
CMD_TARGET_CLIENT_USAGE	src/dev/tmux/tmux.h	/^#define CMD_TARGET_CLIENT_USAGE /;"	d
CMD_TARGET_PANE_USAGE	src/dev/tmux/tmux.h	/^#define CMD_TARGET_PANE_USAGE /;"	d
CMD_TARGET_SESSION_USAGE	src/dev/tmux/tmux.h	/^#define CMD_TARGET_SESSION_USAGE /;"	d
CMD_TARGET_WINDOW_USAGE	src/dev/tmux/tmux.h	/^#define CMD_TARGET_WINDOW_USAGE /;"	d
CMSG_ALIGN	src/dev/tmux/compat.h	/^#define CMSG_ALIGN /;"	d
CMSG_ALIGN	src/dev/tmux/compat.h	/^#define CMSG_ALIGN(/;"	d
CMSG_FIRSTHDR	src/dev/tmux/compat.h	/^#define CMSG_FIRSTHDR(/;"	d
CMSG_LEN	src/dev/tmux/compat.h	/^#define CMSG_LEN(/;"	d
CMSG_SPACE	src/dev/tmux/compat.h	/^#define CMSG_SPACE(/;"	d
COLON	src/dev/ninja/src/lexer.h	/^    COLON,$/;"	e	enum:Lexer::Token
COLOUR_FLAG_256	src/dev/tmux/tmux.h	/^#define COLOUR_FLAG_256 /;"	d
COLOUR_FLAG_RGB	src/dev/tmux/tmux.h	/^#define COLOUR_FLAG_RGB /;"	d
COMMANDS	src/dev/tmux/tmux.1	/^.Sh COMMANDS$/;"	s
COMMANDS	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/doc/man/man1/zplug.1	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "COMMANDS"$/;"	s	title:ZPLUG
COMPAT_H	src/dev/tmux/compat.h	/^#define COMPAT_H$/;"	d
COMPILE	src/dev/tmux/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/dev/tmux/Makefile.in	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIGURATION	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/doc/man/man1/zplug.1	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIGURATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "CONFIGURATION"$/;"	s	title:ZPLUG
CONFIG_CLEAN_FILES	src/dev/tmux/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/dev/tmux/Makefile.in	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/dev/tmux/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/dev/tmux/Makefile.in	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONTROL	src/dev/tmux/tmux.1	/^.Sh CONTROL MODE$/;"	s
CONTROL_SHOULD_NOTIFY_CLIENT	src/dev/tmux/control-notify.c	/^#define CONTROL_SHOULD_NOTIFY_CLIENT(/;"	d	file:
COPYING	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/doc/man/man1/zplug-check.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-CHECK
COPYING	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-CLEAN
COPYING	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-CLEAR
COPYING	src/zplug/doc/man/man1/zplug-info.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INFO
COPYING	src/zplug/doc/man/man1/zplug-install.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INSTALL
COPYING	src/zplug/doc/man/man1/zplug-list.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LIST
COPYING	src/zplug/doc/man/man1/zplug-load.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/doc/man/man1/zplug-status.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-STATUS
COPYING	src/zplug/doc/man/man1/zplug-update.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-UPDATE
COPYING	src/zplug/doc/man/man1/zplug.1	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DEPTH
COPYING	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INSTALL
COPYING	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INSTALL
COPYING	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/doc/man/man5/zplug-as.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-AS
COPYING	src/zplug/doc/man/man5/zplug-at.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-AT
COPYING	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-AT
COPYING	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DEFER
COPYING	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DEPTH
COPYING	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DIR
COPYING	src/zplug/doc/man/man5/zplug-do.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
COPYING	src/zplug/doc/man/man5/zplug-from.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-FROM
COPYING	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-FROZEN
COPYING	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
COPYING	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
COPYING	src/zplug/doc/man/man5/zplug-if.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-IF
COPYING	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-IGNORE
COPYING	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LAZY
COPYING	src/zplug/doc/man/man5/zplug-of.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-USE
COPYING	src/zplug/doc/man/man5/zplug-on.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-ON
COPYING	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-RENAME\\-TO
COPYING	src/zplug/doc/man/man5/zplug-use.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-USE
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-CHECK
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-CLEAN
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-CLEAR
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INFO
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INSTALL
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LIST
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-STATUS
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-UPDATE
COPYING	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DEPTH
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INSTALL
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "COPYING"$/;"	s	title:ZPLUG
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-INSTALL
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LOAD
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-AS
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-AT
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-AT
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DEFER
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DEPTH
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-DIR
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-FROM
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-FROZEN
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-IF
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-IGNORE
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-LAZY
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-USE
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-ON
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-RENAME\\-TO
COPYING	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "COPYING"$/;"	s	title:ZPLUG\\-USE
CPP	src/dev/tmux/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/dev/tmux/Makefile.in	/^CPP = @CPP@$/;"	m
CPPFLAGS	src/dev/tmux/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/dev/tmux/Makefile.in	/^CPPFLAGS = @CPPFLAGS@$/;"	m
CParser	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^cdef class CParser:$/;"	c
CSCOPE	src/dev/tmux/Makefile	/^CSCOPE = cscope$/;"	m
CSCOPE	src/dev/tmux/Makefile.in	/^CSCOPE = cscope$/;"	m
CSafeDumper	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^class CSafeDumper(CEmitter, SafeRepresenter, Resolver):$/;"	c
CSafeDumper	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^class CSafeDumper(CEmitter, SafeRepresenter, Resolver):$/;"	c
CSafeLoader	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^class CSafeLoader(CParser, SafeConstructor, Resolver):$/;"	c
CSafeLoader	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^class CSafeLoader(CParser, SafeConstructor, Resolver):$/;"	c
CTAGS	src/dev/tmux/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/dev/tmux/Makefile	/^CTAGS: ctags$/;"	t
CTAGS	src/dev/tmux/Makefile.in	/^CTAGS = ctags$/;"	m
CTAGS	src/dev/tmux/Makefile.in	/^CTAGS: ctags$/;"	t
CURSORDRAG_ENDSEL	src/dev/tmux/window-copy.c	/^		CURSORDRAG_ENDSEL,	\/* end is synchronized with cursor *\/$/;"	e	enum:window_copy_mode_data::__anon4b4b36d80303	file:
CURSORDRAG_NONE	src/dev/tmux/window-copy.c	/^		CURSORDRAG_NONE,	\/* selection is independent of cursor *\/$/;"	e	enum:window_copy_mode_data::__anon4b4b36d80303	file:
CURSORDRAG_SEL	src/dev/tmux/window-copy.c	/^		CURSORDRAG_SEL,		\/* start is synchronized with cursor *\/$/;"	e	enum:window_copy_mode_data::__anon4b4b36d80303	file:
CXX	src/dev/ninja/configure.py	/^    CXX = 'cl'$/;"	v
CXX	src/dev/ninja/configure.py	/^CXX = configure_env.get('CXX', 'g++')$/;"	v
CYGPATH_W	src/dev/tmux/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/dev/tmux/Makefile.in	/^CYGPATH_W = @CYGPATH_W@$/;"	m
Cache	src/dev/ninja/src/disk_interface.h	/^  typedef map<string, DirCache> Cache;$/;"	t	struct:RealDiskInterface	typeref:typename:map<string,DirCache>
CalculateProcessorLoad	src/dev/ninja/src/util.cc	/^static double CalculateProcessorLoad(uint64_t idle_ticks, uint64_t total_ticks)$/;"	f	typeref:typename:double	file:
CanRunMore	src/dev/ninja/src/build.cc	/^bool DryRunCommandRunner::CanRunMore() {$/;"	f	class:__anon965c94440110::DryRunCommandRunner	typeref:typename:bool
CanRunMore	src/dev/ninja/src/build.cc	/^bool RealCommandRunner::CanRunMore() {$/;"	f	class:RealCommandRunner	typeref:typename:bool
CanRunMore	src/dev/ninja/src/build_test.cc	/^bool FakeCommandRunner::CanRunMore() {$/;"	f	class:FakeCommandRunner	typeref:typename:bool
CanonicalError	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^class CanonicalError(yaml.YAMLError):$/;"	c
CanonicalError	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^class CanonicalError(yaml.YAMLError):$/;"	c
CanonicalLoader	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^class CanonicalLoader(CanonicalScanner, CanonicalParser,$/;"	c
CanonicalLoader	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^class CanonicalLoader(CanonicalScanner, CanonicalParser,$/;"	c
CanonicalParser	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^class CanonicalParser:$/;"	c
CanonicalParser	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^class CanonicalParser:$/;"	c
CanonicalScanner	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^class CanonicalScanner:$/;"	c
CanonicalScanner	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^class CanonicalScanner:$/;"	c
CanonicalizePath	src/dev/ninja/src/util.cc	/^bool CanonicalizePath(char* path, size_t* len, unsigned int* slash_bits,$/;"	f	typeref:typename:bool
CanonicalizePath	src/dev/ninja/src/util.cc	/^bool CanonicalizePath(string* path, unsigned int* slash_bits, string* err) {$/;"	f	typeref:typename:bool
CanonicalizePath	src/dev/ninja/src/util_test.cc	/^bool CanonicalizePath(string* path, string* err) {$/;"	f	namespace:__anon713809b10110	typeref:typename:bool
Check	src/dev/ninja/src/ninja_test.cc	/^bool testing::Test::Check(bool condition, const char* file, int line,$/;"	f	class:testing::Test	typeref:typename:bool
CheckDependencyCycle	src/dev/ninja/src/build.cc	/^bool Plan::CheckDependencyCycle(Node* node, const vector<Node*>& stack,$/;"	f	class:Plan	typeref:typename:bool
CheckNinjaVersion	src/dev/ninja/src/version.cc	/^void CheckNinjaVersion(const string& version) {$/;"	f	typeref:typename:void
ChooseTool	src/dev/ninja/src/ninja.cc	/^const Tool* ChooseTool(const string& tool_name) {$/;"	f	namespace:__anon193baac40110	typeref:typename:const Tool *
Clean	meta/dotbot/plugins/clean.py	/^class Clean(dotbot.Plugin):$/;"	c
CleanAll	src/dev/ninja/src/clean.cc	/^int Cleaner::CleanAll(bool generator) {$/;"	f	class:Cleaner	typeref:typename:int
CleanNode	src/dev/ninja/src/build.cc	/^bool Plan::CleanNode(DependencyScan* scan, Node* node, string* err) {$/;"	f	class:Plan	typeref:typename:bool
CleanRule	src/dev/ninja/src/clean.cc	/^int Cleaner::CleanRule(const Rule* rule) {$/;"	f	class:Cleaner	typeref:typename:int
CleanRule	src/dev/ninja/src/clean.cc	/^int Cleaner::CleanRule(const char* rule) {$/;"	f	class:Cleaner	typeref:typename:int
CleanRules	src/dev/ninja/src/clean.cc	/^int Cleaner::CleanRules(int rule_count, char* rules[]) {$/;"	f	class:Cleaner	typeref:typename:int
CleanTarget	src/dev/ninja/src/clean.cc	/^int Cleaner::CleanTarget(Node* target) {$/;"	f	class:Cleaner	typeref:typename:int
CleanTarget	src/dev/ninja/src/clean.cc	/^int Cleaner::CleanTarget(const char* target) {$/;"	f	class:Cleaner	typeref:typename:int
CleanTargets	src/dev/ninja/src/clean.cc	/^int Cleaner::CleanTargets(int target_count, char* targets[]) {$/;"	f	class:Cleaner	typeref:typename:int
CleanTest	src/dev/ninja/src/clean_test.cc	/^struct CleanTest : public StateTestWithBuiltinRules {$/;"	s	file:
Cleaner	src/dev/ninja/src/clean.cc	/^Cleaner::Cleaner(State* state, const BuildConfig& config)$/;"	f	class:Cleaner
Cleaner	src/dev/ninja/src/clean.cc	/^Cleaner::Cleaner(State* state,$/;"	f	class:Cleaner
Cleaner	src/dev/ninja/src/clean.h	/^struct Cleaner {$/;"	s
Cleanup	src/dev/ninja/src/build.cc	/^void Builder::Cleanup() {$/;"	f	class:Builder	typeref:typename:void
Cleanup	src/dev/ninja/src/test.cc	/^void ScopedTempDir::Cleanup() {$/;"	f	class:ScopedTempDir	typeref:typename:void
Clear	src/dev/ninja/src/eval_env.h	/^  void Clear() { parsed_.clear(); }$/;"	f	struct:EvalString	typeref:typename:void
Clear	src/dev/ninja/src/subprocess-posix.cc	/^void SubprocessSet::Clear() {$/;"	f	class:SubprocessSet	typeref:typename:void
Clear	src/dev/ninja/src/subprocess-win32.cc	/^void SubprocessSet::Clear() {$/;"	f	class:SubprocessSet	typeref:typename:void
Close	src/dev/ninja/src/build_log.cc	/^void BuildLog::Close() {$/;"	f	class:BuildLog	typeref:typename:void
Close	src/dev/ninja/src/deps_log.cc	/^void DepsLog::Close() {$/;"	f	class:DepsLog	typeref:typename:void
CollectTarget	src/dev/ninja/src/ninja.cc	/^Node* NinjaMain::CollectTarget(const char* cpath, string* err) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:Node *
CollectTargetsFromArgs	src/dev/ninja/src/ninja.cc	/^bool NinjaMain::CollectTargetsFromArgs(int argc, char* argv[],$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:bool
CollectionEndEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class CollectionEndEvent(Event):$/;"	c
CollectionEndEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class CollectionEndEvent(Event):$/;"	c
CollectionNode	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^class CollectionNode(Node):$/;"	c
CollectionNode	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^class CollectionNode(Node):$/;"	c
CollectionStartEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class CollectionStartEvent(NodeEvent):$/;"	c
CollectionStartEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class CollectionStartEvent(NodeEvent):$/;"	c
Color	meta/dotbot/dotbot/messenger/color.py	/^class Color(object):$/;"	c
CommandRunner	src/dev/ninja/src/build.h	/^struct CommandRunner {$/;"	s
CompareEdgesByOutput	src/dev/ninja/src/build_test.cc	/^    struct CompareEdgesByOutput {$/;"	s	function:PlanTest::FindWorkSorted	file:
Composer	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^class Composer(object):$/;"	c
Composer	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^class Composer:$/;"	c
ComposerError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ComposerError = yaml.composer.ComposerError$/;"	v
ComposerError	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^class ComposerError(MarkedYAMLError):$/;"	c
ComposerError	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^class ComposerError(MarkedYAMLError):$/;"	c
Config	languages/python/pdbrc.py	/^class Config(pdb.DefaultConfig):$/;"	c
ConfigReader	meta/dotbot/dotbot/config.py	/^class ConfigReader(object):$/;"	c
Constructor	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^class Constructor(SafeConstructor):$/;"	c
Constructor	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^class Constructor(SafeConstructor):$/;"	c
ConstructorError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ConstructorError = yaml.constructor.ConstructorError$/;"	v
ConstructorError	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^class ConstructorError(MarkedYAMLError):$/;"	c
ConstructorError	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^class ConstructorError(MarkedYAMLError):$/;"	c
Context	meta/dotbot/dotbot/context.py	/^class Context(object):$/;"	c
Create	src/dev/ninja/src/test.cc	/^void VirtualFileSystem::Create(const string& path,$/;"	f	class:VirtualFileSystem	typeref:typename:void
CreateAndEnter	src/dev/ninja/src/test.cc	/^void ScopedTempDir::CreateAndEnter(const string& name) {$/;"	f	class:ScopedTempDir	typeref:typename:void
CreatePhonyInEdge	src/dev/ninja/src/graph.cc	/^void ImplicitDepLoader::CreatePhonyInEdge(Node* node) {$/;"	f	class:ImplicitDepLoader	typeref:typename:void
CreateWin32MiniDump	src/dev/ninja/src/minidump-win32.cc	/^void CreateWin32MiniDump(_EXCEPTION_POINTERS* pep) {$/;"	f	typeref:typename:void
DATA	meta/dotbot/lib/pyyaml/tests/lib/test_appliance.py	/^DATA = 'tests\/data'$/;"	v
DATA	meta/dotbot/lib/pyyaml/tests/lib3/test_appliance.py	/^DATA = 'tests\/data'$/;"	v
DEBUG	meta/dotbot/dotbot/messenger/level.py	/^    DEBUG = 10$/;"	v	class:Level
DEFAULT	src/dev/ninja/src/lexer.h	/^    DEFAULT,$/;"	e	enum:Lexer::Token
DEFAULT_INCLUDES	src/dev/tmux/Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	src/dev/tmux/Makefile.in	/^DEFAULT_INCLUDES = -I.@am__isrc@$/;"	m
DEFAULT_MAPPING_TAG	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    DEFAULT_MAPPING_TAG = u'tag:yaml.org,2002:map'$/;"	v	class:BaseResolver
DEFAULT_MAPPING_TAG	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    DEFAULT_MAPPING_TAG = 'tag:yaml.org,2002:map'$/;"	v	class:BaseResolver
DEFAULT_SCALAR_TAG	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    DEFAULT_SCALAR_TAG = u'tag:yaml.org,2002:str'$/;"	v	class:BaseResolver
DEFAULT_SCALAR_TAG	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    DEFAULT_SCALAR_TAG = 'tag:yaml.org,2002:str'$/;"	v	class:BaseResolver
DEFAULT_SEQUENCE_TAG	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    DEFAULT_SEQUENCE_TAG = u'tag:yaml.org,2002:seq'$/;"	v	class:BaseResolver
DEFAULT_SEQUENCE_TAG	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    DEFAULT_SEQUENCE_TAG = 'tag:yaml.org,2002:seq'$/;"	v	class:BaseResolver
DEFAULT_TAGS	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    DEFAULT_TAGS = {$/;"	v	class:Parser
DEFAULT_TAGS	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    DEFAULT_TAGS = {$/;"	v	class:Parser
DEFAULT_TAG_PREFIXES	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    DEFAULT_TAG_PREFIXES = {$/;"	v	class:Emitter
DEFAULT_TAG_PREFIXES	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    DEFAULT_TAG_PREFIXES = {$/;"	v	class:Emitter
DEFS	src/dev/tmux/Makefile	/^DEFS = -DPACKAGE_NAME=\\"tmux\\" -DPACKAGE_TARNAME=\\"tmux\\" -DPACKAGE_VERSION=\\"master\\" -DP/;"	m
DEFS	src/dev/tmux/Makefile.in	/^DEFS = @DEFS@$/;"	m
DEPDIR	src/dev/tmux/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/dev/tmux/Makefile.in	/^DEPDIR = @DEPDIR@$/;"	m
DESCRIPTION	meta/dotbot/lib/pyyaml/setup.py	/^DESCRIPTION = "YAML parser and emitter for Python"$/;"	v
DESCRIPTION	src/dev/tmux/tmux.1	/^.Sh DESCRIPTION$/;"	s
DESCRIPTION	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/doc/man/man1/zplug-check.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-CHECK
DESCRIPTION	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-CLEAN
DESCRIPTION	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-CLEAR
DESCRIPTION	src/zplug/doc/man/man1/zplug-info.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INFO
DESCRIPTION	src/zplug/doc/man/man1/zplug-install.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INSTALL
DESCRIPTION	src/zplug/doc/man/man1/zplug-list.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LIST
DESCRIPTION	src/zplug/doc/man/man1/zplug-load.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/doc/man/man1/zplug-status.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-STATUS
DESCRIPTION	src/zplug/doc/man/man1/zplug-update.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-UPDATE
DESCRIPTION	src/zplug/doc/man/man1/zplug.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DEPTH
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INSTALL
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INSTALL
DESCRIPTION	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/doc/man/man5/zplug-as.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-AS
DESCRIPTION	src/zplug/doc/man/man5/zplug-at.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-AT
DESCRIPTION	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-AT
DESCRIPTION	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DEFER
DESCRIPTION	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DEPTH
DESCRIPTION	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DIR
DESCRIPTION	src/zplug/doc/man/man5/zplug-do.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
DESCRIPTION	src/zplug/doc/man/man5/zplug-from.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-FROM
DESCRIPTION	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-FROZEN
DESCRIPTION	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
DESCRIPTION	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
DESCRIPTION	src/zplug/doc/man/man5/zplug-if.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-IF
DESCRIPTION	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-IGNORE
DESCRIPTION	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LAZY
DESCRIPTION	src/zplug/doc/man/man5/zplug-of.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-USE
DESCRIPTION	src/zplug/doc/man/man5/zplug-on.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-ON
DESCRIPTION	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-RENAME\\-TO
DESCRIPTION	src/zplug/doc/man/man5/zplug-use.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-USE
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-CHECK
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-CLEAN
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-CLEAR
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INFO
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INSTALL
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LIST
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-STATUS
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-UPDATE
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DEPTH
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INSTALL
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-INSTALL
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LOAD
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-AS
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-AT
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-AT
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DEFER
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DEPTH
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-DIR
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-FROM
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-FROZEN
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-IF
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-IGNORE
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-LAZY
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-USE
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-ON
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-RENAME\\-TO
DESCRIPTION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "DESCRIPTION"$/;"	s	title:ZPLUG\\-USE
DIRECTIVE	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    DIRECTIVE = u'%YAML 1.1'$/;"	v	class:CanonicalScanner
DIRECTIVE	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    DIRECTIVE = '%YAML 1.1'$/;"	v	class:CanonicalScanner
DISPLAY_MESSAGE_TEMPLATE	src/dev/tmux/cmd-display-message.c	/^#define DISPLAY_MESSAGE_TEMPLATE	/;"	d	file:
DISTFILES	src/dev/tmux/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/dev/tmux/Makefile.in	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	src/dev/tmux/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_ARCHIVES	src/dev/tmux/Makefile.in	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	src/dev/tmux/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_COMMON	src/dev/tmux/Makefile.in	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	src/dev/tmux/Makefile	/^DIST_SOURCES = $(dist_tmux_SOURCES)$/;"	m
DIST_SOURCES	src/dev/tmux/Makefile.in	/^DIST_SOURCES = $(dist_tmux_SOURCES)$/;"	m
DIST_TARGETS	src/dev/tmux/Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DIST_TARGETS	src/dev/tmux/Makefile.in	/^DIST_TARGETS = dist-gzip$/;"	m
DOC_DIR	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^DOC_DIR?=$(DESTDIR)$(PREFIX)\/share\/doc\/$(NAME)$/;"	m
DOUBLE	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
DOWN	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
DOWNLOAD_URL	meta/dotbot/lib/pyyaml/setup.py	/^DOWNLOAD_URL = "http:\/\/pyyaml.org\/download\/pyyaml\/%s-%s.tar.gz" % (NAME, VERSION)$/;"	v
DRAG	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
DebugEnable	src/dev/ninja/src/ninja.cc	/^bool DebugEnable(const string& name) {$/;"	f	namespace:__anon193baac40110	typeref:typename:bool
DefaultNodes	src/dev/ninja/src/state.cc	/^vector<Node*> State::DefaultNodes(string* err) const {$/;"	f	class:State	typeref:typename:vector<Node * >
DelayEdge	src/dev/ninja/src/state.cc	/^void Pool::DelayEdge(Edge* edge) {$/;"	f	class:Pool	typeref:typename:void
DelayedEdges	src/dev/ninja/src/state.h	/^  typedef set<Edge*,bool(*)(const Edge*, const Edge*)> DelayedEdges;$/;"	t	struct:Pool
DependencyScan	src/dev/ninja/src/graph.h	/^  DependencyScan(State* state, BuildLog* build_log, DepsLog* deps_log,$/;"	f	struct:DependencyScan
DependencyScan	src/dev/ninja/src/graph.h	/^struct DependencyScan {$/;"	s
DepfileParser	src/dev/ninja/src/depfile_parser.h	/^struct DepfileParser {$/;"	s
DepfileParserTest	src/dev/ninja/src/depfile_parser_test.cc	/^struct DepfileParserTest : public testing::Test {$/;"	s	file:
Deps	src/dev/ninja/src/deps_log.h	/^    Deps(int mtime, int node_count)$/;"	f	struct:DepsLog::Deps
Deps	src/dev/ninja/src/deps_log.h	/^  struct Deps {$/;"	s	struct:DepsLog
DepsLog	src/dev/ninja/src/deps_log.h	/^  DepsLog() : needs_recompaction_(false), file_(NULL) {}$/;"	f	struct:DepsLog
DepsLog	src/dev/ninja/src/deps_log.h	/^struct DepsLog {$/;"	s
DepsLogTest	src/dev/ninja/src/deps_log_test.cc	/^struct DepsLogTest : public testing::Test {$/;"	s	namespace:__anon9efc7f800110	file:
DescribeLastError	src/dev/ninja/src/lexer.cc	/^string Lexer::DescribeLastError() {$/;"	f	class:Lexer	typeref:typename:string
DescribeLastError	src/dev/ninja/src/lexer.in.cc	/^string Lexer::DescribeLastError() {$/;"	f	class:Lexer	typeref:typename:string
DiffOrig	editors/vim/config/mappings.vim	/^command! DiffOrig vert new | setlocal bt=nofile | r # | 0d_ | diffthis | wincmd p | diffthis$/;"	c
DirCache	src/dev/ninja/src/disk_interface.h	/^  typedef map<string, TimeStamp> DirCache;$/;"	t	struct:RealDiskInterface	typeref:typename:map<string,TimeStamp>
DirName	src/dev/ninja/src/disk_interface.cc	/^string DirName(const string& path) {$/;"	f	namespace:__anondfd6196f0110	typeref:typename:string
DirectiveToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^DirectiveToken = yaml.tokens.DirectiveToken$/;"	v
DirectiveToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class DirectiveToken(Token):$/;"	c
DirectiveToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class DirectiveToken(Token):$/;"	c
Dirty	src/dev/ninja/src/build_test.cc	/^void BuildTest::Dirty(const string& path) {$/;"	f	class:BuildTest	typeref:typename:void
DiskInterface	src/dev/ninja/src/disk_interface.h	/^struct DiskInterface: public FileReader {$/;"	s
DiskInterfaceTest	src/dev/ninja/src/disk_interface_test.cc	/^struct DiskInterfaceTest : public testing::Test {$/;"	s	namespace:__anonebbddeae0110	file:
DispatchError	meta/dotbot/dotbot/dispatcher.py	/^class DispatchError(Exception):$/;"	c
Dispatcher	meta/dotbot/dotbot/dispatcher.py	/^class Dispatcher(object):$/;"	c
Distribution	meta/dotbot/lib/pyyaml/setup.py	/^class Distribution(_Distribution):$/;"	c
DoCleanRule	src/dev/ninja/src/clean.cc	/^void Cleaner::DoCleanRule(const Rule* rule) {$/;"	f	class:Cleaner	typeref:typename:void
DoCleanTarget	src/dev/ninja/src/clean.cc	/^void Cleaner::DoCleanTarget(Node* target) {$/;"	f	class:Cleaner	typeref:typename:void
DoWork	src/dev/ninja/src/subprocess-posix.cc	/^bool SubprocessSet::DoWork() {$/;"	f	class:SubprocessSet	typeref:typename:bool
DoWork	src/dev/ninja/src/subprocess-win32.cc	/^bool SubprocessSet::DoWork() {$/;"	f	class:SubprocessSet	typeref:typename:bool
DocumentEndEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^DocumentEndEvent = yaml.events.DocumentEndEvent$/;"	v
DocumentEndEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class DocumentEndEvent(Event):$/;"	c
DocumentEndEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class DocumentEndEvent(Event):$/;"	c
DocumentEndToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^DocumentEndToken = yaml.tokens.DocumentEndToken$/;"	v
DocumentEndToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class DocumentEndToken(Token):$/;"	c
DocumentEndToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class DocumentEndToken(Token):$/;"	c
DocumentStartEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^DocumentStartEvent = yaml.events.DocumentStartEvent$/;"	v
DocumentStartEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class DocumentStartEvent(Event):$/;"	c
DocumentStartEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class DocumentStartEvent(Event):$/;"	c
DocumentStartToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^DocumentStartToken = yaml.tokens.DocumentStartToken$/;"	v
DocumentStartToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class DocumentStartToken(Token):$/;"	c
DocumentStartToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class DocumentStartToken(Token):$/;"	c
Done	src/dev/ninja/src/subprocess-posix.cc	/^bool Subprocess::Done() const {$/;"	f	class:Subprocess	typeref:typename:bool
Done	src/dev/ninja/src/subprocess-win32.cc	/^bool Subprocess::Done() const {$/;"	f	class:Subprocess	typeref:typename:bool
DryRunCommandRunner	src/dev/ninja/src/build.cc	/^struct DryRunCommandRunner : public CommandRunner {$/;"	s	namespace:__anon965c94440110	file:
Dump	src/dev/ninja/src/build.cc	/^void Plan::Dump() {$/;"	f	class:Plan	typeref:typename:void
Dump	src/dev/ninja/src/graph.cc	/^void Edge::Dump(const char* prefix) const {$/;"	f	class:Edge	typeref:typename:void
Dump	src/dev/ninja/src/graph.cc	/^void Node::Dump(const char* prefix) const {$/;"	f	class:Node	typeref:typename:void
Dump	src/dev/ninja/src/state.cc	/^void Pool::Dump() const {$/;"	f	class:Pool	typeref:typename:void
Dump	src/dev/ninja/src/state.cc	/^void State::Dump() {$/;"	f	class:State	typeref:typename:void
DumpMetrics	src/dev/ninja/src/ninja.cc	/^void NinjaMain::DumpMetrics() {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:void
Dumper	meta/dotbot/lib/pyyaml/lib/yaml/dumper.py	/^class Dumper(Emitter, Serializer, Representer, Resolver):$/;"	c
Dumper	meta/dotbot/lib/pyyaml/lib3/yaml/dumper.py	/^class Dumper(Emitter, Serializer, Representer, Resolver):$/;"	c
DupeEdgeAction	src/dev/ninja/src/manifest_parser.h	/^enum DupeEdgeAction {$/;"	g
ECHOPRT	src/dev/tmux/compat.h	/^#define ECHOPRT /;"	d
ECHO_C	src/dev/tmux/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/dev/tmux/Makefile.in	/^ECHO_C = @ECHO_C@$/;"	m
ECHO_N	src/dev/tmux/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/dev/tmux/Makefile.in	/^ECHO_N = @ECHO_N@$/;"	m
ECHO_T	src/dev/tmux/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/dev/tmux/Makefile.in	/^ECHO_T = @ECHO_T@$/;"	m
EGREP	src/dev/tmux/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/dev/tmux/Makefile.in	/^EGREP = @EGREP@$/;"	m
ELIDE	src/dev/ninja/src/line_printer.h	/^    ELIDE$/;"	e	enum:LinePrinter::LineType
EMSG	src/dev/tmux/compat/getopt.c	/^#define	EMSG	/;"	d	file:
END	src/dev/tmux/configure	/^    cat >&2 <<'END'$/;"	h
END	src/dev/tmux/configure	/^  cat >&2 <<'END'$/;"	h
END	src/dev/tmux/configure	/^cat > confinc << 'END'$/;"	h
ENVIRONMENT	src/dev/tmux/tmux.1	/^.Sh ENVIRONMENT$/;"	s
ENVIRONMENT VARIABLES	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/doc/man/man1/zplug-install.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-INSTALL
ENVIRONMENT VARIABLES	src/zplug/doc/man/man1/zplug-load.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
ENVIRONMENT VARIABLES	src/zplug/doc/man/man1/zplug.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-INSTALL
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-INSTALL
ENVIRONMENT VARIABLES	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-INSTALL
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-INSTALL
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-INSTALL
ENVIRONMENT VARIABLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "ENVIRONMENT VARIABLES"$/;"	s	title:ZPLUG\\-LOAD
EOF	meta/dotbot/test/tests/clean-missing.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/clean-nonexistent.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/clean-outside-force.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/clean-outside.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/config-blank.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/config-empty.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/config-json-tabs.bash	/^run_dotbot_json <<EOF$/;"	h
EOF	meta/dotbot/test/tests/config-json.bash	/^run_dotbot_json <<EOF$/;"	h
EOF	meta/dotbot/test/tests/defaults.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/find-python-executable.bash	/^PATH="$HOME\/tmp_bin" run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/find-python-executable.bash	/^cat >> ~\/tmp_bin\/python <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-default-source.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-environment-user-expansion-target.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-environment-variable-expansion-source-extended.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-environment-variable-expansion-source.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-environment-variable-expansion-target.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-environment-variable-unset.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-force-leaves-when-nonexistent.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-force-overwrite-symlink.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-leaves-file.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-relative.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-relink-leaves-file.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-relink-overwrite-symlink.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/link-relink-relative-leaves-file.bash	/^run_dotbot <<EOF$/;"	h
EOF	meta/dotbot/test/tests/plugin-dir.bash	/^cat > ${DOTFILES}\/plugins\/test.py <<EOF$/;"	h
EOF	meta/dotbot/test/tests/plugin-dir.bash	/^run_dotbot --plugin-dir plugins <<EOF$/;"	h
EOF	meta/dotbot/test/tests/plugin.bash	/^cat > ${DOTFILES}\/test.py <<EOF$/;"	h
EOF	meta/dotbot/test/tests/plugin.bash	/^run_dotbot --plugin test.py <<EOF$/;"	h
EOF	meta/dotbot/test/tests/shell-allow-stdout.bash	/^(run_dotbot | grep "^apple") <<EOF$/;"	h
EOF	meta/dotbot/test/tests/shell-compact-stdout.bash	/^(run_dotbot | grep "^apple") <<EOF$/;"	h
EOF	meta/dotbot/test/tests/shell-disables-stdout.bash	/^(run_dotbot | (! grep "^banana")) <<EOF$/;"	h
EOF	meta/dotbot/test/tests/shell-override-default.bash	/^(run_dotbot | (! grep "^apple")) <<EOF$/;"	h
EOF	src/dev/ninja/src/gen_doxygen_mainpage.sh	/^  cat <<EOF$/;"	h
EOF	src/dev/tmux/etc/config.guess	/^		    sed 's\/^		\/\/' << EOF >$dummy.c$/;"	h
EOF	src/dev/tmux/etc/config.guess	/^		sed 's\/^		\/\/' << EOF >$dummy.c$/;"	h
EOF	src/dev/tmux/etc/config.guess	/^	cat <<-EOF > $dummy.c$/;"	h
EOF	src/dev/tmux/etc/config.guess	/^	sed 's\/^	\/\/' << EOF >$dummy.c$/;"	h
EOF	src/dev/tmux/etc/config.guess	/^cat >&2 <<EOF$/;"	h
EOF	src/dev/tmux/regress/control-client-size.sh	/^cat <<EOF|$TMUX -C a >$TMP$/;"	h
EOF	src/dev/tmux/regress/control-client-size.sh	/^cat <<EOF|$TMUX -C new -x 100 -y 50 >$TMP$/;"	h
EOF	src/dev/tmux/regress/if-shell-TERM.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/dev/tmux/regress/if-shell-error.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/dev/tmux/regress/if-shell-nested.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/dev/tmux/regress/new-session-base-index.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/dev/tmux/regress/new-session-command.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/dev/tmux/regress/new-session-environment.sh	/^(cat <<EOF|cmp -s - $OUT) || exit 1$/;"	h
EOF	src/dev/tmux/regress/new-session-environment.sh	/^cat <<EOF >$SCRIPT$/;"	h
EOF	src/dev/tmux/regress/new-session-environment.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/dev/tmux/regress/new-session-no-client.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/dev/tmux/regress/new-window-command.sh	/^cat <<EOF >$TMP$/;"	h
EOF	src/zplug/misc/dev/release.zsh	/^data=$(cat <<EOF$/;"	h
EOF	src/zplug/repos/zplug/zplug/misc/dev/release.zsh	/^data=$(cat <<EOF$/;"	h
EOS	src/zplug/base/utils/awk.zsh	/^    ltsv_awk_script=$(cat <<-'EOS'$/;"	h
EOS	src/zplug/repos/zplug/zplug/base/utils/awk.zsh	/^    ltsv_awk_script=$(cat <<-'EOS'$/;"	h
EQUALS	src/dev/ninja/src/lexer.h	/^    EQUALS,$/;"	e	enum:Lexer::Token
ERROR	meta/dotbot/dotbot/messenger/level.py	/^    ERROR = 40$/;"	v	class:Level
ERROR	src/dev/ninja/src/lexer.h	/^    ERROR,$/;"	e	enum:Lexer::Token
ESCAPE_CODES	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    ESCAPE_CODES = {$/;"	v	class:Scanner
ESCAPE_CODES	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    ESCAPE_CODES = {$/;"	v	class:Scanner
ESCAPE_REPLACEMENTS	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    ESCAPE_REPLACEMENTS = {$/;"	v	class:Emitter
ESCAPE_REPLACEMENTS	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    ESCAPE_REPLACEMENTS = {$/;"	v	class:Scanner
ESCAPE_REPLACEMENTS	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    ESCAPE_REPLACEMENTS = {$/;"	v	class:Emitter
ESCAPE_REPLACEMENTS	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    ESCAPE_REPLACEMENTS = {$/;"	v	class:Scanner
ETAGS	src/dev/tmux/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/dev/tmux/Makefile.in	/^ETAGS = etags$/;"	m
EXAMPLES	src/dev/tmux/tmux.1	/^.Sh EXAMPLES$/;"	s
EXAMPLES	src/zplug/doc/man/man1/zplug-check.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-CHECK
EXAMPLES	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-CLEAN
EXAMPLES	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-CLEAR
EXAMPLES	src/zplug/doc/man/man1/zplug-info.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INFO
EXAMPLES	src/zplug/doc/man/man1/zplug-install.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INSTALL
EXAMPLES	src/zplug/doc/man/man1/zplug-list.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LIST
EXAMPLES	src/zplug/doc/man/man1/zplug-load.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/doc/man/man1/zplug-status.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-STATUS
EXAMPLES	src/zplug/doc/man/man1/zplug-update.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-UPDATE
EXAMPLES	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DEPTH
EXAMPLES	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INSTALL
EXAMPLES	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INSTALL
EXAMPLES	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/doc/man/man5/zplug-as.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-AS
EXAMPLES	src/zplug/doc/man/man5/zplug-at.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-AT
EXAMPLES	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-AT
EXAMPLES	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DEFER
EXAMPLES	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DEPTH
EXAMPLES	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DIR
EXAMPLES	src/zplug/doc/man/man5/zplug-do.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
EXAMPLES	src/zplug/doc/man/man5/zplug-from.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-FROM
EXAMPLES	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-FROZEN
EXAMPLES	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
EXAMPLES	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
EXAMPLES	src/zplug/doc/man/man5/zplug-if.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-IF
EXAMPLES	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-IGNORE
EXAMPLES	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LAZY
EXAMPLES	src/zplug/doc/man/man5/zplug-of.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-USE
EXAMPLES	src/zplug/doc/man/man5/zplug-on.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-ON
EXAMPLES	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-RENAME\\-TO
EXAMPLES	src/zplug/doc/man/man5/zplug-use.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-USE
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-CHECK
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-CLEAN
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-CLEAR
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INFO
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INSTALL
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LIST
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-STATUS
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-UPDATE
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DEPTH
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INSTALL
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-INSTALL
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LOAD
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-AS
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-AT
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-AT
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DEFER
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DEPTH
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-DIR
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-FROM
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-FROZEN
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-IF
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-IGNORE
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-LAZY
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-USE
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-ON
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-RENAME\\-TO
EXAMPLES	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "EXAMPLES"$/;"	s	title:ZPLUG\\-USE
EXE	src/dev/ninja/misc/write_fake_manifests.py	/^LIB, EXE = 0, 1$/;"	v
EXEEXT	src/dev/tmux/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/dev/tmux/Makefile.in	/^EXEEXT = @EXEEXT@$/;"	m
EXPECT_EQ	src/dev/ninja/src/test.h	/^#define EXPECT_EQ(/;"	d
EXPECT_FALSE	src/dev/ninja/src/test.h	/^#define EXPECT_FALSE(/;"	d
EXPECT_GE	src/dev/ninja/src/test.h	/^#define EXPECT_GE(/;"	d
EXPECT_GT	src/dev/ninja/src/test.h	/^#define EXPECT_GT(/;"	d
EXPECT_LE	src/dev/ninja/src/test.h	/^#define EXPECT_LE(/;"	d
EXPECT_LT	src/dev/ninja/src/test.h	/^#define EXPECT_LT(/;"	d
EXPECT_NE	src/dev/ninja/src/test.h	/^#define EXPECT_NE(/;"	d
EXPECT_TRUE	src/dev/ninja/src/test.h	/^#define EXPECT_TRUE(/;"	d
EXPLAIN	src/dev/ninja/src/debug_flags.h	/^#define EXPLAIN(/;"	d
EXTERNAL COMMANDS	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/doc/man/man1/zplug.1	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTERNAL COMMANDS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "EXTERNAL COMMANDS"$/;"	s	title:ZPLUG
EXTRA_DIST	src/dev/tmux/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	src/dev/tmux/Makefile.am	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	src/dev/tmux/Makefile.in	/^EXTRA_DIST = \\$/;"	m
EatWhitespace	src/dev/ninja/src/lexer.cc	/^void Lexer::EatWhitespace() {$/;"	f	class:Lexer	typeref:typename:void
EatWhitespace	src/dev/ninja/src/lexer.in.cc	/^void Lexer::EatWhitespace() {$/;"	f	class:Lexer	typeref:typename:void
Edge	src/dev/ninja/src/graph.h	/^  Edge() : rule_(NULL), pool_(NULL), env_(NULL),$/;"	f	struct:Edge
Edge	src/dev/ninja/src/graph.h	/^struct Edge {$/;"	s
EdgeEnv	src/dev/ninja/src/graph.cc	/^  EdgeEnv(Edge* edge, EscapeKind escape)$/;"	f	struct:EdgeEnv	file:
EdgeEnv	src/dev/ninja/src/graph.cc	/^struct EdgeEnv : public Env {$/;"	s	file:
EdgeFinished	src/dev/ninja/src/build.cc	/^void Plan::EdgeFinished(Edge* edge, EdgeResult result) {$/;"	f	class:Plan	typeref:typename:void
EdgeFinished	src/dev/ninja/src/state.cc	/^void Pool::EdgeFinished(const Edge& edge) {$/;"	f	class:Pool	typeref:typename:void
EdgeResult	src/dev/ninja/src/build.h	/^  enum EdgeResult {$/;"	g	struct:Plan
EdgeScheduled	src/dev/ninja/src/state.cc	/^void Pool::EdgeScheduled(const Edge& edge) {$/;"	f	class:Pool	typeref:typename:void
EdgeStatus	src/dev/ninja/src/build.h	/^  enum EdgeStatus {$/;"	g	struct:BuildStatus
EditDistance	src/dev/ninja/src/edit_distance.cc	/^int EditDistance(const StringPiece& s1,$/;"	f	typeref:typename:int
Elapsed	src/dev/ninja/src/build.h	/^    double Elapsed() const { return stopwatch_.Elapsed(); }$/;"	f	struct:BuildStatus::RateInfo	typeref:typename:double
Elapsed	src/dev/ninja/src/metrics.h	/^  double Elapsed() const {$/;"	f	struct:Stopwatch	typeref:typename:double
ElideMiddle	src/dev/ninja/src/util.cc	/^string ElideMiddle(const string& str, size_t width) {$/;"	f	typeref:typename:string
Emitter	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^class Emitter(object):$/;"	c
Emitter	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^class Emitter:$/;"	c
EmitterError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^EmitterError = yaml.emitter.EmitterError$/;"	v
EmitterError	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^class EmitterError(YAMLError):$/;"	c
EmitterError	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^class EmitterError(YAMLError):$/;"	c
EncodeJSONString	src/dev/ninja/src/ninja.cc	/^void EncodeJSONString(const char *str) {$/;"	f	namespace:__anon193baac40110	typeref:typename:void
EndsWith	src/dev/ninja/src/clparser.cc	/^bool EndsWith(const string& input, const string& needle) {$/;"	f	namespace:__anonda8a6bb00110	typeref:typename:bool
EnsureBuildDirExists	src/dev/ninja/src/ninja.cc	/^bool NinjaMain::EnsureBuildDirExists() {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:bool
Entries	src/dev/ninja/src/build_log.h	/^  typedef ExternalStringHashMap<LogEntry*>::Type Entries;$/;"	t	struct:BuildLog	typeref:typename:ExternalStringHashMap<LogEntry * >::Type
Entry	src/dev/ninja/src/test.h	/^  struct Entry {$/;"	s	struct:VirtualFileSystem
Env	src/dev/ninja/src/eval_env.h	/^struct Env {$/;"	s
Error	src/dev/ninja/src/lexer.cc	/^bool Lexer::Error(const string& message, string* err) {$/;"	f	class:Lexer	typeref:typename:bool
Error	src/dev/ninja/src/lexer.in.cc	/^bool Lexer::Error(const string& message, string* err) {$/;"	f	class:Lexer	typeref:typename:bool
Error	src/dev/ninja/src/util.cc	/^void Error(const char* msg, ...) {$/;"	f	typeref:typename:void
EscapeForDepfile	src/dev/ninja/src/msvc_helper-win32.cc	/^string EscapeForDepfile(const string& path) {$/;"	f	typeref:typename:string
EscapeKind	src/dev/ninja/src/graph.cc	/^  enum EscapeKind { kShellEscape, kDoNotEscape };$/;"	g	struct:EdgeEnv	file:
EvalString	src/dev/ninja/src/eval_env.h	/^struct EvalString {$/;"	s
Evaluate	src/dev/ninja/src/eval_env.cc	/^string EvalString::Evaluate(Env* env) const {$/;"	f	class:EvalString	typeref:typename:string
EvaluateCommand	src/dev/ninja/src/graph.cc	/^string Edge::EvaluateCommand(bool incl_rsp_file) {$/;"	f	class:Edge	typeref:typename:string
Event	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class Event(object):$/;"	c
Event	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class Event(object):$/;"	c
EventsLoader	meta/dotbot/lib/pyyaml/tests/lib/test_emitter.py	/^class EventsLoader(yaml.Loader):$/;"	c
EventsLoader	meta/dotbot/lib/pyyaml/tests/lib3/test_emitter.py	/^class EventsLoader(yaml.Loader):$/;"	c
ExceptionFilter	src/dev/ninja/src/ninja.cc	/^int ExceptionFilter(unsigned int code, struct _EXCEPTION_POINTERS *ep) {$/;"	f	namespace:__anon193baac40110	typeref:typename:int
ExitFailure	src/dev/ninja/src/exit_status.h	/^  ExitFailure,$/;"	e	enum:ExitStatus
ExitInterrupted	src/dev/ninja/src/exit_status.h	/^  ExitInterrupted$/;"	e	enum:ExitStatus
ExitStatus	src/dev/ninja/src/exit_status.h	/^enum ExitStatus {$/;"	g
ExitSuccess	src/dev/ninja/src/exit_status.h	/^  ExitSuccess,$/;"	e	enum:ExitStatus
ExpectToken	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::ExpectToken(Lexer::Token expected, string* err) {$/;"	f	class:ManifestParser	typeref:typename:bool
Extension	meta/dotbot/lib/pyyaml/setup.py	/^class Extension(_Extension):$/;"	c
ExternalStringHashMap	src/dev/ninja/src/hash_map.h	/^struct ExternalStringHashMap {$/;"	s
ExtractDeps	src/dev/ninja/src/build.cc	/^bool Builder::ExtractDeps(CommandRunner::Result* result,$/;"	f	class:Builder	typeref:typename:bool
FILES	src/dev/tmux/tmux.1	/^.Sh FILES$/;"	s
FORMATS	src/dev/tmux/tmux.1	/^.Sh FORMATS$/;"	s
FORMAT_BASENAME	src/dev/tmux/format.c	/^#define FORMAT_BASENAME /;"	d	file:
FORMAT_DIRNAME	src/dev/tmux/format.c	/^#define FORMAT_DIRNAME /;"	d	file:
FORMAT_FORCE	src/dev/tmux/tmux.h	/^#define FORMAT_FORCE /;"	d
FORMAT_NOJOBS	src/dev/tmux/tmux.h	/^#define FORMAT_NOJOBS /;"	d
FORMAT_NONE	src/dev/tmux/tmux.h	/^#define FORMAT_NONE /;"	d
FORMAT_PANE	src/dev/tmux/tmux.h	/^#define FORMAT_PANE /;"	d
FORMAT_STATUS	src/dev/tmux/tmux.h	/^#define FORMAT_STATUS /;"	d
FORMAT_SUBSTITUTE	src/dev/tmux/format.c	/^#define FORMAT_SUBSTITUTE /;"	d	file:
FORMAT_TIMESTRING	src/dev/tmux/format.c	/^#define FORMAT_TIMESTRING /;"	d	file:
FORMAT_WINDOW	src/dev/tmux/tmux.h	/^#define FORMAT_WINDOW /;"	d
FPARSELN_UNESCALL	src/dev/tmux/compat/fparseln.c	/^#define FPARSELN_UNESCALL /;"	d	file:
FPARSELN_UNESCCOMM	src/dev/tmux/compat/fparseln.c	/^#define FPARSELN_UNESCCOMM /;"	d	file:
FPARSELN_UNESCCONT	src/dev/tmux/compat/fparseln.c	/^#define FPARSELN_UNESCCONT /;"	d	file:
FPARSELN_UNESCESC	src/dev/tmux/compat/fparseln.c	/^#define FPARSELN_UNESCESC /;"	d	file:
FPARSELN_UNESCREST	src/dev/tmux/compat/fparseln.c	/^#define FPARSELN_UNESCREST /;"	d	file:
FULL	src/dev/ninja/src/line_printer.h	/^    FULL,$/;"	e	enum:LinePrinter::LineType
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-check.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-CHECK
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-CLEAN
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-CLEAR
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-info.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INFO
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-install.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INSTALL
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-list.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LIST
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-load.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-status.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-STATUS
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug-update.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-UPDATE
FURTHER DOCUMENTATION	src/zplug/doc/man/man1/zplug.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DEPTH
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INSTALL
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INSTALL
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-as.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-AS
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-at.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-AT
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-AT
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DEFER
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DEPTH
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DIR
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-do.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-from.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-FROM
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-FROZEN
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-if.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-IF
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-IGNORE
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LAZY
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-of.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-USE
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-on.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-ON
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-RENAME\\-TO
FURTHER DOCUMENTATION	src/zplug/doc/man/man5/zplug-use.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-USE
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-CHECK
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-CLEAN
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-CLEAR
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INFO
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INSTALL
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LIST
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-STATUS
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-UPDATE
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DEPTH
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INSTALL
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-INSTALL
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LOAD
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-AS
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-AT
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-AT
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DEFER
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DEPTH
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-DIR
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-FROM
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-FROZEN
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-IF
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-IGNORE
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-LAZY
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-USE
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-ON
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-RENAME\\-TO
FURTHER DOCUMENTATION	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "FURTHER DOCUMENTATION"$/;"	s	title:ZPLUG\\-USE
Failed	src/dev/ninja/src/test.h	/^  bool Failed() const { return failed_; }$/;"	f	class:testing::Test	typeref:typename:bool
FakeCommandRunner	src/dev/ninja/src/build_test.cc	/^  explicit FakeCommandRunner(VirtualFileSystem* fs) :$/;"	f	struct:FakeCommandRunner	file:
FakeCommandRunner	src/dev/ninja/src/build_test.cc	/^struct FakeCommandRunner : public CommandRunner {$/;"	s	file:
Fatal	src/dev/ninja/src/util.cc	/^void Fatal(const char* msg, ...) {$/;"	f	typeref:typename:void
FileExists	src/dev/ninja/src/clean.cc	/^bool Cleaner::FileExists(const string& path) {$/;"	f	class:Cleaner	typeref:typename:bool
FileMap	src/dev/ninja/src/test.h	/^  typedef map<string, Entry> FileMap;$/;"	t	struct:VirtualFileSystem	typeref:typename:map<string,Entry>
FileReader	src/dev/ninja/src/disk_interface.h	/^struct FileReader {$/;"	s
FileTimeToTickCount	src/dev/ninja/src/util.cc	/^static uint64_t FileTimeToTickCount(const FILETIME & ft)$/;"	f	typeref:typename:uint64_t	file:
FileWriter	src/dev/ninja/misc/write_fake_manifests.py	/^def FileWriter(path):$/;"	f
FilterInputFilename	src/dev/ninja/src/clparser.cc	/^bool CLParser::FilterInputFilename(string line) {$/;"	f	class:CLParser	typeref:typename:bool
FilterShowIncludes	src/dev/ninja/src/clparser.cc	/^string CLParser::FilterShowIncludes(const string& line,$/;"	f	class:CLParser	typeref:typename:string
FindWork	src/dev/ninja/src/build.cc	/^Edge* Plan::FindWork() {$/;"	f	class:Plan	typeref:typename:Edge *
FindWorkSorted	src/dev/ninja/src/build_test.cc	/^  void FindWorkSorted(deque<Edge*>* ret, int count) {$/;"	f	struct:PlanTest	typeref:typename:void	file:
Finish	src/dev/ninja/src/graphviz.cc	/^void GraphViz::Finish() {$/;"	f	class:GraphViz	typeref:typename:void
Finish	src/dev/ninja/src/subprocess-posix.cc	/^ExitStatus Subprocess::Finish() {$/;"	f	class:Subprocess	typeref:typename:ExitStatus
Finish	src/dev/ninja/src/subprocess-win32.cc	/^ExitStatus Subprocess::Finish() {$/;"	f	class:Subprocess	typeref:typename:ExitStatus
FinishCommand	src/dev/ninja/src/build.cc	/^bool Builder::FinishCommand(CommandRunner::Result* result, string* err) {$/;"	f	class:Builder	typeref:typename:bool
FixedOffset	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class FixedOffset(datetime.tzinfo):$/;"	c	function:_make_objects	file:
FixedOffset	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class FixedOffset(datetime.tzinfo):$/;"	c	function:_make_objects	file:
FlowEntryToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^FlowEntryToken = yaml.tokens.FlowEntryToken$/;"	v
FlowEntryToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class FlowEntryToken(Token):$/;"	c
FlowEntryToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class FlowEntryToken(Token):$/;"	c
FlowMappingEndToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^FlowMappingEndToken = yaml.tokens.FlowMappingEndToken$/;"	v
FlowMappingEndToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class FlowMappingEndToken(Token):$/;"	c
FlowMappingEndToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class FlowMappingEndToken(Token):$/;"	c
FlowMappingStartToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^FlowMappingStartToken = yaml.tokens.FlowMappingStartToken$/;"	v
FlowMappingStartToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class FlowMappingStartToken(Token):$/;"	c
FlowMappingStartToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class FlowMappingStartToken(Token):$/;"	c
FlowSequenceEndToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^FlowSequenceEndToken = yaml.tokens.FlowSequenceEndToken$/;"	v
FlowSequenceEndToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class FlowSequenceEndToken(Token):$/;"	c
FlowSequenceEndToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class FlowSequenceEndToken(Token):$/;"	c
FlowSequenceStartToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^FlowSequenceStartToken = yaml.tokens.FlowSequenceStartToken$/;"	v
FlowSequenceStartToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class FlowSequenceStartToken(Token):$/;"	c
FlowSequenceStartToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class FlowSequenceStartToken(Token):$/;"	c
FoldText	editors/vim/config/general.vim	/^function! FoldText()$/;"	f
FormatProgressStatus	src/dev/ninja/src/build.cc	/^string BuildStatus::FormatProgressStatus($/;"	f	class:BuildStatus	typeref:typename:string
GETOPT_H	src/dev/ninja/src/getopt.h	/^#define GETOPT_H$/;"	d
GETOPT_LONG_OPTION_T	src/dev/ninja/src/getopt.h	/^typedef struct GETOPT_LONG_OPTION_T$/;"	s
GETOPT_LONG_OPTION_T	src/dev/ninja/src/getopt.h	/^} GETOPT_LONG_OPTION_T;$/;"	t	typeref:struct:GETOPT_LONG_OPTION_T
GETOPT_ORDERING_T	src/dev/ninja/src/getopt.c	/^typedef enum GETOPT_ORDERING_T$/;"	g	file:
GETOPT_ORDERING_T	src/dev/ninja/src/getopt.c	/^} GETOPT_ORDERING_T;$/;"	t	typeref:enum:GETOPT_ORDERING_T	file:
GREEN	meta/dotbot/dotbot/messenger/color.py	/^    GREEN = '\\033[92m'$/;"	v	class:Color
GREP	src/dev/tmux/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/dev/tmux/Makefile.in	/^GREP = @GREP@$/;"	m
GRID_ATTR_BLINK	src/dev/tmux/tmux.h	/^#define GRID_ATTR_BLINK /;"	d
GRID_ATTR_BRIGHT	src/dev/tmux/tmux.h	/^#define GRID_ATTR_BRIGHT /;"	d
GRID_ATTR_CHARSET	src/dev/tmux/tmux.h	/^#define GRID_ATTR_CHARSET /;"	d
GRID_ATTR_DIM	src/dev/tmux/tmux.h	/^#define GRID_ATTR_DIM /;"	d
GRID_ATTR_HIDDEN	src/dev/tmux/tmux.h	/^#define GRID_ATTR_HIDDEN /;"	d
GRID_ATTR_ITALICS	src/dev/tmux/tmux.h	/^#define GRID_ATTR_ITALICS /;"	d
GRID_ATTR_REVERSE	src/dev/tmux/tmux.h	/^#define GRID_ATTR_REVERSE /;"	d
GRID_ATTR_STRIKETHROUGH	src/dev/tmux/tmux.h	/^#define GRID_ATTR_STRIKETHROUGH /;"	d
GRID_ATTR_UNDERSCORE	src/dev/tmux/tmux.h	/^#define GRID_ATTR_UNDERSCORE /;"	d
GRID_FLAG_BG256	src/dev/tmux/tmux.h	/^#define GRID_FLAG_BG256 /;"	d
GRID_FLAG_EXTENDED	src/dev/tmux/tmux.h	/^#define GRID_FLAG_EXTENDED /;"	d
GRID_FLAG_FG256	src/dev/tmux/tmux.h	/^#define GRID_FLAG_FG256 /;"	d
GRID_FLAG_NOPALETTE	src/dev/tmux/tmux.h	/^#define GRID_FLAG_NOPALETTE /;"	d
GRID_FLAG_PADDING	src/dev/tmux/tmux.h	/^#define GRID_FLAG_PADDING /;"	d
GRID_FLAG_SELECTED	src/dev/tmux/tmux.h	/^#define GRID_FLAG_SELECTED /;"	d
GRID_HISTORY	src/dev/tmux/tmux.h	/^#define GRID_HISTORY /;"	d
GRID_LINE_EXTENDED	src/dev/tmux/tmux.h	/^#define GRID_LINE_EXTENDED /;"	d
GRID_LINE_WRAPPED	src/dev/tmux/tmux.h	/^#define GRID_LINE_WRAPPED /;"	d
GTAGS	src/dev/tmux/Makefile	/^GTAGS:$/;"	t
GTAGS	src/dev/tmux/Makefile.in	/^GTAGS:$/;"	t
GZIP_ENV	src/dev/tmux/Makefile	/^GZIP_ENV = --best$/;"	m
GZIP_ENV	src/dev/tmux/Makefile.in	/^GZIP_ENV = --best$/;"	m
GenRandom	src/dev/ninja/misc/write_fake_manifests.py	/^class GenRandom(object):$/;"	c
GetActiveEdges	src/dev/ninja/src/build.cc	/^vector<Edge*> RealCommandRunner::GetActiveEdges() {$/;"	f	class:RealCommandRunner	typeref:typename:vector<Edge * >
GetActiveEdges	src/dev/ninja/src/build.h	/^  virtual vector<Edge*> GetActiveEdges() { return vector<Edge*>(); }$/;"	f	struct:CommandRunner	typeref:typename:vector<Edge * >
GetActiveEdges	src/dev/ninja/src/build_test.cc	/^vector<Edge*> FakeCommandRunner::GetActiveEdges() {$/;"	f	class:FakeCommandRunner	typeref:typename:vector<Edge * >
GetBinding	src/dev/ninja/src/eval_env.cc	/^const EvalString* Rule::GetBinding(const string& key) const {$/;"	f	class:Rule	typeref:typename:const EvalString *
GetBinding	src/dev/ninja/src/graph.cc	/^string Edge::GetBinding(const string& key) {$/;"	f	class:Edge	typeref:typename:string
GetBindingBool	src/dev/ninja/src/graph.cc	/^bool Edge::GetBindingBool(const string& key) {$/;"	f	class:Edge	typeref:typename:bool
GetCurDir	src/dev/ninja/src/includes_normalize_test.cc	/^string GetCurDir() {$/;"	f	namespace:__anonaa19d11a0110	typeref:typename:string
GetDeps	src/dev/ninja/src/deps_log.cc	/^DepsLog::Deps* DepsLog::GetDeps(Node* node) {$/;"	f	class:DepsLog	typeref:typename:DepsLog::Deps *
GetLastErrorString	src/dev/ninja/src/util.cc	/^string GetLastErrorString() {$/;"	f	typeref:typename:string
GetLoadAverage	src/dev/ninja/src/util.cc	/^double GetLoadAverage() {$/;"	f	typeref:typename:double
GetNode	src/dev/ninja/src/state.cc	/^Node* State::GetNode(StringPiece path, unsigned int slash_bits) {$/;"	f	class:State	typeref:typename:Node *
GetNode	src/dev/ninja/src/test.cc	/^Node* StateTestWithBuiltinRules::GetNode(const string& path) {$/;"	f	class:StateTestWithBuiltinRules	typeref:typename:Node *
GetOutput	src/dev/ninja/src/subprocess-posix.cc	/^const string& Subprocess::GetOutput() const {$/;"	f	class:Subprocess	typeref:typename:const string &
GetOutput	src/dev/ninja/src/subprocess-win32.cc	/^const string& Subprocess::GetOutput() const {$/;"	f	class:Subprocess	typeref:typename:const string &
GetProcessorCount	src/dev/ninja/src/util.cc	/^int GetProcessorCount() {$/;"	f	typeref:typename:int
GetRules	src/dev/ninja/src/eval_env.cc	/^const map<string, const Rule*>& BindingEnv::GetRules() const {$/;"	f	class:BindingEnv	typeref:typename:const map<string,const Rule * > &
GetShellEscapedString	src/dev/ninja/src/util.cc	/^void GetShellEscapedString(const string& input, string* result) {$/;"	f	typeref:typename:void
GetSystemTempDir	src/dev/ninja/src/test.cc	/^string GetSystemTempDir() {$/;"	f	namespace:__anonf43750740110	typeref:typename:string
GetTimeMillis	src/dev/ninja/src/metrics.cc	/^int64_t GetTimeMillis() {$/;"	f	typeref:typename:int64_t
GetUnescapedDepfile	src/dev/ninja/src/graph.cc	/^string Edge::GetUnescapedDepfile() {$/;"	f	class:Edge	typeref:typename:string
GetUnescapedRspfile	src/dev/ninja/src/graph.cc	/^string Edge::GetUnescapedRspfile() {$/;"	f	class:Edge	typeref:typename:string
GetWin32EscapedString	src/dev/ninja/src/util.cc	/^void GetWin32EscapedString(const string& input, string* result) {$/;"	f	typeref:typename:void
GetYamlIndent	editors/vim/ftplugin/yaml.vim	/^function! GetYamlIndent()$/;"	f
GraphTest	src/dev/ninja/src/graph_test.cc	/^  GraphTest() : scan_(&state_, NULL, NULL, &fs_) {}$/;"	f	struct:GraphTest	file:
GraphTest	src/dev/ninja/src/graph_test.cc	/^struct GraphTest : public StateTestWithBuiltinRules {$/;"	s	file:
GraphViz	src/dev/ninja/src/graphviz.h	/^struct GraphViz {$/;"	s
Group	src/dev/ninja/misc/packaging/ninja.spec	/^Group: Development\/Tools$/;"	t
GuessParallelism	src/dev/ninja/src/ninja.cc	/^int GuessParallelism() {$/;"	f	namespace:__anon193baac40110	typeref:typename:int
HAVE_B64_NTOP	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_B64_NTOP)$/;"	d
HAVE_CURSES_H	src/dev/tmux/configure.ac	/^		AC_DEFINE(HAVE_CURSES_H)$/;"	d
HAVE_DAEMON	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_DAEMON)$/;"	d
HAVE_FCNTL_CLOSEM	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_FCNTL_CLOSEM),$/;"	d
HAVE_FDFORKPTY	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_FDFORKPTY)$/;"	d
HAVE_FORKPTY	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_FORKPTY)$/;"	d
HAVE_FPARSELN	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_FPARSELN)$/;"	d
HAVE_GETOPT	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_GETOPT)$/;"	d
HAVE_IMSG	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_IMSG)$/;"	d
HAVE_NCURSES_H	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_NCURSES_H)$/;"	d
HAVE_PROC_PID	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_PROC_PID)$/;"	d
HAVE_PR_SET_NAME	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_PR_SET_NAME),$/;"	d
HAVE_QUEUE_H	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_QUEUE_H)$/;"	d
HAVE_UTEMPTER	src/dev/tmux/configure.ac	/^		AC_DEFINE(HAVE_UTEMPTER)$/;"	d
HAVE_UTF8PROC	src/dev/tmux/configure.ac	/^		AC_DEFINE(HAVE_UTF8PROC)$/;"	d
HAVE_UTF8PROC	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(HAVE_UTF8PROC, [test "x$enable_utf8proc" = xyes])$/;"	c
HAVE_VIS	src/dev/tmux/configure.ac	/^	AC_DEFINE(HAVE_VIS)$/;"	d
HEADER_FILES	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^HEADER_FILES := \\$/;"	m
HERE	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^	set_tmux_conf_helper<<-HERE$/;"	h
HERE	terminals/tmux/plugins/tpm/tests/test_plugin_clean.sh	/^	set_tmux_conf_helper <<- HERE$/;"	h
HERE	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^	set_tmux_conf_helper <<- HERE$/;"	h
HERE	terminals/tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^	set_tmux_conf_helper <<- HERE$/;"	h
HERE	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^	create_test_plugin_helper <<- HERE$/;"	h
HERE	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^	set_tmux_conf_helper <<- HERE$/;"	h
HERE	terminals/tmux/plugins/tpm/tests/test_plugin_update.sh	/^	set_tmux_conf_helper <<- HERE$/;"	h
HOOKS	src/dev/tmux/tmux.1	/^.Sh HOOKS$/;"	s
HOST_NAME_MAX	src/dev/tmux/compat.h	/^#define HOST_NAME_MAX /;"	d
HandlePendingInterruption	src/dev/ninja/src/subprocess-posix.cc	/^void SubprocessSet::HandlePendingInterruption() {$/;"	f	class:SubprocessSet	typeref:typename:void
HashCommand	src/dev/ninja/src/build_log.cc	/^uint64_t BuildLog::LogEntry::HashCommand(StringPiece command) {$/;"	f	class:BuildLog::LogEntry	typeref:typename:uint64_t
HighResTimer	src/dev/ninja/src/metrics.cc	/^int64_t HighResTimer() {$/;"	f	namespace:__anon88a2436b0110	typeref:typename:int64_t
I	editors/vim/config/plugins/all.vim	/^	xmap I  <Plug>(niceblock-I)$/;"	m
IBUF_READ_SIZE	src/dev/tmux/compat/imsg.h	/^#define IBUF_READ_SIZE	/;"	d
ID	src/dev/tmux/Makefile	/^ID: $(am__tagged_files)$/;"	t
ID	src/dev/tmux/Makefile.in	/^ID: $(am__tagged_files)$/;"	t
IDENT	src/dev/ninja/src/lexer.h	/^    IDENT,$/;"	e	enum:Lexer::Token
IMSGF_HASFD	src/dev/tmux/compat/imsg.h	/^#define IMSGF_HASFD	/;"	d
IMSG_HEADER_SIZE	src/dev/tmux/compat/imsg.h	/^#define IMSG_HEADER_SIZE	/;"	d
INCLUDE	src/dev/ninja/src/lexer.h	/^    INCLUDE,$/;"	e	enum:Lexer::Token
INDENT	src/dev/ninja/misc/ninja_syntax_test.py	/^INDENT = '    '$/;"	v
INDENT	src/dev/ninja/src/lexer.h	/^    INDENT,$/;"	e	enum:Lexer::Token
INFO	meta/dotbot/dotbot/messenger/level.py	/^    INFO = 20$/;"	v	class:Level
INFTIM	src/dev/tmux/compat.h	/^#define INFTIM /;"	d
INPUTKEY_CURSOR	src/dev/tmux/input-keys.c	/^#define INPUTKEY_CURSOR /;"	d	file:
INPUTKEY_KEYPAD	src/dev/tmux/input-keys.c	/^#define INPUTKEY_KEYPAD /;"	d	file:
INPUT_BUF_LIMIT	src/dev/tmux/input.c	/^#define INPUT_BUF_LIMIT /;"	d	file:
INPUT_BUF_START	src/dev/tmux/input.c	/^#define INPUT_BUF_START /;"	d	file:
INPUT_CSI_CBT	src/dev/tmux/input.c	/^	INPUT_CSI_CBT,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_CNL	src/dev/tmux/input.c	/^	INPUT_CSI_CNL,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_CPL	src/dev/tmux/input.c	/^	INPUT_CSI_CPL,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_CUB	src/dev/tmux/input.c	/^	INPUT_CSI_CUB,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_CUD	src/dev/tmux/input.c	/^	INPUT_CSI_CUD,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_CUF	src/dev/tmux/input.c	/^	INPUT_CSI_CUF,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_CUP	src/dev/tmux/input.c	/^	INPUT_CSI_CUP,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_CUU	src/dev/tmux/input.c	/^	INPUT_CSI_CUU,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_DA	src/dev/tmux/input.c	/^	INPUT_CSI_DA,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_DA_TWO	src/dev/tmux/input.c	/^	INPUT_CSI_DA_TWO,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_DCH	src/dev/tmux/input.c	/^	INPUT_CSI_DCH,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_DECSCUSR	src/dev/tmux/input.c	/^	INPUT_CSI_DECSCUSR,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_DECSTBM	src/dev/tmux/input.c	/^	INPUT_CSI_DECSTBM,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_DL	src/dev/tmux/input.c	/^	INPUT_CSI_DL,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_DSR	src/dev/tmux/input.c	/^	INPUT_CSI_DSR,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_ECH	src/dev/tmux/input.c	/^	INPUT_CSI_ECH,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_ED	src/dev/tmux/input.c	/^	INPUT_CSI_ED,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_EL	src/dev/tmux/input.c	/^	INPUT_CSI_EL,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_HPA	src/dev/tmux/input.c	/^	INPUT_CSI_HPA,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_ICH	src/dev/tmux/input.c	/^	INPUT_CSI_ICH,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_IL	src/dev/tmux/input.c	/^	INPUT_CSI_IL,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_RCP	src/dev/tmux/input.c	/^	INPUT_CSI_RCP,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_REP	src/dev/tmux/input.c	/^	INPUT_CSI_REP,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_RM	src/dev/tmux/input.c	/^	INPUT_CSI_RM,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_RM_PRIVATE	src/dev/tmux/input.c	/^	INPUT_CSI_RM_PRIVATE,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_SCP	src/dev/tmux/input.c	/^	INPUT_CSI_SCP,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_SGR	src/dev/tmux/input.c	/^	INPUT_CSI_SGR,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_SM	src/dev/tmux/input.c	/^	INPUT_CSI_SM,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_SM_PRIVATE	src/dev/tmux/input.c	/^	INPUT_CSI_SM_PRIVATE,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_SU	src/dev/tmux/input.c	/^	INPUT_CSI_SU,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_TBC	src/dev/tmux/input.c	/^	INPUT_CSI_TBC,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_VPA	src/dev/tmux/input.c	/^	INPUT_CSI_VPA,$/;"	e	enum:input_csi_type	file:
INPUT_CSI_WINOPS	src/dev/tmux/input.c	/^	INPUT_CSI_WINOPS,$/;"	e	enum:input_csi_type	file:
INPUT_DISCARD	src/dev/tmux/input.c	/^#define INPUT_DISCARD /;"	d	file:
INPUT_ESC_DECALN	src/dev/tmux/input.c	/^	INPUT_ESC_DECALN,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_DECKPAM	src/dev/tmux/input.c	/^	INPUT_ESC_DECKPAM,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_DECKPNM	src/dev/tmux/input.c	/^	INPUT_ESC_DECKPNM,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_DECRC	src/dev/tmux/input.c	/^	INPUT_ESC_DECRC,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_DECSC	src/dev/tmux/input.c	/^	INPUT_ESC_DECSC,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_HTS	src/dev/tmux/input.c	/^	INPUT_ESC_HTS,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_IND	src/dev/tmux/input.c	/^	INPUT_ESC_IND,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_NEL	src/dev/tmux/input.c	/^	INPUT_ESC_NEL,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_RI	src/dev/tmux/input.c	/^	INPUT_ESC_RI,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_RIS	src/dev/tmux/input.c	/^	INPUT_ESC_RIS,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_SCSG0_OFF	src/dev/tmux/input.c	/^	INPUT_ESC_SCSG0_OFF,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_SCSG0_ON	src/dev/tmux/input.c	/^	INPUT_ESC_SCSG0_ON,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_SCSG1_OFF	src/dev/tmux/input.c	/^	INPUT_ESC_SCSG1_OFF,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_SCSG1_ON	src/dev/tmux/input.c	/^	INPUT_ESC_SCSG1_ON,$/;"	e	enum:input_esc_type	file:
INPUT_ESC_ST	src/dev/tmux/input.c	/^	INPUT_ESC_ST,$/;"	e	enum:input_esc_type	file:
INPUT_STATE_ANYWHERE	src/dev/tmux/input.c	/^#define INPUT_STATE_ANYWHERE /;"	d	file:
INSTALL	src/dev/tmux/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/dev/tmux/Makefile.in	/^INSTALL = @INSTALL@$/;"	m
INSTALL	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^INSTALL?=install -c$/;"	m
INSTALL_DATA	src/dev/tmux/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/dev/tmux/Makefile.in	/^INSTALL_DATA = @INSTALL_DATA@$/;"	m
INSTALL_HEADER	src/dev/tmux/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/dev/tmux/Makefile.in	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	src/dev/tmux/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/dev/tmux/Makefile.in	/^INSTALL_PROGRAM = @INSTALL_PROGRAM@$/;"	m
INSTALL_SCRIPT	src/dev/tmux/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/dev/tmux/Makefile.in	/^INSTALL_SCRIPT = @INSTALL_SCRIPT@$/;"	m
INSTALL_STRIP_PROGRAM	src/dev/tmux/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/dev/tmux/Makefile.in	/^INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@$/;"	m
INVALID	src/dev/tmux/compat/strtonum.c	/^#define INVALID /;"	d	file:
IS_AIX	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_AIX, test "x$PLATFORM" = xaix)$/;"	c
IS_DARWIN	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_DARWIN, test "x$PLATFORM" = xdarwin)$/;"	c
IS_DEBUG	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_DEBUG, test "x$enable_debug" = xyes)$/;"	c
IS_DRAGONFLY	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_DRAGONFLY, test "x$PLATFORM" = xdragonfly)$/;"	c
IS_FREEBSD	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_FREEBSD, test "x$PLATFORM" = xfreebsd)$/;"	c
IS_GCC	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_GCC, test "x$GCC" = xyes)$/;"	c
IS_HPUX	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_HPUX, test "x$PLATFORM" = xhpux)$/;"	c
IS_LINUX	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_LINUX, test "x$PLATFORM" = xlinux)$/;"	c
IS_NETBSD	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_NETBSD, test "x$PLATFORM" = xnetbsd)$/;"	c
IS_OPENBSD	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_OPENBSD, test "x$PLATFORM" = xopenbsd)$/;"	c
IS_SUNCC	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_SUNCC, test "x$found_suncc" = xyes)$/;"	c
IS_SUNOS	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_SUNOS, test "x$PLATFORM" = xsunos)$/;"	c
IS_UNKNOWN	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(IS_UNKNOWN, test "x$PLATFORM" = xunknown)$/;"	c
ImplicitDepLoader	src/dev/ninja/src/graph.h	/^  ImplicitDepLoader(State* state, DepsLog* deps_log,$/;"	f	struct:ImplicitDepLoader
ImplicitDepLoader	src/dev/ninja/src/graph.h	/^struct ImplicitDepLoader {$/;"	s
IncludesNormalize	src/dev/ninja/src/includes_normalize.h	/^struct IncludesNormalize {$/;"	s
InitArgs	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class InitArgs(AnInstance):$/;"	c	function:_make_objects	file:
InitArgsWithState	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class InitArgsWithState(AnInstance):$/;"	c	function:_make_objects	file:
IsAlreadyRemoved	src/dev/ninja/src/clean.cc	/^bool Cleaner::IsAlreadyRemoved(const string& path) {$/;"	f	class:Cleaner	typeref:typename:bool
IsDepsEntryLiveFor	src/dev/ninja/src/deps_log.cc	/^bool DepsLog::IsDepsEntryLiveFor(Node* node) {$/;"	f	class:DepsLog	typeref:typename:bool
IsInterrupted	src/dev/ninja/src/subprocess.h	/^  static bool IsInterrupted() { return interrupted_ != 0; }$/;"	f	struct:SubprocessSet	typeref:typename:bool
IsKnownShellSafeCharacter	src/dev/ninja/src/util.cc	/^static inline bool IsKnownShellSafeCharacter(char ch) {$/;"	f	typeref:typename:bool	file:
IsKnownWin32SafeCharacter	src/dev/ninja/src/util.cc	/^static inline bool IsKnownWin32SafeCharacter(char ch) {$/;"	f	typeref:typename:bool	file:
IsPathDead	src/dev/ninja/src/build_log_perftest.cc	/^  virtual bool IsPathDead(StringPiece) const { return false; }$/;"	f	struct:NoDeadPaths	typeref:typename:bool	file:
IsPathDead	src/dev/ninja/src/build_log_test.cc	/^  virtual bool IsPathDead(StringPiece s) const { return false; }$/;"	f	struct:__anon4bc521c40110::BuildLogTest	typeref:typename:bool	file:
IsPathDead	src/dev/ninja/src/build_log_test.cc	/^  virtual bool IsPathDead(StringPiece s) const { return s == "out2"; }$/;"	f	struct:__anon4bc521c40110::BuildLogRecompactTest	typeref:typename:bool	file:
IsPathDead	src/dev/ninja/src/build_test.cc	/^  virtual bool IsPathDead(StringPiece s) const { return false; }$/;"	f	struct:BuildTest	typeref:typename:bool	file:
IsPathDead	src/dev/ninja/src/ninja.cc	/^  virtual bool IsPathDead(StringPiece s) const {$/;"	f	struct:__anon193baac40110::NinjaMain	typeref:typename:bool	file:
IsReservedBinding	src/dev/ninja/src/eval_env.cc	/^bool Rule::IsReservedBinding(const string& var) {$/;"	f	class:Rule	typeref:typename:bool
IsSystemInclude	src/dev/ninja/src/clparser.cc	/^bool CLParser::IsSystemInclude(string path) {$/;"	f	class:CLParser	typeref:typename:bool
IsVerbose	src/dev/ninja/src/clean.h	/^  bool IsVerbose() const {$/;"	f	struct:Cleaner	typeref:typename:bool
IsWindows7OrLater	src/dev/ninja/src/disk_interface.cc	/^bool IsWindows7OrLater() {$/;"	f	namespace:__anondfd6196f0110	typeref:typename:bool
JOB_CLOSED	src/dev/tmux/tmux.h	/^		JOB_CLOSED$/;"	e	enum:job::__anonc903038b0403
JOB_DEAD	src/dev/tmux/tmux.h	/^		JOB_DEAD,$/;"	e	enum:job::__anonc903038b0403
JOB_RUNNING	src/dev/tmux/tmux.h	/^		JOB_RUNNING,$/;"	e	enum:job::__anonc903038b0403
Join	src/dev/ninja/src/includes_normalize-win32.cc	/^string IncludesNormalize::Join(const vector<string>& list, char sep) {$/;"	f	class:IncludesNormalize	typeref:typename:string
KEY	src/dev/tmux/tmux.1	/^.Sh KEY BINDINGS$/;"	s
KEYC_BASE	src/dev/tmux/tmux.h	/^#define KEYC_BASE /;"	d
KEYC_BSPACE	src/dev/tmux/tmux.h	/^	KEYC_BSPACE,$/;"	e	enum:__anonc903038b0103
KEYC_BTAB	src/dev/tmux/tmux.h	/^	KEYC_BTAB,$/;"	e	enum:__anonc903038b0103
KEYC_CLICK_TIMEOUT	src/dev/tmux/tmux.h	/^#define KEYC_CLICK_TIMEOUT /;"	d
KEYC_CTRL	src/dev/tmux/tmux.h	/^#define KEYC_CTRL /;"	d
KEYC_DC	src/dev/tmux/tmux.h	/^	KEYC_DC,$/;"	e	enum:__anonc903038b0103
KEYC_DOWN	src/dev/tmux/tmux.h	/^	KEYC_DOWN,$/;"	e	enum:__anonc903038b0103
KEYC_DRAGGING	src/dev/tmux/tmux.h	/^	KEYC_DRAGGING, \/* dragging in progress *\/$/;"	e	enum:__anonc903038b0103
KEYC_END	src/dev/tmux/tmux.h	/^	KEYC_END,$/;"	e	enum:__anonc903038b0103
KEYC_ESCAPE	src/dev/tmux/tmux.h	/^#define KEYC_ESCAPE /;"	d
KEYC_F1	src/dev/tmux/tmux.h	/^	KEYC_F1,$/;"	e	enum:__anonc903038b0103
KEYC_F10	src/dev/tmux/tmux.h	/^	KEYC_F10,$/;"	e	enum:__anonc903038b0103
KEYC_F11	src/dev/tmux/tmux.h	/^	KEYC_F11,$/;"	e	enum:__anonc903038b0103
KEYC_F12	src/dev/tmux/tmux.h	/^	KEYC_F12,$/;"	e	enum:__anonc903038b0103
KEYC_F2	src/dev/tmux/tmux.h	/^	KEYC_F2,$/;"	e	enum:__anonc903038b0103
KEYC_F3	src/dev/tmux/tmux.h	/^	KEYC_F3,$/;"	e	enum:__anonc903038b0103
KEYC_F4	src/dev/tmux/tmux.h	/^	KEYC_F4,$/;"	e	enum:__anonc903038b0103
KEYC_F5	src/dev/tmux/tmux.h	/^	KEYC_F5,$/;"	e	enum:__anonc903038b0103
KEYC_F6	src/dev/tmux/tmux.h	/^	KEYC_F6,$/;"	e	enum:__anonc903038b0103
KEYC_F7	src/dev/tmux/tmux.h	/^	KEYC_F7,$/;"	e	enum:__anonc903038b0103
KEYC_F8	src/dev/tmux/tmux.h	/^	KEYC_F8,$/;"	e	enum:__anonc903038b0103
KEYC_F9	src/dev/tmux/tmux.h	/^	KEYC_F9,$/;"	e	enum:__anonc903038b0103
KEYC_FOCUS_IN	src/dev/tmux/tmux.h	/^	KEYC_FOCUS_IN = KEYC_BASE,$/;"	e	enum:__anonc903038b0103
KEYC_FOCUS_OUT	src/dev/tmux/tmux.h	/^	KEYC_FOCUS_OUT,$/;"	e	enum:__anonc903038b0103
KEYC_HOME	src/dev/tmux/tmux.h	/^	KEYC_HOME,$/;"	e	enum:__anonc903038b0103
KEYC_IC	src/dev/tmux/tmux.h	/^	KEYC_IC,$/;"	e	enum:__anonc903038b0103
KEYC_IS_MOUSE	src/dev/tmux/tmux.h	/^#define KEYC_IS_MOUSE(/;"	d
KEYC_KP_EIGHT	src/dev/tmux/tmux.h	/^	KEYC_KP_EIGHT,$/;"	e	enum:__anonc903038b0103
KEYC_KP_ENTER	src/dev/tmux/tmux.h	/^	KEYC_KP_ENTER,$/;"	e	enum:__anonc903038b0103
KEYC_KP_FIVE	src/dev/tmux/tmux.h	/^	KEYC_KP_FIVE,$/;"	e	enum:__anonc903038b0103
KEYC_KP_FOUR	src/dev/tmux/tmux.h	/^	KEYC_KP_FOUR,$/;"	e	enum:__anonc903038b0103
KEYC_KP_MINUS	src/dev/tmux/tmux.h	/^	KEYC_KP_MINUS,$/;"	e	enum:__anonc903038b0103
KEYC_KP_NINE	src/dev/tmux/tmux.h	/^	KEYC_KP_NINE,$/;"	e	enum:__anonc903038b0103
KEYC_KP_ONE	src/dev/tmux/tmux.h	/^	KEYC_KP_ONE,$/;"	e	enum:__anonc903038b0103
KEYC_KP_PERIOD	src/dev/tmux/tmux.h	/^	KEYC_KP_PERIOD,$/;"	e	enum:__anonc903038b0103
KEYC_KP_PLUS	src/dev/tmux/tmux.h	/^	KEYC_KP_PLUS,$/;"	e	enum:__anonc903038b0103
KEYC_KP_SEVEN	src/dev/tmux/tmux.h	/^	KEYC_KP_SEVEN,$/;"	e	enum:__anonc903038b0103
KEYC_KP_SIX	src/dev/tmux/tmux.h	/^	KEYC_KP_SIX,$/;"	e	enum:__anonc903038b0103
KEYC_KP_SLASH	src/dev/tmux/tmux.h	/^	KEYC_KP_SLASH,$/;"	e	enum:__anonc903038b0103
KEYC_KP_STAR	src/dev/tmux/tmux.h	/^	KEYC_KP_STAR,$/;"	e	enum:__anonc903038b0103
KEYC_KP_THREE	src/dev/tmux/tmux.h	/^	KEYC_KP_THREE,$/;"	e	enum:__anonc903038b0103
KEYC_KP_TWO	src/dev/tmux/tmux.h	/^	KEYC_KP_TWO,$/;"	e	enum:__anonc903038b0103
KEYC_KP_ZERO	src/dev/tmux/tmux.h	/^	KEYC_KP_ZERO,$/;"	e	enum:__anonc903038b0103
KEYC_LEFT	src/dev/tmux/tmux.h	/^	KEYC_LEFT,$/;"	e	enum:__anonc903038b0103
KEYC_MASK_KEY	src/dev/tmux/tmux.h	/^#define KEYC_MASK_KEY /;"	d
KEYC_MASK_MOD	src/dev/tmux/tmux.h	/^#define KEYC_MASK_MOD /;"	d
KEYC_MOUSE	src/dev/tmux/tmux.h	/^	KEYC_MOUSE, \/* unclassified mouse event *\/$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(DOUBLECLICK1),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(DOUBLECLICK2),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(DOUBLECLICK3),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDOWN1),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDOWN2),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDOWN3),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDRAG1),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDRAG2),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDRAG3),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDRAGEND1),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDRAGEND2),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEDRAGEND3),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEMOVE),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEUP1),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEUP2),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(MOUSEUP3),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(TRIPLECLICK1),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(TRIPLECLICK2),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(TRIPLECLICK3),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(WHEELDOWN),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^	KEYC_MOUSE_KEY(WHEELUP),$/;"	e	enum:__anonc903038b0103
KEYC_MOUSE_KEY	src/dev/tmux/tmux.h	/^#define KEYC_MOUSE_KEY(/;"	d
KEYC_MOUSE_STRING	src/dev/tmux/tmux.h	/^#define KEYC_MOUSE_STRING(/;"	d
KEYC_NONE	src/dev/tmux/tmux.h	/^#define KEYC_NONE /;"	d
KEYC_NPAGE	src/dev/tmux/tmux.h	/^	KEYC_NPAGE,$/;"	e	enum:__anonc903038b0103
KEYC_NUSER	src/dev/tmux/tmux.h	/^#define KEYC_NUSER /;"	d
KEYC_PASTE_END	src/dev/tmux/tmux.h	/^	KEYC_PASTE_END,$/;"	e	enum:__anonc903038b0103
KEYC_PASTE_START	src/dev/tmux/tmux.h	/^	KEYC_PASTE_START,$/;"	e	enum:__anonc903038b0103
KEYC_PPAGE	src/dev/tmux/tmux.h	/^	KEYC_PPAGE,$/;"	e	enum:__anonc903038b0103
KEYC_RIGHT	src/dev/tmux/tmux.h	/^	KEYC_RIGHT,$/;"	e	enum:__anonc903038b0103
KEYC_SHIFT	src/dev/tmux/tmux.h	/^#define KEYC_SHIFT /;"	d
KEYC_UNKNOWN	src/dev/tmux/tmux.h	/^#define KEYC_UNKNOWN /;"	d
KEYC_UP	src/dev/tmux/tmux.h	/^	KEYC_UP,$/;"	e	enum:__anonc903038b0103
KEYC_USER	src/dev/tmux/tmux.h	/^#define KEYC_USER /;"	d
KEYC_XTERM	src/dev/tmux/tmux.h	/^#define KEYC_XTERM /;"	d
KEY_BINDING_REPEAT	src/dev/tmux/tmux.h	/^#define KEY_BINDING_REPEAT /;"	d
KeyToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^KeyToken = yaml.tokens.KeyToken$/;"	v
KeyToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class KeyToken(Token):$/;"	c
KeyToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class KeyToken(Token):$/;"	c
L	editors/vim/config/plugins/all.vim	/^	smap <silent>L     <Plug>(neosnippet_jump_or_expand)$/;"	m
L	editors/vim/config/plugins/all.vim	/^	xmap <silent>L     <Plug>(neosnippet_expand_target)$/;"	m
LAYOUT_LEFTRIGHT	src/dev/tmux/tmux.h	/^	LAYOUT_LEFTRIGHT,$/;"	e	enum:layout_type
LAYOUT_TOPBOTTOM	src/dev/tmux/tmux.h	/^	LAYOUT_TOPBOTTOM,$/;"	e	enum:layout_type
LAYOUT_WINDOWPANE	src/dev/tmux/tmux.h	/^	LAYOUT_WINDOWPANE$/;"	e	enum:layout_type
LDADD	src/dev/tmux/Makefile	/^LDADD = $(LIBOBJS)$/;"	m
LDADD	src/dev/tmux/Makefile.am	/^LDADD = $(LIBOBJS)$/;"	m
LDADD	src/dev/tmux/Makefile.in	/^LDADD = $(LIBOBJS)$/;"	m
LDFLAGS	src/dev/tmux/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/dev/tmux/Makefile.in	/^LDFLAGS = @LDFLAGS@$/;"	m
LIB	src/dev/ninja/misc/write_fake_manifests.py	/^LIB, EXE = 0, 1$/;"	v
LIBEVENT_CFLAGS	src/dev/tmux/Makefile	/^LIBEVENT_CFLAGS = $/;"	m
LIBEVENT_CFLAGS	src/dev/tmux/Makefile.in	/^LIBEVENT_CFLAGS = @LIBEVENT_CFLAGS@$/;"	m
LIBEVENT_LIBS	src/dev/tmux/Makefile	/^LIBEVENT_LIBS = -levent$/;"	m
LIBEVENT_LIBS	src/dev/tmux/Makefile.in	/^LIBEVENT_LIBS = @LIBEVENT_LIBS@$/;"	m
LIBNCURSES_CFLAGS	src/dev/tmux/Makefile	/^LIBNCURSES_CFLAGS = $/;"	m
LIBNCURSES_CFLAGS	src/dev/tmux/Makefile.in	/^LIBNCURSES_CFLAGS = @LIBNCURSES_CFLAGS@$/;"	m
LIBNCURSES_LIBS	src/dev/tmux/Makefile	/^LIBNCURSES_LIBS = $/;"	m
LIBNCURSES_LIBS	src/dev/tmux/Makefile.in	/^LIBNCURSES_LIBS = @LIBNCURSES_LIBS@$/;"	m
LIBOBJDIR	src/dev/tmux/Makefile	/^LIBOBJDIR = compat\/$/;"	m
LIBOBJDIR	src/dev/tmux/Makefile.in	/^LIBOBJDIR = compat\/$/;"	m
LIBOBJS	src/dev/tmux/Makefile	/^LIBOBJS =  ${LIBOBJDIR}closefrom$U.o ${LIBOBJDIR}explicit_bzero$U.o ${LIBOBJDIR}fgetln$U.o ${LIB/;"	m
LIBOBJS	src/dev/tmux/Makefile.in	/^LIBOBJS = @LIBOBJS@$/;"	m
LIBS	src/dev/tmux/Makefile	/^LIBS = -lutil  -ltinfo -levent  -lresolv$/;"	m
LIBS	src/dev/tmux/Makefile.in	/^LIBS = @LIBS@$/;"	m
LIBTINFO_CFLAGS	src/dev/tmux/Makefile	/^LIBTINFO_CFLAGS = -D_GNU_SOURCE$/;"	m
LIBTINFO_CFLAGS	src/dev/tmux/Makefile.in	/^LIBTINFO_CFLAGS = @LIBTINFO_CFLAGS@$/;"	m
LIBTINFO_LIBS	src/dev/tmux/Makefile	/^LIBTINFO_LIBS = -ltinfo$/;"	m
LIBTINFO_LIBS	src/dev/tmux/Makefile.in	/^LIBTINFO_LIBS = @LIBTINFO_LIBS@$/;"	m
LIBYAML_CHECK	meta/dotbot/lib/pyyaml/setup.py	/^LIBYAML_CHECK = """$/;"	v
LICENSE	meta/dotbot/lib/pyyaml/setup.py	/^LICENSE = "MIT"$/;"	v
LINE_SEL_LEFT_RIGHT	src/dev/tmux/tmux.h	/^		LINE_SEL_LEFT_RIGHT,$/;"	e	enum:screen_sel::__anonc903038b0503
LINE_SEL_NONE	src/dev/tmux/tmux.h	/^		LINE_SEL_NONE,$/;"	e	enum:screen_sel::__anonc903038b0503
LINE_SEL_RIGHT_LEFT	src/dev/tmux/tmux.h	/^		LINE_SEL_RIGHT_LEFT,$/;"	e	enum:screen_sel::__anonc903038b0503
LINK	src/dev/tmux/Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	src/dev/tmux/Makefile.in	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LIST_BUFFERS_TEMPLATE	src/dev/tmux/cmd-list-buffers.c	/^#define LIST_BUFFERS_TEMPLATE	/;"	d	file:
LIST_CLIENTS_TEMPLATE	src/dev/tmux/cmd-list-clients.c	/^#define LIST_CLIENTS_TEMPLATE	/;"	d	file:
LIST_EMPTY	src/dev/tmux/compat/queue.h	/^#define	LIST_EMPTY(/;"	d
LIST_END	src/dev/tmux/compat/queue.h	/^#define	LIST_END(/;"	d
LIST_ENTRY	src/dev/tmux/compat/queue.h	/^#define LIST_ENTRY(/;"	d
LIST_FIRST	src/dev/tmux/compat/queue.h	/^#define	LIST_FIRST(/;"	d
LIST_FOREACH	src/dev/tmux/compat/queue.h	/^#define LIST_FOREACH(/;"	d
LIST_FOREACH_SAFE	src/dev/tmux/compat/queue.h	/^#define	LIST_FOREACH_SAFE(/;"	d
LIST_HEAD	src/dev/tmux/compat/queue.h	/^#define LIST_HEAD(/;"	d
LIST_HEAD_INITIALIZER	src/dev/tmux/compat/queue.h	/^#define LIST_HEAD_INITIALIZER(/;"	d
LIST_INIT	src/dev/tmux/compat/queue.h	/^#define	LIST_INIT(/;"	d
LIST_INSERT_AFTER	src/dev/tmux/compat/queue.h	/^#define LIST_INSERT_AFTER(/;"	d
LIST_INSERT_BEFORE	src/dev/tmux/compat/queue.h	/^#define	LIST_INSERT_BEFORE(/;"	d
LIST_INSERT_HEAD	src/dev/tmux/compat/queue.h	/^#define LIST_INSERT_HEAD(/;"	d
LIST_NEXT	src/dev/tmux/compat/queue.h	/^#define	LIST_NEXT(/;"	d
LIST_REMOVE	src/dev/tmux/compat/queue.h	/^#define LIST_REMOVE(/;"	d
LIST_REPLACE	src/dev/tmux/compat/queue.h	/^#define LIST_REPLACE(/;"	d
LIST_SESSIONS_TEMPLATE	src/dev/tmux/cmd-list-sessions.c	/^#define LIST_SESSIONS_TEMPLATE	/;"	d	file:
LIST_WINDOWS_TEMPLATE	src/dev/tmux/cmd-list-windows.c	/^#define LIST_WINDOWS_TEMPLATE	/;"	d	file:
LIST_WINDOWS_WITH_SESSION_TEMPLATE	src/dev/tmux/cmd-list-windows.c	/^#define LIST_WINDOWS_WITH_SESSION_TEMPLATE	/;"	d	file:
LOCK_EX	src/dev/tmux/compat.h	/^#define LOCK_EX /;"	d
LOCK_NB	src/dev/tmux/compat.h	/^#define LOCK_NB /;"	d
LOCK_SH	src/dev/tmux/compat.h	/^#define LOCK_SH /;"	d
LONGWORD	src/dev/ninja/misc/ninja_syntax_test.py	/^LONGWORD = 'a' * 10$/;"	v
LONGWORDWITHSPACES	src/dev/ninja/misc/ninja_syntax_test.py	/^LONGWORDWITHSPACES = 'a'*5 + '$ ' + 'a'*5$/;"	v
LONG_DESCRIPTION	meta/dotbot/lib/pyyaml/setup.py	/^LONG_DESCRIPTION = """\\$/;"	v
LOWINFO	meta/dotbot/dotbot/messenger/level.py	/^    LOWINFO = 15$/;"	v	class:Level
LTLIBOBJS	src/dev/tmux/Makefile	/^LTLIBOBJS =  ${LIBOBJDIR}closefrom$U.lo ${LIBOBJDIR}explicit_bzero$U.lo ${LIBOBJDIR}fgetln$U.lo /;"	m
LTLIBOBJS	src/dev/tmux/Makefile.in	/^LTLIBOBJS = @LTLIBOBJS@$/;"	m
Level	meta/dotbot/dotbot/messenger/level.py	/^class Level(object):$/;"	c
Lexer	src/dev/ninja/src/lexer.cc	/^Lexer::Lexer(const char* input) {$/;"	f	class:Lexer
Lexer	src/dev/ninja/src/lexer.h	/^  Lexer() {}$/;"	f	struct:Lexer
Lexer	src/dev/ninja/src/lexer.h	/^struct Lexer {$/;"	s
Lexer	src/dev/ninja/src/lexer.in.cc	/^Lexer::Lexer(const char* input) {$/;"	f	class:Lexer
License	src/dev/ninja/misc/packaging/ninja.spec	/^License: Apache 2.0$/;"	t
LinePrinter	src/dev/ninja/src/line_printer.cc	/^LinePrinter::LinePrinter() : have_blank_line_(true), console_locked_(false) {$/;"	f	class:LinePrinter
LinePrinter	src/dev/ninja/src/line_printer.h	/^struct LinePrinter {$/;"	s
LineReader	src/dev/ninja/src/build_log.cc	/^  explicit LineReader(FILE* file)$/;"	f	struct:LineReader	file:
LineReader	src/dev/ninja/src/build_log.cc	/^struct LineReader {$/;"	s	file:
LineType	src/dev/ninja/src/line_printer.h	/^  enum LineType {$/;"	g	struct:LinePrinter
Link	meta/dotbot/plugins/link.py	/^class Link(dotbot.Plugin):$/;"	c
Load	src/dev/ninja/src/build_log.cc	/^bool BuildLog::Load(const string& path, string* err) {$/;"	f	class:BuildLog	typeref:typename:bool
Load	src/dev/ninja/src/deps_log.cc	/^bool DepsLog::Load(const string& path, State* state, string* err) {$/;"	f	class:DepsLog	typeref:typename:bool
Load	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::Load(const string& filename, string* err, Lexer* parent) {$/;"	f	class:ManifestParser	typeref:typename:bool
LoadDepFile	src/dev/ninja/src/graph.cc	/^bool ImplicitDepLoader::LoadDepFile(Edge* edge, const string& path,$/;"	f	class:ImplicitDepLoader	typeref:typename:bool
LoadDeps	src/dev/ninja/src/graph.cc	/^bool ImplicitDepLoader::LoadDeps(Edge* edge, string* err) {$/;"	f	class:ImplicitDepLoader	typeref:typename:bool
LoadDepsFromLog	src/dev/ninja/src/graph.cc	/^bool ImplicitDepLoader::LoadDepsFromLog(Edge* edge, string* err) {$/;"	f	class:ImplicitDepLoader	typeref:typename:bool
LoadManifests	src/dev/ninja/src/manifest_parser_perftest.cc	/^int LoadManifests(bool measure_command_evaluation) {$/;"	f	typeref:typename:int
Loader	meta/dotbot/lib/pyyaml/lib/yaml/loader.py	/^class Loader(Reader, Scanner, Parser, Composer, Constructor, Resolver):$/;"	c
Loader	meta/dotbot/lib/pyyaml/lib3/yaml/loader.py	/^class Loader(Reader, Scanner, Parser, Composer, Constructor, Resolver):$/;"	c
LogEntry	src/dev/ninja/src/build_log.cc	/^BuildLog::LogEntry::LogEntry(const string& output)$/;"	f	class:BuildLog::LogEntry
LogEntry	src/dev/ninja/src/build_log.cc	/^BuildLog::LogEntry::LogEntry(const string& output, uint64_t command_hash,$/;"	f	class:BuildLog::LogEntry
LogEntry	src/dev/ninja/src/build_log.h	/^  struct LogEntry {$/;"	s	struct:BuildLog
LookupByOutput	src/dev/ninja/src/build_log.cc	/^BuildLog::LogEntry* BuildLog::LookupByOutput(const string& path) {$/;"	f	class:BuildLog	typeref:typename:BuildLog::LogEntry *
LookupNode	src/dev/ninja/src/state.cc	/^Node* State::LookupNode(StringPiece path) const {$/;"	f	class:State	typeref:typename:Node *
LookupPool	src/dev/ninja/src/state.cc	/^Pool* State::LookupPool(const string& pool_name) {$/;"	f	class:State	typeref:typename:Pool *
LookupRule	src/dev/ninja/src/eval_env.cc	/^const Rule* BindingEnv::LookupRule(const string& rule_name) {$/;"	f	class:BindingEnv	typeref:typename:const Rule *
LookupRuleCurrentScope	src/dev/ninja/src/eval_env.cc	/^const Rule* BindingEnv::LookupRuleCurrentScope(const string& rule_name) {$/;"	f	class:BindingEnv	typeref:typename:const Rule *
LookupVariable	src/dev/ninja/src/eval_env.cc	/^string BindingEnv::LookupVariable(const string& var) {$/;"	f	class:BindingEnv	typeref:typename:string
LookupVariable	src/dev/ninja/src/graph.cc	/^string EdgeEnv::LookupVariable(const string& var) {$/;"	f	class:EdgeEnv	typeref:typename:string
LookupWithFallback	src/dev/ninja/src/eval_env.cc	/^string BindingEnv::LookupWithFallback(const string& var,$/;"	f	class:BindingEnv	typeref:typename:string
MAGENTA	meta/dotbot/dotbot/messenger/color.py	/^    MAGENTA = '\\033[95m'$/;"	v	class:Color
MAKEINFO	src/dev/tmux/Makefile	/^MAKEINFO = ${SHELL} \/home\/hle\/.dotfiles\/src\/dev\/tmux\/etc\/missing makeinfo$/;"	m
MAKEINFO	src/dev/tmux/Makefile.in	/^MAKEINFO = @MAKEINFO@$/;"	m
MANFORMAT	src/dev/tmux/Makefile	/^MANFORMAT = mdoc$/;"	m
MANFORMAT	src/dev/tmux/Makefile.in	/^MANFORMAT = @MANFORMAT@$/;"	m
MANFORMAT	src/dev/tmux/configure.ac	/^AC_SUBST(MANFORMAT)$/;"	s
MAX_IMSGSIZE	src/dev/tmux/compat/imsg.h	/^#define MAX_IMSGSIZE	/;"	d
METRIC_RECORD	src/dev/ninja/src/metrics.h	/^#define METRIC_RECORD(/;"	d
MISCELLANEOUS	src/dev/tmux/tmux.1	/^.Sh MISCELLANEOUS$/;"	s
MKDIR_P	src/dev/tmux/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/dev/tmux/Makefile.in	/^MKDIR_P = @MKDIR_P@$/;"	m
MODEKEY_EMACS	src/dev/tmux/tmux.h	/^#define MODEKEY_EMACS /;"	d
MODEKEY_VI	src/dev/tmux/tmux.h	/^#define MODEKEY_VI /;"	d
MODE_BLINKING	src/dev/tmux/tmux.h	/^#define MODE_BLINKING /;"	d
MODE_BRACKETPASTE	src/dev/tmux/tmux.h	/^#define MODE_BRACKETPASTE /;"	d
MODE_CURSOR	src/dev/tmux/tmux.h	/^#define MODE_CURSOR /;"	d
MODE_FOCUSON	src/dev/tmux/tmux.h	/^#define MODE_FOCUSON /;"	d
MODE_INSERT	src/dev/tmux/tmux.h	/^#define MODE_INSERT /;"	d
MODE_KCURSOR	src/dev/tmux/tmux.h	/^#define MODE_KCURSOR /;"	d
MODE_KKEYPAD	src/dev/tmux/tmux.h	/^#define MODE_KKEYPAD /;"	d
MODE_MOUSE_ALL	src/dev/tmux/tmux.h	/^#define MODE_MOUSE_ALL /;"	d
MODE_MOUSE_BUTTON	src/dev/tmux/tmux.h	/^#define MODE_MOUSE_BUTTON /;"	d
MODE_MOUSE_SGR	src/dev/tmux/tmux.h	/^#define MODE_MOUSE_SGR /;"	d
MODE_MOUSE_STANDARD	src/dev/tmux/tmux.h	/^#define MODE_MOUSE_STANDARD /;"	d
MODE_MOUSE_UTF8	src/dev/tmux/tmux.h	/^#define MODE_MOUSE_UTF8 /;"	d
MODE_WRAP	src/dev/tmux/tmux.h	/^#define MODE_WRAP /;"	d
MOUSE	src/dev/tmux/tmux.1	/^.Sh MOUSE SUPPORT$/;"	s
MOUSE_BUTTONS	src/dev/tmux/tmux.h	/^#define MOUSE_BUTTONS(/;"	d
MOUSE_DRAG	src/dev/tmux/tmux.h	/^#define MOUSE_DRAG(/;"	d
MOUSE_MASK_BUTTONS	src/dev/tmux/tmux.h	/^#define MOUSE_MASK_BUTTONS /;"	d
MOUSE_MASK_CTRL	src/dev/tmux/tmux.h	/^#define MOUSE_MASK_CTRL /;"	d
MOUSE_MASK_DRAG	src/dev/tmux/tmux.h	/^#define MOUSE_MASK_DRAG /;"	d
MOUSE_MASK_META	src/dev/tmux/tmux.h	/^#define MOUSE_MASK_META /;"	d
MOUSE_MASK_SHIFT	src/dev/tmux/tmux.h	/^#define MOUSE_MASK_SHIFT /;"	d
MOUSE_MASK_WHEEL	src/dev/tmux/tmux.h	/^#define MOUSE_MASK_WHEEL /;"	d
MOUSE_RELEASE	src/dev/tmux/tmux.h	/^#define MOUSE_RELEASE(/;"	d
MOUSE_WHEEL	src/dev/tmux/tmux.h	/^#define MOUSE_WHEEL(/;"	d
MOUSE_WHEEL_DOWN	src/dev/tmux/tmux.h	/^#define MOUSE_WHEEL_DOWN /;"	d
MOUSE_WHEEL_UP	src/dev/tmux/tmux.h	/^#define MOUSE_WHEEL_UP /;"	d
MOVE	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
MSG_COMMAND	src/dev/tmux/tmux.h	/^	MSG_COMMAND = 200,$/;"	e	enum:msgtype
MSG_DETACH	src/dev/tmux/tmux.h	/^	MSG_DETACH,$/;"	e	enum:msgtype
MSG_DETACHKILL	src/dev/tmux/tmux.h	/^	MSG_DETACHKILL,$/;"	e	enum:msgtype
MSG_EXEC	src/dev/tmux/tmux.h	/^	MSG_EXEC,$/;"	e	enum:msgtype
MSG_EXIT	src/dev/tmux/tmux.h	/^	MSG_EXIT,$/;"	e	enum:msgtype
MSG_EXITED	src/dev/tmux/tmux.h	/^	MSG_EXITED,$/;"	e	enum:msgtype
MSG_EXITING	src/dev/tmux/tmux.h	/^	MSG_EXITING,$/;"	e	enum:msgtype
MSG_IDENTIFY_CLIENTPID	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_CLIENTPID,$/;"	e	enum:msgtype
MSG_IDENTIFY_CWD	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_CWD,$/;"	e	enum:msgtype
MSG_IDENTIFY_DONE	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_DONE,$/;"	e	enum:msgtype
MSG_IDENTIFY_ENVIRON	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_ENVIRON,$/;"	e	enum:msgtype
MSG_IDENTIFY_FLAGS	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_FLAGS = 100,$/;"	e	enum:msgtype
MSG_IDENTIFY_OLDCWD	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_OLDCWD, \/* unused *\/$/;"	e	enum:msgtype
MSG_IDENTIFY_STDIN	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_STDIN,$/;"	e	enum:msgtype
MSG_IDENTIFY_TERM	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_TERM,$/;"	e	enum:msgtype
MSG_IDENTIFY_TTYNAME	src/dev/tmux/tmux.h	/^	MSG_IDENTIFY_TTYNAME,$/;"	e	enum:msgtype
MSG_LOCK	src/dev/tmux/tmux.h	/^	MSG_LOCK,$/;"	e	enum:msgtype
MSG_READY	src/dev/tmux/tmux.h	/^	MSG_READY,$/;"	e	enum:msgtype
MSG_RESIZE	src/dev/tmux/tmux.h	/^	MSG_RESIZE,$/;"	e	enum:msgtype
MSG_SHELL	src/dev/tmux/tmux.h	/^	MSG_SHELL,$/;"	e	enum:msgtype
MSG_SHUTDOWN	src/dev/tmux/tmux.h	/^	MSG_SHUTDOWN,$/;"	e	enum:msgtype
MSG_STDERR	src/dev/tmux/tmux.h	/^	MSG_STDERR,$/;"	e	enum:msgtype
MSG_STDIN	src/dev/tmux/tmux.h	/^	MSG_STDIN,$/;"	e	enum:msgtype
MSG_STDOUT	src/dev/tmux/tmux.h	/^	MSG_STDOUT,$/;"	e	enum:msgtype
MSG_SUSPEND	src/dev/tmux/tmux.h	/^	MSG_SUSPEND,$/;"	e	enum:msgtype
MSG_UNLOCK	src/dev/tmux/tmux.h	/^	MSG_UNLOCK,$/;"	e	enum:msgtype
MSG_VERSION	src/dev/tmux/tmux.h	/^	MSG_VERSION = 12,$/;"	e	enum:msgtype
MSG_WAKEUP	src/dev/tmux/tmux.h	/^	MSG_WAKEUP,$/;"	e	enum:msgtype
MSVCHelperMain	src/dev/ninja/src/msvc_helper_main-win32.cc	/^int MSVCHelperMain(int argc, char** argv) {$/;"	f	typeref:typename:int
MUL_NO_OVERFLOW	src/dev/tmux/compat/reallocarray.c	/^#define MUL_NO_OVERFLOW	/;"	d	file:
MUL_NO_OVERFLOW	src/dev/tmux/compat/recallocarray.c	/^#define MUL_NO_OVERFLOW /;"	d	file:
MakeConfig	src/dev/ninja/src/build_test.cc	/^  BuildConfig MakeConfig() {$/;"	f	struct:BuildTest	typeref:typename:BuildConfig	file:
MakeDir	src/dev/ninja/src/disk_interface.cc	/^bool RealDiskInterface::MakeDir(const string& path) {$/;"	f	class:RealDiskInterface	typeref:typename:bool
MakeDir	src/dev/ninja/src/disk_interface.cc	/^int MakeDir(const string& path) {$/;"	f	namespace:__anondfd6196f0110	typeref:typename:int
MakeDir	src/dev/ninja/src/disk_interface_test.cc	/^  virtual bool MakeDir(const string& path) {$/;"	f	struct:__anonebbddeae0110::StatTest	typeref:typename:bool	file:
MakeDir	src/dev/ninja/src/test.cc	/^bool VirtualFileSystem::MakeDir(const string& path) {$/;"	f	class:VirtualFileSystem	typeref:typename:bool
MakeDirs	src/dev/ninja/src/disk_interface.cc	/^bool DiskInterface::MakeDirs(const string& path) {$/;"	f	class:DiskInterface	typeref:typename:bool
MakePathList	src/dev/ninja/src/graph.cc	/^string EdgeEnv::MakePathList(vector<Node*>::iterator begin,$/;"	f	class:EdgeEnv	typeref:typename:string
Makefile	src/dev/tmux/Makefile	/^Makefile: $(srcdir)\/Makefile.in $(top_builddir)\/config.status$/;"	t
Makefile	src/dev/tmux/Makefile.in	/^Makefile: $(srcdir)\/Makefile.in $(top_builddir)\/config.status$/;"	t
ManifestParser	src/dev/ninja/src/manifest_parser.cc	/^ManifestParser::ManifestParser(State* state, FileReader* file_reader,$/;"	f	class:ManifestParser
ManifestParser	src/dev/ninja/src/manifest_parser.h	/^struct ManifestParser {$/;"	s
MappingEndEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^MappingEndEvent = yaml.events.MappingEndEvent$/;"	v
MappingEndEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class MappingEndEvent(CollectionEndEvent):$/;"	c
MappingEndEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class MappingEndEvent(CollectionEndEvent):$/;"	c
MappingNode	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^MappingNode = yaml.nodes.MappingNode$/;"	v
MappingNode	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^class MappingNode(CollectionNode):$/;"	c
MappingNode	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^class MappingNode(CollectionNode):$/;"	c
MappingStartEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^MappingStartEvent = yaml.events.MappingStartEvent$/;"	v
MappingStartEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class MappingStartEvent(CollectionStartEvent):$/;"	c
MappingStartEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class MappingStartEvent(CollectionStartEvent):$/;"	c
Mark	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^cdef class Mark:$/;"	c
Mark	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^class Mark(object):$/;"	c
Mark	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^class Mark:$/;"	c
MarkDirty	src/dev/ninja/src/graph.h	/^  void MarkDirty() { dirty_ = true; }$/;"	f	struct:Node	typeref:typename:void
MarkMissing	src/dev/ninja/src/graph.h	/^  void MarkMissing() {$/;"	f	struct:Node	typeref:typename:void
MarkedYAMLError	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^class MarkedYAMLError(YAMLError):$/;"	c
MarkedYAMLError	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^class MarkedYAMLError(YAMLError):$/;"	c
Messenger	meta/dotbot/dotbot/messenger/messenger.py	/^class Messenger(with_metaclass(Singleton, object)):$/;"	c
Metric	src/dev/ninja/src/metrics.h	/^struct Metric {$/;"	s
Metrics	src/dev/ninja/src/metrics.h	/^struct Metrics {$/;"	s
MiniDumpWriteDumpFunc	src/dev/ninja/src/minidump-win32.cc	/^typedef BOOL (WINAPI *MiniDumpWriteDumpFunc) ($/;"	t	typeref:typename:BOOL (WINAPI *)(IN HANDLE,IN DWORD,IN HANDLE,IN MINIDUMP_TYPE,IN CONST PMINIDUMP_EXCEPTION_INFORMATION,OPTIONAL IN CONST PMINIDUMP_USER_STREAM_INFORMATION,OPTIONAL IN CONST PMINIDUMP_CALLBACK_INFORMATION OPTIONAL)	file:
MurmurHash2	src/dev/ninja/src/hash_map.h	/^unsigned int MurmurHash2(const void* key, size_t len) {$/;"	f	typeref:typename:unsigned int
MurmurHash64A	src/dev/ninja/src/build_log.cc	/^uint64_t MurmurHash64A(const void* key, size_t len) {$/;"	f	namespace:__anonb14b96c50110	typeref:typename:uint64_t
MyAutoCmd	editors/vim/config/filetype.vim	/^augroup MyAutoCmd " {{{$/;"	a
MyAutoCmd	editors/vim/config/fullrc.vim	/^augroup MyAutoCmd$/;"	a
MyAutoCmd	editors/vim/config/minrc.vim	/^augroup MyAutoCmd$/;"	a
MyCanonicalLoader	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^    class MyCanonicalLoader(yaml.CanonicalLoader):$/;"	c	function:_make_canonical_loader	file:
MyCanonicalLoader	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^    class MyCanonicalLoader(yaml.CanonicalLoader):$/;"	c	function:_make_canonical_loader	file:
MyDict	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyDict(dict):$/;"	c	function:_make_objects	file:
MyDict	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyDict(dict):$/;"	c	function:_make_objects	file:
MyDumper	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyDumper(yaml.Dumper):$/;"	c	function:_make_objects	file:
MyDumper	meta/dotbot/lib/pyyaml/tests/lib/test_resolver.py	/^    class MyDumper(yaml.Dumper):$/;"	c	function:_make_path_loader_and_dumper	file:
MyDumper	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyDumper(yaml.Dumper):$/;"	c	function:_make_objects	file:
MyDumper	meta/dotbot/lib/pyyaml/tests/lib3/test_resolver.py	/^    class MyDumper(yaml.Dumper):$/;"	c	function:_make_path_loader_and_dumper	file:
MyInt	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyInt(int):$/;"	c	function:_make_objects	file:
MyInt	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyInt(int):$/;"	c	function:_make_objects	file:
MyList	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyList(list):$/;"	c	function:_make_objects	file:
MyList	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyList(list):$/;"	c	function:_make_objects	file:
MyLoader	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyLoader(yaml.Loader):$/;"	c	function:_make_objects	file:
MyLoader	meta/dotbot/lib/pyyaml/tests/lib/test_resolver.py	/^    class MyLoader(yaml.Loader):$/;"	c	function:_make_path_loader_and_dumper	file:
MyLoader	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^    class MyLoader(yaml.Loader):$/;"	c	function:_make_loader	file:
MyLoader	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyLoader(yaml.Loader):$/;"	c	function:_make_objects	file:
MyLoader	meta/dotbot/lib/pyyaml/tests/lib3/test_resolver.py	/^    class MyLoader(yaml.Loader):$/;"	c	function:_make_path_loader_and_dumper	file:
MyLoader	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^    class MyLoader(yaml.Loader):$/;"	c	function:_make_loader	file:
MyTestClass1	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyTestClass1:$/;"	c	function:_make_objects	file:
MyTestClass1	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyTestClass1:$/;"	c	function:_make_objects	file:
MyTestClass2	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyTestClass2(MyTestClass1, yaml.YAMLObject):$/;"	c	function:_make_objects	file:
MyTestClass2	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyTestClass2(MyTestClass1, yaml.YAMLObject):$/;"	c	function:_make_objects	file:
MyTestClass3	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class MyTestClass3(MyTestClass2):$/;"	c	function:_make_objects	file:
MyTestClass3	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class MyTestClass3(MyTestClass2):$/;"	c	function:_make_objects	file:
N	src/dev/ninja/src/build.h	/^    const size_t N;$/;"	m	struct:BuildStatus::SlidingRateInfo	typeref:typename:const size_t
NAME	meta/dotbot/lib/pyyaml/setup.py	/^NAME = 'PyYAML'$/;"	v
NAME	src/dev/tmux/tmux.1	/^.Sh NAME$/;"	s
NAME	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/doc/man/man1/zplug-check.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-CHECK
NAME	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-CLEAN
NAME	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-CLEAR
NAME	src/zplug/doc/man/man1/zplug-info.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INFO
NAME	src/zplug/doc/man/man1/zplug-install.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INSTALL
NAME	src/zplug/doc/man/man1/zplug-list.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LIST
NAME	src/zplug/doc/man/man1/zplug-load.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/doc/man/man1/zplug-status.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-STATUS
NAME	src/zplug/doc/man/man1/zplug-update.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-UPDATE
NAME	src/zplug/doc/man/man1/zplug.1	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DEPTH
NAME	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INSTALL
NAME	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INSTALL
NAME	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/doc/man/man5/zplug-as.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-AS
NAME	src/zplug/doc/man/man5/zplug-at.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-AT
NAME	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-AT
NAME	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DEFER
NAME	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DEPTH
NAME	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DIR
NAME	src/zplug/doc/man/man5/zplug-do.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
NAME	src/zplug/doc/man/man5/zplug-from.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-FROM
NAME	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-FROZEN
NAME	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
NAME	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
NAME	src/zplug/doc/man/man5/zplug-if.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-IF
NAME	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-IGNORE
NAME	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LAZY
NAME	src/zplug/doc/man/man5/zplug-of.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-USE
NAME	src/zplug/doc/man/man5/zplug-on.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-ON
NAME	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-RENAME\\-TO
NAME	src/zplug/doc/man/man5/zplug-use.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-USE
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-CHECK
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-CLEAN
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-CLEAR
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INFO
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INSTALL
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LIST
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-STATUS
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "NAME"$/;"	s	title:ZPLUG\\-UPDATE
NAME	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DEPTH
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INSTALL
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "NAME"$/;"	s	title:ZPLUG
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-INSTALL
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LOAD
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-AS
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-AT
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-AT
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DEFER
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DEPTH
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-DIR
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-FROM
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-FROZEN
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-IF
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-IGNORE
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-LAZY
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-USE
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-ON
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-RENAME\\-TO
NAME	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "NAME"$/;"	s	title:ZPLUG\\-USE
NAME	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^NAME=zsh-syntax-highlighting$/;"	m
NAMES	src/dev/tmux/tmux.1	/^.Sh NAMES AND TITLES$/;"	s
NAME_INTERVAL	src/dev/tmux/tmux.h	/^#define NAME_INTERVAL /;"	d
NAMLEN	src/dev/tmux/compat/closefrom.c	/^# define NAMLEN(/;"	d	file:
NEED_FORKPTY	src/dev/tmux/configure.ac	/^AM_CONDITIONAL(NEED_FORKPTY, test "x$found_forkpty" = xno)$/;"	c
NEWLINE	src/dev/ninja/src/lexer.h	/^    NEWLINE,$/;"	e	enum:Lexer::Token
NEW_SESSION_TEMPLATE	src/dev/tmux/cmd-new-session.c	/^#define NEW_SESSION_TEMPLATE /;"	d	file:
NEW_WINDOW_TEMPLATE	src/dev/tmux/cmd-new-window.c	/^#define NEW_WINDOW_TEMPLATE /;"	d	file:
NINJA_BROWSE_H_	src/dev/ninja/src/browse.h	/^#define NINJA_BROWSE_H_$/;"	d
NINJA_BUILD_H_	src/dev/ninja/src/build.h	/^#define NINJA_BUILD_H_$/;"	d
NINJA_BUILD_LOG_H_	src/dev/ninja/src/build_log.h	/^#define NINJA_BUILD_LOG_H_$/;"	d
NINJA_CLEAN_H_	src/dev/ninja/src/clean.h	/^#define NINJA_CLEAN_H_$/;"	d
NINJA_CLPARSER_H_	src/dev/ninja/src/clparser.h	/^#define NINJA_CLPARSER_H_$/;"	d
NINJA_DEPFILE_PARSER_H_	src/dev/ninja/src/depfile_parser.h	/^#define NINJA_DEPFILE_PARSER_H_$/;"	d
NINJA_DEPS_LOG_H_	src/dev/ninja/src/deps_log.h	/^#define NINJA_DEPS_LOG_H_$/;"	d
NINJA_DISK_INTERFACE_H_	src/dev/ninja/src/disk_interface.h	/^#define NINJA_DISK_INTERFACE_H_$/;"	d
NINJA_EDIT_DISTANCE_H_	src/dev/ninja/src/edit_distance.h	/^#define NINJA_EDIT_DISTANCE_H_$/;"	d
NINJA_EVAL_ENV_H_	src/dev/ninja/src/eval_env.h	/^#define NINJA_EVAL_ENV_H_$/;"	d
NINJA_EXIT_STATUS_H_	src/dev/ninja/src/exit_status.h	/^#define NINJA_EXIT_STATUS_H_$/;"	d
NINJA_EXPLAIN_H_	src/dev/ninja/src/debug_flags.h	/^#define NINJA_EXPLAIN_H_$/;"	d
NINJA_GRAPHVIZ_H_	src/dev/ninja/src/graphviz.h	/^#define NINJA_GRAPHVIZ_H_$/;"	d
NINJA_GRAPH_H_	src/dev/ninja/src/graph.h	/^#define NINJA_GRAPH_H_$/;"	d
NINJA_LEXER_H_	src/dev/ninja/src/lexer.h	/^#define NINJA_LEXER_H_$/;"	d
NINJA_LINE_PRINTER_H_	src/dev/ninja/src/line_printer.h	/^#define NINJA_LINE_PRINTER_H_$/;"	d
NINJA_MANIFEST_PARSER_H_	src/dev/ninja/src/manifest_parser.h	/^#define NINJA_MANIFEST_PARSER_H_$/;"	d
NINJA_MAP_H_	src/dev/ninja/src/hash_map.h	/^#define NINJA_MAP_H_$/;"	d
NINJA_METRICS_H_	src/dev/ninja/src/metrics.h	/^#define NINJA_METRICS_H_$/;"	d
NINJA_STATE_H_	src/dev/ninja/src/state.h	/^#define NINJA_STATE_H_$/;"	d
NINJA_STRINGPIECE_H_	src/dev/ninja/src/string_piece.h	/^#define NINJA_STRINGPIECE_H_$/;"	d
NINJA_SUBPROCESS_H_	src/dev/ninja/src/subprocess.h	/^#define NINJA_SUBPROCESS_H_$/;"	d
NINJA_TEST_H_	src/dev/ninja/src/test.h	/^#define NINJA_TEST_H_$/;"	d
NINJA_TIMESTAMP_H_	src/dev/ninja/src/timestamp.h	/^#define NINJA_TIMESTAMP_H_$/;"	d
NINJA_UTIL_H_	src/dev/ninja/src/util.h	/^#define NINJA_UTIL_H_$/;"	d
NINJA_VERSION_H_	src/dev/ninja/src/version.h	/^#define NINJA_VERSION_H_$/;"	d
NINJA_WIN32PORT_H_	src/dev/ninja/src/win32port.h	/^#define NINJA_WIN32PORT_H_$/;"	d
NONE	meta/dotbot/dotbot/messenger/color.py	/^    NONE = ''$/;"	v	class:Color
NON_PRINTABLE	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    NON_PRINTABLE = re.compile(u'[^\\x09\\x0A\\x0D\\x20-\\x7E\\x85\\xA0-\\uD7FF\\uE000-\\uFFFD]'/;"	v	class:Reader
NON_PRINTABLE	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    NON_PRINTABLE = re.compile('[^\\x09\\x0A\\x0D\\x20-\\x7E\\x85\\xA0-\\uD7FF\\uE000-\\uFFFD]')$/;"	v	class:Reader
NORETURN	src/dev/ninja/src/util.h	/^#define NORETURN /;"	d
NORMAL	src/dev/ninja/src/build.h	/^    NORMAL,$/;"	e	enum:BuildConfig::Verbosity
NORMAL_INSTALL	src/dev/tmux/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/dev/tmux/Makefile.in	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	src/dev/tmux/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/dev/tmux/Makefile.in	/^NORMAL_UNINSTALL = :$/;"	m
NOTSET	meta/dotbot/dotbot/messenger/level.py	/^    NOTSET = 0$/;"	v	class:Level
NOTYPE	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
NOWHERE	src/dev/tmux/server-client.c	/^	enum { NOWHERE, PANE, STATUS, BORDER } where;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0203	file:
Name	src/dev/ninja/misc/packaging/ninja.spec	/^Name: ninja$/;"	t
NeosnippetSnippets_Goiferr	editors/vim/snippets/go.vim	/^function! g:NeosnippetSnippets_Goiferr() abort$/;"	f
NewArgs	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class NewArgs(AnObject):$/;"	c	function:_make_objects	file:
NewArgs	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class NewArgs(AnObject):$/;"	c	function:_make_objects	file:
NewArgsWithState	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class NewArgsWithState(AnObject):$/;"	c	function:_make_objects	file:
NewArgsWithState	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class NewArgsWithState(AnObject):$/;"	c	function:_make_objects	file:
NewMetric	src/dev/ninja/src/metrics.cc	/^Metric* Metrics::NewMetric(const string& name) {$/;"	f	class:Metrics	typeref:typename:Metric *
NextFinished	src/dev/ninja/src/subprocess-posix.cc	/^Subprocess* SubprocessSet::NextFinished() {$/;"	f	class:SubprocessSet	typeref:typename:Subprocess *
NextFinished	src/dev/ninja/src/subprocess-win32.cc	/^Subprocess* SubprocessSet::NextFinished() {$/;"	f	class:SubprocessSet	typeref:typename:Subprocess *
NinjaMain	src/dev/ninja/src/ninja.cc	/^  NinjaMain(const char* ninja_command, const BuildConfig& config) :$/;"	f	struct:__anon193baac40110::NinjaMain	file:
NinjaMain	src/dev/ninja/src/ninja.cc	/^struct NinjaMain : public BuildLogUser {$/;"	s	namespace:__anon193baac40110	file:
NoDeadPaths	src/dev/ninja/src/build_log_perftest.cc	/^struct NoDeadPaths : public BuildLogUser {$/;"	s	file:
Node	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^class Node(object):$/;"	c
Node	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^class Node(object):$/;"	c
Node	src/dev/ninja/src/browse.py	/^Node = namedtuple('Node', ['inputs', 'rule', 'target', 'outputs'])$/;"	v
Node	src/dev/ninja/src/graph.h	/^  Node(const string& path, unsigned int slash_bits)$/;"	f	struct:Node
Node	src/dev/ninja/src/graph.h	/^struct Node {$/;"	s
NodeEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class NodeEvent(Event):$/;"	c
NodeEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class NodeEvent(Event):$/;"	c
NodeFinished	src/dev/ninja/src/build.cc	/^void Plan::NodeFinished(Node* node) {$/;"	f	class:Plan	typeref:typename:void
Normalize	src/dev/ninja/src/includes_normalize-win32.cc	/^bool IncludesNormalize::Normalize(const string& input, const char* relative_to,$/;"	f	class:IncludesNormalize	typeref:typename:bool
NormalizeAndCheckNoError	src/dev/ninja/src/includes_normalize_test.cc	/^string NormalizeAndCheckNoError(const string& input) {$/;"	f	namespace:__anonaa19d11a0110	typeref:typename:string
NormalizeRelativeAndCheckNoError	src/dev/ninja/src/includes_normalize_test.cc	/^string NormalizeRelativeAndCheckNoError(const string& input,$/;"	f	namespace:__anonaa19d11a0110	typeref:typename:string
NotFound	src/dev/ninja/src/disk_interface.h	/^    NotFound,$/;"	e	enum:FileReader::Status
NotifyInterrupted	src/dev/ninja/src/subprocess-win32.cc	/^BOOL WINAPI SubprocessSet::NotifyInterrupted(DWORD dwCtrlType) {$/;"	f	class:SubprocessSet	typeref:typename:BOOL WINAPI
Now	src/dev/ninja/src/metrics.cc	/^uint64_t Stopwatch::Now() const {$/;"	f	class:Stopwatch	typeref:typename:uint64_t
O	editors/vim/ftplugin/help.vim	/^nmap <buffer> O ?'[a-z]\\{2,\\}'<CR>$/;"	m
O	editors/vim/ftplugin/qf.vim	/^	nnoremap <buffer> O <CR>:cclose<CR>$/;"	m
O	editors/vim/ftplugin/qf.vim	/^	nnoremap <buffer> O <CR>:lclose<CR>$/;"	m
OBJEXT	src/dev/tmux/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/dev/tmux/Makefile.in	/^OBJEXT = @OBJEXT@$/;"	m
OPEN_MAX	src/dev/tmux/compat/closefrom.c	/^# define OPEN_MAX	/;"	d	file:
OPTIONAL_ARG	src/dev/ninja/src/getopt.h	/^#define OPTIONAL_ARG /;"	d
OPTIONE	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "OPTIONE"$/;"	s	title:ZPLUG\\-CLEAN
OPTIONE	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "OPTIONE"$/;"	s	title:ZPLUG\\-CLEAN
OPTIONS	src/dev/tmux/tmux.1	/^.Sh OPTIONS$/;"	s
OPTIONS	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/doc/man/man1/zplug-check.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-CHECK
OPTIONS	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-CLEAR
OPTIONS	src/zplug/doc/man/man1/zplug-info.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INFO
OPTIONS	src/zplug/doc/man/man1/zplug-install.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INSTALL
OPTIONS	src/zplug/doc/man/man1/zplug-list.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LIST
OPTIONS	src/zplug/doc/man/man1/zplug-load.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS	src/zplug/doc/man/man1/zplug-status.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-STATUS
OPTIONS	src/zplug/doc/man/man1/zplug-update.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-UPDATE
OPTIONS	src/zplug/doc/man/man1/zplug.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INSTALL
OPTIONS	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INSTALL
OPTIONS	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-CHECK
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-CLEAR
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INFO
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INSTALL
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LIST
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-STATUS
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-UPDATE
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INSTALL
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-INSTALL
OPTIONS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "OPTIONS"$/;"	s	title:ZPLUG\\-LOAD
OPTIONS_ARRAY_LIMIT	src/dev/tmux/options.c	/^#define OPTIONS_ARRAY_LIMIT /;"	d	file:
OPTIONS_IS_ARRAY	src/dev/tmux/options.c	/^#define OPTIONS_IS_ARRAY(/;"	d	file:
OPTIONS_IS_NUMBER	src/dev/tmux/options.c	/^#define OPTIONS_IS_NUMBER(/;"	d	file:
OPTIONS_IS_STRING	src/dev/tmux/options.c	/^#define OPTIONS_IS_STRING(/;"	d	file:
OPTIONS_IS_STYLE	src/dev/tmux/options.c	/^#define OPTIONS_IS_STYLE(/;"	d	file:
OPTIONS_TABLE_ARRAY	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_ARRAY,$/;"	e	enum:options_table_type
OPTIONS_TABLE_ATTRIBUTES	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_ATTRIBUTES,$/;"	e	enum:options_table_type
OPTIONS_TABLE_CHOICE	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_CHOICE,$/;"	e	enum:options_table_type
OPTIONS_TABLE_COLOUR	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_COLOUR,$/;"	e	enum:options_table_type
OPTIONS_TABLE_FLAG	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_FLAG,$/;"	e	enum:options_table_type
OPTIONS_TABLE_KEY	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_KEY,$/;"	e	enum:options_table_type
OPTIONS_TABLE_NONE	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_NONE,$/;"	e	enum:options_table_scope
OPTIONS_TABLE_NUMBER	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_NUMBER,$/;"	e	enum:options_table_type
OPTIONS_TABLE_SERVER	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_SERVER,$/;"	e	enum:options_table_scope
OPTIONS_TABLE_SESSION	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_SESSION,$/;"	e	enum:options_table_scope
OPTIONS_TABLE_STRING	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_STRING,$/;"	e	enum:options_table_type
OPTIONS_TABLE_STYLE	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_STYLE,$/;"	e	enum:options_table_type
OPTIONS_TABLE_WINDOW	src/dev/tmux/tmux.h	/^	OPTIONS_TABLE_WINDOW,$/;"	e	enum:options_table_scope
OPT_GTEST_FILTER	src/dev/ninja/src/ninja_test.cc	/^  enum { OPT_GTEST_FILTER = 1 };$/;"	e	enum:__anonce8c8d230110::ReadFlags::__anonce8c8d230203	file:
OPT_VERSION	src/dev/ninja/src/ninja.cc	/^  enum { OPT_VERSION = 1 };$/;"	e	enum:__anon193baac40110::ReadFlags::__anon193baac40303	file:
O_DIRECTORY	src/dev/tmux/compat.h	/^#define O_DIRECTORY /;"	d
Okay	src/dev/ninja/src/disk_interface.h	/^    Okay,$/;"	e	enum:FileReader::Status
OnPipeReady	src/dev/ninja/src/subprocess-posix.cc	/^void Subprocess::OnPipeReady() {$/;"	f	class:Subprocess	typeref:typename:void
OnPipeReady	src/dev/ninja/src/subprocess-win32.cc	/^void Subprocess::OnPipeReady() {$/;"	f	class:Subprocess	typeref:typename:void
OpenBuildLog	src/dev/ninja/src/ninja.cc	/^bool NinjaMain::OpenBuildLog(bool recompact_only) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:bool
OpenChangedFiles	editors/vim/config/mappings.vim	/^function! OpenChangedFiles()$/;"	f
OpenDepsLog	src/dev/ninja/src/ninja.cc	/^bool NinjaMain::OpenDepsLog(bool recompact_only) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:bool
OpenForWrite	src/dev/ninja/src/build_log.cc	/^bool BuildLog::OpenForWrite(const string& path, const BuildLogUser& user,$/;"	f	class:BuildLog	typeref:typename:bool
OpenForWrite	src/dev/ninja/src/deps_log.cc	/^bool DepsLog::OpenForWrite(const string& path, string* err) {$/;"	f	class:DepsLog	typeref:typename:bool
Options	src/dev/ninja/src/ninja.cc	/^struct Options {$/;"	s	namespace:__anon193baac40110	file:
OtherError	src/dev/ninja/src/disk_interface.h	/^    OtherError$/;"	e	enum:FileReader::Status
PACKAGE	src/dev/tmux/Makefile	/^PACKAGE = tmux$/;"	m
PACKAGE	src/dev/tmux/Makefile.in	/^PACKAGE = @PACKAGE@$/;"	m
PACKAGE_BUGREPORT	src/dev/tmux/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/dev/tmux/Makefile.in	/^PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@$/;"	m
PACKAGE_NAME	src/dev/tmux/Makefile	/^PACKAGE_NAME = tmux$/;"	m
PACKAGE_NAME	src/dev/tmux/Makefile.in	/^PACKAGE_NAME = @PACKAGE_NAME@$/;"	m
PACKAGE_STRING	src/dev/tmux/Makefile	/^PACKAGE_STRING = tmux master$/;"	m
PACKAGE_STRING	src/dev/tmux/Makefile.in	/^PACKAGE_STRING = @PACKAGE_STRING@$/;"	m
PACKAGE_TARNAME	src/dev/tmux/Makefile	/^PACKAGE_TARNAME = tmux$/;"	m
PACKAGE_TARNAME	src/dev/tmux/Makefile.in	/^PACKAGE_TARNAME = @PACKAGE_TARNAME@$/;"	m
PACKAGE_URL	src/dev/tmux/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/dev/tmux/Makefile.in	/^PACKAGE_URL = @PACKAGE_URL@$/;"	m
PACKAGE_VERSION	src/dev/tmux/Makefile	/^PACKAGE_VERSION = master$/;"	m
PACKAGE_VERSION	src/dev/tmux/Makefile.in	/^PACKAGE_VERSION = @PACKAGE_VERSION@$/;"	m
PANE	src/dev/tmux/server-client.c	/^	enum { NOWHERE, PANE, STATUS, BORDER } where;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0203	file:
PANE_CHANGED	src/dev/tmux/tmux.h	/^#define PANE_CHANGED /;"	d
PANE_DROP	src/dev/tmux/tmux.h	/^#define PANE_DROP /;"	d
PANE_EXITED	src/dev/tmux/tmux.h	/^#define PANE_EXITED /;"	d
PANE_FOCUSED	src/dev/tmux/tmux.h	/^#define PANE_FOCUSED /;"	d
PANE_FOCUSPUSH	src/dev/tmux/tmux.h	/^#define PANE_FOCUSPUSH /;"	d
PANE_INPUTOFF	src/dev/tmux/tmux.h	/^#define PANE_INPUTOFF /;"	d
PANE_MINIMUM	src/dev/tmux/tmux.h	/^#define PANE_MINIMUM /;"	d
PANE_REDRAW	src/dev/tmux/tmux.h	/^#define PANE_REDRAW /;"	d
PANE_RESIZE	src/dev/tmux/tmux.h	/^#define PANE_RESIZE /;"	d
PANE_RESIZEFORCE	src/dev/tmux/tmux.h	/^#define PANE_RESIZEFORCE /;"	d
PARAMETERS	meta/dotbot/lib/pyyaml/Makefile	/^PARAMETERS=$/;"	m
PATH_MAX	src/dev/ninja/src/util.h	/^#define PATH_MAX /;"	d
PATH_SEPARATOR	src/dev/tmux/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/dev/tmux/Makefile.in	/^PATH_SEPARATOR = @PATH_SEPARATOR@$/;"	m
PEER_BAD	src/dev/tmux/proc.c	/^#define PEER_BAD /;"	d	file:
PERMUTE	src/dev/ninja/src/getopt.c	/^  PERMUTE,$/;"	e	enum:GETOPT_ORDERING_T	file:
PIPE	src/dev/ninja/src/lexer.h	/^    PIPE,$/;"	e	enum:Lexer::Token
PIPE2	src/dev/ninja/src/lexer.h	/^    PIPE2,$/;"	e	enum:Lexer::Token
PKG_CHECK_EXISTS	src/dev/tmux/aclocal.m4	/^AC_DEFUN([PKG_CHECK_EXISTS],$/;"	m
PKG_CHECK_MODULES	src/dev/tmux/aclocal.m4	/^AC_DEFUN([PKG_CHECK_MODULES],$/;"	m
PKG_CHECK_MODULES_STATIC	src/dev/tmux/aclocal.m4	/^AC_DEFUN([PKG_CHECK_MODULES_STATIC],$/;"	m
PKG_CHECK_VAR	src/dev/tmux/aclocal.m4	/^AC_DEFUN([PKG_CHECK_VAR],$/;"	m
PKG_CONFIG	src/dev/tmux/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/dev/tmux/Makefile.in	/^PKG_CONFIG = @PKG_CONFIG@$/;"	m
PKG_CONFIG_LIBDIR	src/dev/tmux/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/dev/tmux/Makefile.in	/^PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@$/;"	m
PKG_CONFIG_PATH	src/dev/tmux/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/dev/tmux/Makefile.in	/^PKG_CONFIG_PATH = @PKG_CONFIG_PATH@$/;"	m
PKG_INSTALLDIR	src/dev/tmux/aclocal.m4	/^AC_DEFUN([PKG_INSTALLDIR],$/;"	m
PKG_NOARCH_INSTALLDIR	src/dev/tmux/aclocal.m4	/^AC_DEFUN([PKG_NOARCH_INSTALLDIR],$/;"	m
PKG_PROG_PKG_CONFIG	src/dev/tmux/aclocal.m4	/^AC_DEFUN([PKG_PROG_PKG_CONFIG],$/;"	m
PLATFORM	src/dev/tmux/Makefile	/^PLATFORM = linux$/;"	m
PLATFORM	src/dev/tmux/Makefile.in	/^PLATFORM = @PLATFORM@$/;"	m
PLATFORM	src/dev/tmux/configure.ac	/^AC_SUBST(PLATFORM)$/;"	s
PLATFORMS	meta/dotbot/lib/pyyaml/setup.py	/^PLATFORMS = "Any"$/;"	v
PLUGIN_TARGET	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^PLUGIN_TARGET := zsh-autosuggestions.zsh$/;"	m
POOL	src/dev/ninja/src/lexer.h	/^    POOL,$/;"	e	enum:Lexer::Token
PORT	src/crouton-clipboard/server.js	/^var PORT = 3396$/;"	v
POST_INSTALL	src/dev/tmux/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/dev/tmux/Makefile.in	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	src/dev/tmux/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/dev/tmux/Makefile.in	/^POST_UNINSTALL = :$/;"	m
PREFIX	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^PREFIX?=\/usr\/local$/;"	m
PRE_INSTALL	src/dev/tmux/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/dev/tmux/Makefile.in	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	src/dev/tmux/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/dev/tmux/Makefile.in	/^PRE_UNINSTALL = :$/;"	m
PRIu64	src/dev/ninja/src/win32port.h	/^#define PRIu64 /;"	d
PRIx64	src/dev/ninja/src/win32port.h	/^#define PRIx64 /;"	d
PROGRAMS	src/dev/tmux/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROGRAMS	src/dev/tmux/Makefile.in	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROMPT_COMMAND	src/dev/tmux/tmux.h	/^	enum { PROMPT_ENTRY, PROMPT_COMMAND } prompt_mode;$/;"	e	enum:client::__anonc903038b0803
PROMPT_ENTRY	src/dev/tmux/tmux.h	/^	enum { PROMPT_ENTRY, PROMPT_COMMAND } prompt_mode;$/;"	e	enum:client::__anonc903038b0803
PROMPT_HISTORY	src/dev/tmux/status.c	/^#define PROMPT_HISTORY /;"	d	file:
PROMPT_INCREMENTAL	src/dev/tmux/tmux.h	/^#define PROMPT_INCREMENTAL /;"	d
PROMPT_NOFORMAT	src/dev/tmux/tmux.h	/^#define PROMPT_NOFORMAT /;"	d
PROMPT_NUMERIC	src/dev/tmux/tmux.h	/^#define PROMPT_NUMERIC /;"	d
PROMPT_SINGLE	src/dev/tmux/tmux.h	/^#define PROMPT_SINGLE /;"	d
PROTOCOL_VERSION	src/dev/tmux/tmux.h	/^#define PROTOCOL_VERSION /;"	d
PYTHON	meta/dotbot/lib/pyyaml/Makefile	/^PYTHON=\/usr\/bin\/python$/;"	m
Pad64	src/dev/tmux/compat/base64.c	/^static const char Pad64 = '=';$/;"	v	typeref:typename:const char	file:
Page-1	src/dev/tmux/logo/tmux-logo-1-color.svg	/^    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="M/;"	i
Page-1	src/dev/tmux/logo/tmux-logo.svg	/^    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="M/;"	i
Page-1	src/dev/tmux/logo/tmux-logomark.svg	/^    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="M/;"	i
Parse	src/dev/ninja/src/clparser.cc	/^bool CLParser::Parse(const string& output, const string& deps_prefix,$/;"	f	class:CLParser	typeref:typename:bool
Parse	src/dev/ninja/src/depfile_parser.cc	/^bool DepfileParser::Parse(string* content, string* err) {$/;"	f	class:DepfileParser	typeref:typename:bool
Parse	src/dev/ninja/src/depfile_parser.in.cc	/^bool DepfileParser::Parse(string* content, string* err) {$/;"	f	class:DepfileParser	typeref:typename:bool
Parse	src/dev/ninja/src/depfile_parser_test.cc	/^bool DepfileParserTest::Parse(const char* input, string* err) {$/;"	f	class:DepfileParserTest	typeref:typename:bool
Parse	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::Parse(const string& filename, const string& input,$/;"	f	class:ManifestParser	typeref:typename:bool
ParseDefault	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::ParseDefault(string* err) {$/;"	f	class:ManifestParser	typeref:typename:bool
ParseEdge	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::ParseEdge(string* err) {$/;"	f	class:ManifestParser	typeref:typename:bool
ParseFileInclude	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::ParseFileInclude(bool new_scope, string* err) {$/;"	f	class:ManifestParser	typeref:typename:bool
ParseLet	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::ParseLet(string* key, EvalString* value, string* err) {$/;"	f	class:ManifestParser	typeref:typename:bool
ParsePool	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::ParsePool(string* err) {$/;"	f	class:ManifestParser	typeref:typename:bool
ParseRule	src/dev/ninja/src/manifest_parser.cc	/^bool ManifestParser::ParseRule(string* err) {$/;"	f	class:ManifestParser	typeref:typename:bool
ParseTest	src/dev/ninja/src/manifest_parser.h	/^  bool ParseTest(const string& input, string* err) {$/;"	f	struct:ManifestParser	typeref:typename:bool
ParseVersion	src/dev/ninja/src/version.cc	/^void ParseVersion(const string& version, int* major, int* minor) {$/;"	f	typeref:typename:void
Parser	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^class Parser(object):$/;"	c
Parser	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^class Parser:$/;"	c
ParserError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ParserError = yaml.parser.ParserError$/;"	v
ParserError	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^class ParserError(MarkedYAMLError):$/;"	c
ParserError	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^class ParserError(MarkedYAMLError):$/;"	c
ParserTest	src/dev/ninja/src/manifest_parser_test.cc	/^struct ParserTest : public testing::Test {$/;"	s	file:
PathDecanonicalized	src/dev/ninja/src/graph.cc	/^string Node::PathDecanonicalized(const string& path, unsigned int slash_bits) {$/;"	f	class:Node	typeref:typename:string
PathDecanonicalized	src/dev/ninja/src/graph.h	/^  string PathDecanonicalized() const {$/;"	f	struct:Node	typeref:typename:string
Paths	src/dev/ninja/src/state.h	/^  typedef ExternalStringHashMap<Node*>::Type Paths;$/;"	t	struct:State	typeref:typename:ExternalStringHashMap<Node * >::Type
PatternMatchesString	src/dev/ninja/src/ninja_test.cc	/^bool PatternMatchesString(const char* pattern, const char* str) {$/;"	f	namespace:__anonce8c8d230110	typeref:typename:bool
PeekToken	src/dev/ninja/src/lexer.cc	/^bool Lexer::PeekToken(Token token) {$/;"	f	class:Lexer	typeref:typename:bool
PeekToken	src/dev/ninja/src/lexer.in.cc	/^bool Lexer::PeekToken(Token token) {$/;"	f	class:Lexer	typeref:typename:bool
Plan	src/dev/ninja/src/build.cc	/^Plan::Plan() : command_edges_(0), wanted_edges_(0) {}$/;"	f	class:Plan
Plan	src/dev/ninja/src/build.h	/^struct Plan {$/;"	s
PlanHasTotalEdges	src/dev/ninja/src/build.cc	/^void BuildStatus::PlanHasTotalEdges(int total) {$/;"	f	class:BuildStatus	typeref:typename:void
PlanTest	src/dev/ninja/src/build_test.cc	/^struct PlanTest : public StateTestWithBuiltinRules {$/;"	s	file:
Platform	src/dev/ninja/configure.py	/^class Platform(object):$/;"	c
Plugin	meta/dotbot/dotbot/plugin.py	/^class Plugin(object):$/;"	c
Pool	src/dev/ninja/src/state.h	/^  Pool(const string& name, int depth)$/;"	f	struct:Pool
Pool	src/dev/ninja/src/state.h	/^struct Pool {$/;"	s
PreallocateSpace	src/dev/ninja/src/graph.cc	/^vector<Node*>::iterator ImplicitDepLoader::PreallocateSpace(Edge* edge,$/;"	f	class:ImplicitDepLoader	typeref:typename:vector<Node * >::iterator
Print	src/dev/ninja/src/line_printer.cc	/^void LinePrinter::Print(string to_print, LineType type) {$/;"	f	class:LinePrinter	typeref:typename:void
PrintCommands	src/dev/ninja/src/ninja.cc	/^void PrintCommands(Edge* edge, set<Edge*>* seen) {$/;"	f	namespace:__anon193baac40110	typeref:typename:void
PrintFooter	src/dev/ninja/src/clean.cc	/^void Cleaner::PrintFooter() {$/;"	f	class:Cleaner	typeref:typename:void
PrintHeader	src/dev/ninja/src/clean.cc	/^void Cleaner::PrintHeader() {$/;"	f	class:Cleaner	typeref:typename:void
PrintOnNewLine	src/dev/ninja/src/line_printer.cc	/^void LinePrinter::PrintOnNewLine(const string& to_print) {$/;"	f	class:LinePrinter	typeref:typename:void
PrintOrBuffer	src/dev/ninja/src/line_printer.cc	/^void LinePrinter::PrintOrBuffer(const char* data, size_t size) {$/;"	f	class:LinePrinter	typeref:typename:void
PrintStatus	src/dev/ninja/src/build.cc	/^void BuildStatus::PrintStatus(Edge* edge, EdgeStatus status) {$/;"	f	class:BuildStatus	typeref:typename:void
PushPathIntoEnvironment	src/dev/ninja/src/msvc_helper_main-win32.cc	/^void PushPathIntoEnvironment(const string& env_block) {$/;"	f	namespace:__anon670f5b500110	typeref:typename:void
PyLong_FromUnsignedLongLong	meta/dotbot/lib/pyyaml/ext/_yaml.h	/^#define PyLong_FromUnsignedLongLong(/;"	d
PyString_AS_STRING	meta/dotbot/lib/pyyaml/ext/_yaml.h	/^#define PyString_AS_STRING /;"	d
PyString_CheckExact	meta/dotbot/lib/pyyaml/ext/_yaml.h	/^#define PyString_CheckExact /;"	d
PyString_FromStringAndSize	meta/dotbot/lib/pyyaml/ext/_yaml.h	/^#define PyString_FromStringAndSize /;"	d
PyString_GET_SIZE	meta/dotbot/lib/pyyaml/ext/_yaml.h	/^#define PyString_GET_SIZE /;"	d
PyUnicode_FromString	meta/dotbot/lib/pyyaml/ext/_yaml.h	/^#define PyUnicode_FromString(/;"	d
Q	editors/vim/config/mappings.vim	/^nnoremap Q q$/;"	m
QUIET	src/dev/ninja/src/build.h	/^    QUIET,  \/\/ No output -- used when testing.$/;"	e	enum:BuildConfig::Verbosity
QUOTE_CODES	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    QUOTE_CODES = {$/;"	v	class:CanonicalScanner
QUOTE_CODES	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    QUOTE_CODES = {$/;"	v	class:CanonicalScanner
QUOTE_REPLACES	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    QUOTE_REPLACES = {$/;"	v	class:CanonicalScanner
QUOTE_REPLACES	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    QUOTE_REPLACES = {$/;"	v	class:CanonicalScanner
RAW	src/dev/ninja/src/eval_env.h	/^  enum TokenType { RAW, SPECIAL };$/;"	e	enum:EvalString::TokenType
RB_AUGMENT	src/dev/tmux/compat/tree.h	/^#define RB_AUGMENT(/;"	d
RB_BLACK	src/dev/tmux/compat/tree.h	/^#define RB_BLACK	/;"	d
RB_COLOR	src/dev/tmux/compat/tree.h	/^#define RB_COLOR(/;"	d
RB_EMPTY	src/dev/tmux/compat/tree.h	/^#define RB_EMPTY(/;"	d
RB_ENTRY	src/dev/tmux/compat/tree.h	/^#define RB_ENTRY(/;"	d
RB_FIND	src/dev/tmux/compat/tree.h	/^#define RB_FIND(/;"	d
RB_FOREACH	src/dev/tmux/compat/tree.h	/^#define RB_FOREACH(/;"	d
RB_FOREACH_REVERSE	src/dev/tmux/compat/tree.h	/^#define RB_FOREACH_REVERSE(/;"	d
RB_FOREACH_REVERSE_SAFE	src/dev/tmux/compat/tree.h	/^#define RB_FOREACH_REVERSE_SAFE(/;"	d
RB_FOREACH_SAFE	src/dev/tmux/compat/tree.h	/^#define RB_FOREACH_SAFE(/;"	d
RB_GENERATE	src/dev/tmux/compat/tree.h	/^#define	RB_GENERATE(/;"	d
RB_GENERATE_INTERNAL	src/dev/tmux/compat/tree.h	/^#define RB_GENERATE_INTERNAL(/;"	d
RB_GENERATE_STATIC	src/dev/tmux/compat/tree.h	/^#define	RB_GENERATE_STATIC(/;"	d
RB_HEAD	src/dev/tmux/compat/tree.h	/^#define RB_HEAD(/;"	d
RB_INF	src/dev/tmux/compat/tree.h	/^#define RB_INF	/;"	d
RB_INIT	src/dev/tmux/compat/tree.h	/^#define RB_INIT(/;"	d
RB_INITIALIZER	src/dev/tmux/compat/tree.h	/^#define RB_INITIALIZER(/;"	d
RB_INSERT	src/dev/tmux/compat/tree.h	/^#define RB_INSERT(/;"	d
RB_LEFT	src/dev/tmux/compat/tree.h	/^#define RB_LEFT(/;"	d
RB_MAX	src/dev/tmux/compat/tree.h	/^#define RB_MAX(/;"	d
RB_MIN	src/dev/tmux/compat/tree.h	/^#define RB_MIN(/;"	d
RB_NEGINF	src/dev/tmux/compat/tree.h	/^#define RB_NEGINF	/;"	d
RB_NEXT	src/dev/tmux/compat/tree.h	/^#define RB_NEXT(/;"	d
RB_NFIND	src/dev/tmux/compat/tree.h	/^#define RB_NFIND(/;"	d
RB_PARENT	src/dev/tmux/compat/tree.h	/^#define RB_PARENT(/;"	d
RB_PREV	src/dev/tmux/compat/tree.h	/^#define RB_PREV(/;"	d
RB_PROTOTYPE	src/dev/tmux/compat/tree.h	/^#define	RB_PROTOTYPE(/;"	d
RB_PROTOTYPE_INTERNAL	src/dev/tmux/compat/tree.h	/^#define RB_PROTOTYPE_INTERNAL(/;"	d
RB_PROTOTYPE_STATIC	src/dev/tmux/compat/tree.h	/^#define	RB_PROTOTYPE_STATIC(/;"	d
RB_RED	src/dev/tmux/compat/tree.h	/^#define RB_RED	/;"	d
RB_REMOVE	src/dev/tmux/compat/tree.h	/^#define RB_REMOVE(/;"	d
RB_RIGHT	src/dev/tmux/compat/tree.h	/^#define RB_RIGHT(/;"	d
RB_ROOT	src/dev/tmux/compat/tree.h	/^#define RB_ROOT(/;"	d
RB_ROTATE_LEFT	src/dev/tmux/compat/tree.h	/^#define RB_ROTATE_LEFT(/;"	d
RB_ROTATE_RIGHT	src/dev/tmux/compat/tree.h	/^#define RB_ROTATE_RIGHT(/;"	d
RB_SET	src/dev/tmux/compat/tree.h	/^#define RB_SET(/;"	d
RB_SET_BLACKRED	src/dev/tmux/compat/tree.h	/^#define RB_SET_BLACKRED(/;"	d
READ_SIZE	src/dev/tmux/tmux.h	/^#define READ_SIZE /;"	d
RED	meta/dotbot/dotbot/messenger/color.py	/^    RED = '\\033[91m'$/;"	v	class:Color
REPORTING BUGS	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/doc/man/man1/zplug-check.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-CHECK
REPORTING BUGS	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-CLEAN
REPORTING BUGS	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-CLEAR
REPORTING BUGS	src/zplug/doc/man/man1/zplug-info.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INFO
REPORTING BUGS	src/zplug/doc/man/man1/zplug-install.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INSTALL
REPORTING BUGS	src/zplug/doc/man/man1/zplug-list.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LIST
REPORTING BUGS	src/zplug/doc/man/man1/zplug-load.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/doc/man/man1/zplug-status.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-STATUS
REPORTING BUGS	src/zplug/doc/man/man1/zplug-update.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-UPDATE
REPORTING BUGS	src/zplug/doc/man/man1/zplug.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DEPTH
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INSTALL
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INSTALL
REPORTING BUGS	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/doc/man/man5/zplug-as.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-AS
REPORTING BUGS	src/zplug/doc/man/man5/zplug-at.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-AT
REPORTING BUGS	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-AT
REPORTING BUGS	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DEFER
REPORTING BUGS	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DEPTH
REPORTING BUGS	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DIR
REPORTING BUGS	src/zplug/doc/man/man5/zplug-do.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
REPORTING BUGS	src/zplug/doc/man/man5/zplug-from.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-FROM
REPORTING BUGS	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-FROZEN
REPORTING BUGS	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
REPORTING BUGS	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
REPORTING BUGS	src/zplug/doc/man/man5/zplug-if.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-IF
REPORTING BUGS	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-IGNORE
REPORTING BUGS	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LAZY
REPORTING BUGS	src/zplug/doc/man/man5/zplug-of.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-USE
REPORTING BUGS	src/zplug/doc/man/man5/zplug-on.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-ON
REPORTING BUGS	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-RENAME\\-TO
REPORTING BUGS	src/zplug/doc/man/man5/zplug-use.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-USE
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-CHECK
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-CLEAN
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-CLEAR
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INFO
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INSTALL
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LIST
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-STATUS
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-UPDATE
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DEPTH
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INSTALL
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-INSTALL
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LOAD
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-AS
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-AT
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-AT
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DEFER
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DEPTH
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-DIR
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-FROM
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-FROZEN
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-IF
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-IGNORE
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-LAZY
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-USE
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-ON
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-RENAME\\-TO
REPORTING BUGS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "REPORTING BUGS"$/;"	s	title:ZPLUG\\-USE
REQUIRE_ORDER	src/dev/ninja/src/getopt.c	/^  REQUIRE_ORDER$/;"	e	enum:GETOPT_ORDERING_T	file:
RESET	meta/dotbot/dotbot/messenger/color.py	/^    RESET = '\\033[0m'$/;"	v	class:Color
RETURN_IN_ORDER	src/dev/ninja/src/getopt.c	/^  RETURN_IN_ORDER,$/;"	e	enum:GETOPT_ORDERING_T	file:
RULE	src/dev/ninja/src/lexer.h	/^    RULE,$/;"	e	enum:Lexer::Token
RUN_AFTER_FLAGS	src/dev/ninja/src/ninja.cc	/^    RUN_AFTER_FLAGS,$/;"	e	enum:__anon193baac40110::Tool::__anon193baac40203	file:
RUN_AFTER_LOAD	src/dev/ninja/src/ninja.cc	/^    RUN_AFTER_LOAD,$/;"	e	enum:__anon193baac40110::Tool::__anon193baac40203	file:
RUN_AFTER_LOGS	src/dev/ninja/src/ninja.cc	/^    RUN_AFTER_LOGS,$/;"	e	enum:__anon193baac40110::Tool::__anon193baac40203	file:
RandomCommand	src/dev/ninja/src/hash_collision_bench.cc	/^void RandomCommand(char** s) {$/;"	f	typeref:typename:void
RateInfo	src/dev/ninja/src/build.h	/^    RateInfo() : rate_(-1) {}$/;"	f	struct:BuildStatus::RateInfo
RateInfo	src/dev/ninja/src/build.h	/^  struct RateInfo {$/;"	s	struct:BuildStatus
ReadEvalString	src/dev/ninja/src/lexer.cc	/^bool Lexer::ReadEvalString(EvalString* eval, bool path, string* err) {$/;"	f	class:Lexer	typeref:typename:bool
ReadEvalString	src/dev/ninja/src/lexer.in.cc	/^bool Lexer::ReadEvalString(EvalString* eval, bool path, string* err) {$/;"	f	class:Lexer	typeref:typename:bool
ReadFile	src/dev/ninja/src/disk_interface.cc	/^FileReader::Status RealDiskInterface::ReadFile(const string& path,$/;"	f	class:RealDiskInterface	typeref:typename:FileReader::Status
ReadFile	src/dev/ninja/src/disk_interface_test.cc	/^  virtual Status ReadFile(const string& path, string* contents, string* err) {$/;"	f	struct:__anonebbddeae0110::StatTest	typeref:typename:Status	file:
ReadFile	src/dev/ninja/src/test.cc	/^FileReader::Status VirtualFileSystem::ReadFile(const string& path,$/;"	f	class:VirtualFileSystem	typeref:typename:FileReader::Status
ReadFile	src/dev/ninja/src/util.cc	/^int ReadFile(const string& path, string* contents, string* err) {$/;"	f	typeref:typename:int
ReadFlags	src/dev/ninja/src/ninja.cc	/^int ReadFlags(int* argc, char*** argv,$/;"	f	namespace:__anon193baac40110	typeref:typename:int
ReadFlags	src/dev/ninja/src/ninja_test.cc	/^bool ReadFlags(int* argc, char*** argv, const char** test_filter) {$/;"	f	namespace:__anonce8c8d230110	typeref:typename:bool
ReadIdent	src/dev/ninja/src/lexer.cc	/^bool Lexer::ReadIdent(string* out) {$/;"	f	class:Lexer	typeref:typename:bool
ReadIdent	src/dev/ninja/src/lexer.in.cc	/^bool Lexer::ReadIdent(string* out) {$/;"	f	class:Lexer	typeref:typename:bool
ReadLine	src/dev/ninja/src/build_log.cc	/^  bool ReadLine(char** line_start, char** line_end) {$/;"	f	struct:LineReader	typeref:typename:bool	file:
ReadPath	src/dev/ninja/src/lexer.h	/^  bool ReadPath(EvalString* path, string* err) {$/;"	f	struct:Lexer	typeref:typename:bool
ReadToken	src/dev/ninja/src/lexer.cc	/^Lexer::Token Lexer::ReadToken() {$/;"	f	class:Lexer	typeref:typename:Lexer::Token
ReadToken	src/dev/ninja/src/lexer.in.cc	/^Lexer::Token Lexer::ReadToken() {$/;"	f	class:Lexer	typeref:typename:Lexer::Token
ReadVarValue	src/dev/ninja/src/lexer.h	/^  bool ReadVarValue(EvalString* value, string* err) {$/;"	f	struct:Lexer	typeref:typename:bool
Reader	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^class Reader(object):$/;"	c
Reader	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^class Reader(object):$/;"	c
ReaderError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ReaderError = yaml.reader.ReaderError$/;"	v
ReaderError	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^class ReaderError(YAMLError):$/;"	c
ReaderError	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^class ReaderError(YAMLError):$/;"	c
ReadingError	meta/dotbot/dotbot/config.py	/^class ReadingError(Exception):$/;"	c
RealCommandRunner	src/dev/ninja/src/build.cc	/^  explicit RealCommandRunner(const BuildConfig& config) : config_(config) {}$/;"	f	struct:RealCommandRunner	file:
RealCommandRunner	src/dev/ninja/src/build.cc	/^struct RealCommandRunner : public CommandRunner {$/;"	s	file:
RealDiskInterface	src/dev/ninja/src/disk_interface.h	/^  RealDiskInterface()$/;"	f	struct:RealDiskInterface
RealDiskInterface	src/dev/ninja/src/disk_interface.h	/^struct RealDiskInterface : public DiskInterface {$/;"	s
RebuildManifest	src/dev/ninja/src/ninja.cc	/^bool NinjaMain::RebuildManifest(const char* input_file, string* err) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:bool
RebuildTarget	src/dev/ninja/src/build_test.cc	/^void BuildTest::RebuildTarget(const string& target, const char* manifest,$/;"	f	class:BuildTest	typeref:typename:void
Recompact	src/dev/ninja/src/build_log.cc	/^bool BuildLog::Recompact(const string& path, const BuildLogUser& user,$/;"	f	class:BuildLog	typeref:typename:bool
Recompact	src/dev/ninja/src/deps_log.cc	/^bool DepsLog::Recompact(const string& path, string* err) {$/;"	f	class:DepsLog	typeref:typename:bool
RecomputeDirty	src/dev/ninja/src/graph.cc	/^bool DependencyScan::RecomputeDirty(Edge* edge, string* err) {$/;"	f	class:DependencyScan	typeref:typename:bool
RecomputeOutputDirty	src/dev/ninja/src/graph.cc	/^bool DependencyScan::RecomputeOutputDirty(Edge* edge,$/;"	f	class:DependencyScan	typeref:typename:bool
RecomputeOutputsDirty	src/dev/ninja/src/graph.cc	/^bool DependencyScan::RecomputeOutputsDirty(Edge* edge, Node* most_recent_input,$/;"	f	class:DependencyScan	typeref:typename:bool
RecordCommand	src/dev/ninja/src/build_log.cc	/^bool BuildLog::RecordCommand(Edge* edge, int start_time, int end_time,$/;"	f	class:BuildLog	typeref:typename:bool
RecordDeps	src/dev/ninja/src/deps_log.cc	/^bool DepsLog::RecordDeps(Node* node, TimeStamp mtime,$/;"	f	class:DepsLog	typeref:typename:bool
RecordId	src/dev/ninja/src/deps_log.cc	/^bool DepsLog::RecordId(Node* node) {$/;"	f	class:DepsLog	typeref:typename:bool
Rectangle-5	src/dev/tmux/logo/tmux-logo.svg	/^                    <path d="M0,116 L160,116 L160,144.996128 C160,153.282538 153.278035,160 145./;"	i
Rectangle-5	src/dev/tmux/logo/tmux-logomark.svg	/^                <path d="M0,0 L160,0 L160,28.9961276 C160,37.2825375 153.278035,44 145.001535,44/;"	i
Reduce	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class Reduce(AnObject):$/;"	c	function:_make_objects	file:
Reduce	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class Reduce(AnObject):$/;"	c	function:_make_objects	file:
ReduceWithState	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class ReduceWithState(AnObject):$/;"	c	function:_make_objects	file:
ReduceWithState	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class ReduceWithState(AnObject):$/;"	c	function:_make_objects	file:
RegisterTest	src/dev/ninja/src/ninja_test.cc	/^void RegisterTest(testing::Test* (*factory)(), const char* name) {$/;"	f	typeref:typename:void
RegisteredTest	src/dev/ninja/src/ninja_test.cc	/^struct RegisteredTest {$/;"	s	file:
Relativize	src/dev/ninja/src/includes_normalize-win32.cc	/^string IncludesNormalize::Relativize(StringPiece path, const string& start) {$/;"	f	class:IncludesNormalize	typeref:typename:string
Release	src/dev/ninja/misc/packaging/ninja.spec	/^Release: %{rel}%{?dist}$/;"	t
Remove	src/dev/ninja/src/clean.cc	/^void Cleaner::Remove(const string& path) {$/;"	f	class:Cleaner	typeref:typename:void
RemoveEdgeFiles	src/dev/ninja/src/clean.cc	/^void Cleaner::RemoveEdgeFiles(Edge* edge) {$/;"	f	class:Cleaner	typeref:typename:void
RemoveFile	src/dev/ninja/src/clean.cc	/^int Cleaner::RemoveFile(const string& path) {$/;"	f	class:Cleaner	typeref:typename:int
RemoveFile	src/dev/ninja/src/disk_interface.cc	/^int RealDiskInterface::RemoveFile(const string& path) {$/;"	f	class:RealDiskInterface	typeref:typename:int
RemoveFile	src/dev/ninja/src/disk_interface_test.cc	/^  virtual int RemoveFile(const string& path) {$/;"	f	struct:__anonebbddeae0110::StatTest	typeref:typename:int	file:
RemoveFile	src/dev/ninja/src/test.cc	/^int VirtualFileSystem::RemoveFile(const string& path) {$/;"	f	class:VirtualFileSystem	typeref:typename:int
Replace	editors/vim/config/mappings.vim	/^command! -nargs=1 -bang Replace :call Replace(<bang>0, <q-args>)$/;"	c
Replace	editors/vim/config/mappings.vim	/^function! Replace(bang, replace)$/;"	f
Replace	src/dev/ninja/src/msvc_helper-win32.cc	/^string Replace(const string& input, const string& find, const string& replace) {$/;"	f	namespace:__anon12b34c0c0110	typeref:typename:string
Report	src/dev/ninja/src/clean.cc	/^void Cleaner::Report(const string& path) {$/;"	f	class:Cleaner	typeref:typename:void
Report	src/dev/ninja/src/metrics.cc	/^void Metrics::Report() {$/;"	f	class:Metrics	typeref:typename:void
Representer	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^class Representer(SafeRepresenter):$/;"	c
Representer	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^class Representer(SafeRepresenter):$/;"	c
RepresenterError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^RepresenterError = yaml.representer.RepresenterError$/;"	v
RepresenterError	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^class RepresenterError(YAMLError):$/;"	c
RepresenterError	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^class RepresenterError(YAMLError):$/;"	c
RequestHandler	src/dev/ninja/src/browse.py	/^class RequestHandler(httpserver.BaseHTTPRequestHandler):$/;"	c
Reset	src/dev/ninja/src/clean.cc	/^void Cleaner::Reset() {$/;"	f	class:Cleaner	typeref:typename:void
Reset	src/dev/ninja/src/state.cc	/^void State::Reset() {$/;"	f	class:State	typeref:typename:void
ResetState	src/dev/ninja/src/graph.h	/^  void ResetState() {$/;"	f	struct:Node	typeref:typename:void
Resolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^class Resolver(BaseResolver):$/;"	c
Resolver	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^class Resolver(BaseResolver):$/;"	c
ResolverError	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^class ResolverError(YAMLError):$/;"	c
ResolverError	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^class ResolverError(YAMLError):$/;"	c
Restart	src/dev/ninja/src/build.h	/^    void Restart() { stopwatch_.Restart(); }$/;"	f	struct:BuildStatus::RateInfo	typeref:typename:void
Restart	src/dev/ninja/src/build.h	/^    void Restart() { stopwatch_.Restart(); }$/;"	f	struct:BuildStatus::SlidingRateInfo	typeref:typename:void
Restart	src/dev/ninja/src/metrics.h	/^  void Restart() { started_ = Now(); }$/;"	f	struct:Stopwatch	typeref:typename:void
Result	src/dev/ninja/src/build.h	/^    Result() : edge(NULL) {}$/;"	f	struct:CommandRunner::Result
Result	src/dev/ninja/src/build.h	/^  struct Result {$/;"	s	struct:CommandRunner
RetrieveReadyEdges	src/dev/ninja/src/state.cc	/^void Pool::RetrieveReadyEdges(set<Edge*>* ready_queue) {$/;"	f	class:Pool	typeref:typename:void
RootNodes	src/dev/ninja/src/state.cc	/^vector<Node*> State::RootNodes(string* err) const {$/;"	f	class:State	typeref:typename:vector<Node * >
Rule	src/dev/ninja/src/eval_env.h	/^  explicit Rule(const string& name) : name_(name) {}$/;"	f	struct:Rule
Rule	src/dev/ninja/src/eval_env.h	/^struct Rule {$/;"	s
Run	src/dev/ninja/src/msvc_helper-win32.cc	/^int CLWrapper::Run(const string& command, string* output) {$/;"	f	class:CLWrapper	typeref:typename:int
RunBrowsePython	src/dev/ninja/src/browse.cc	/^void RunBrowsePython(State* state, const char* ninja_command,$/;"	f	typeref:typename:void
RunBuild	src/dev/ninja/src/ninja.cc	/^int NinjaMain::RunBuild(int argc, char** argv) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
RunningEdgeMap	src/dev/ninja/src/build.h	/^  typedef map<Edge*, int> RunningEdgeMap;$/;"	t	struct:BuildStatus	typeref:typename:map<Edge *,int>
S	editors/vim/ftplugin/help.vim	/^nmap <buffer> S h?\\|\\S\\+\\|<CR>l$/;"	m
SEE	src/dev/tmux/tmux.1	/^.Sh SEE ALSO$/;"	s
SEE ALSO	src/zplug/doc/man/man1/zplug-check.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-CHECK
SEE ALSO	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-CLEAN
SEE ALSO	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-CLEAR
SEE ALSO	src/zplug/doc/man/man1/zplug-info.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INFO
SEE ALSO	src/zplug/doc/man/man1/zplug-install.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INSTALL
SEE ALSO	src/zplug/doc/man/man1/zplug-list.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LIST
SEE ALSO	src/zplug/doc/man/man1/zplug-load.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/doc/man/man1/zplug-status.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-STATUS
SEE ALSO	src/zplug/doc/man/man1/zplug-update.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-UPDATE
SEE ALSO	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DEPTH
SEE ALSO	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INSTALL
SEE ALSO	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INSTALL
SEE ALSO	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/doc/man/man5/zplug-as.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-AS
SEE ALSO	src/zplug/doc/man/man5/zplug-at.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-AT
SEE ALSO	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-AT
SEE ALSO	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DEFER
SEE ALSO	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DEPTH
SEE ALSO	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DIR
SEE ALSO	src/zplug/doc/man/man5/zplug-do.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SEE ALSO	src/zplug/doc/man/man5/zplug-from.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-FROM
SEE ALSO	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-FROZEN
SEE ALSO	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SEE ALSO	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
SEE ALSO	src/zplug/doc/man/man5/zplug-if.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-IF
SEE ALSO	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-IGNORE
SEE ALSO	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LAZY
SEE ALSO	src/zplug/doc/man/man5/zplug-of.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-USE
SEE ALSO	src/zplug/doc/man/man5/zplug-on.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-ON
SEE ALSO	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-RENAME\\-TO
SEE ALSO	src/zplug/doc/man/man5/zplug-use.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-USE
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-CHECK
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-CLEAN
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-CLEAR
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INFO
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INSTALL
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LIST
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-STATUS
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-UPDATE
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DEPTH
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INSTALL
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-INSTALL
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LOAD
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-AS
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-AT
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-AT
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DEFER
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DEPTH
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-DIR
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-FROM
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-FROZEN
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-IF
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-IGNORE
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-LAZY
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-USE
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-ON
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-RENAME\\-TO
SEE ALSO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "SEE ALSO"$/;"	s	title:ZPLUG\\-USE
SESSION_ALERTED	src/dev/tmux/tmux.h	/^#define SESSION_ALERTED /;"	d
SESSION_PASTING	src/dev/tmux/tmux.h	/^#define SESSION_PASTING /;"	d
SESSION_UNATTACHED	src/dev/tmux/tmux.h	/^#define SESSION_UNATTACHED /;"	d
SET_MAKE	src/dev/tmux/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/dev/tmux/Makefile.in	/^SET_MAKE = @SET_MAKE@$/;"	m
SHARE_DIR	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^SHARE_DIR?=$(DESTDIR)$(PREFIX)\/share\/$(NAME)$/;"	m
SHELL	src/dev/tmux/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/dev/tmux/Makefile.in	/^SHELL = @SHELL@$/;"	m
SHOVE_DIR	src/zplug/Makefile	/^SHOVE_DIR   := $(ZPLUG_ROOT)\/.gitignore.d\/shove$/;"	m
SHOVE_DIR	src/zplug/repos/zplug/zplug/Makefile	/^SHOVE_DIR   := $(ZPLUG_ROOT)\/.gitignore.d\/shove$/;"	m
SHOVE_URL	src/zplug/Makefile	/^SHOVE_URL   := https:\/\/github.com\/key-amb\/shove$/;"	m
SHOVE_URL	src/zplug/repos/zplug/zplug/Makefile	/^SHOVE_URL   := https:\/\/github.com\/key-amb\/shove$/;"	m
SIMPLEQ_CONCAT	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_CONCAT(/;"	d
SIMPLEQ_EMPTY	src/dev/tmux/compat/queue.h	/^#define	SIMPLEQ_EMPTY(/;"	d
SIMPLEQ_END	src/dev/tmux/compat/queue.h	/^#define	SIMPLEQ_END(/;"	d
SIMPLEQ_ENTRY	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_ENTRY(/;"	d
SIMPLEQ_FIRST	src/dev/tmux/compat/queue.h	/^#define	SIMPLEQ_FIRST(/;"	d
SIMPLEQ_FOREACH	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_FOREACH(/;"	d
SIMPLEQ_FOREACH_SAFE	src/dev/tmux/compat/queue.h	/^#define	SIMPLEQ_FOREACH_SAFE(/;"	d
SIMPLEQ_HEAD	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_HEAD(/;"	d
SIMPLEQ_HEAD_INITIALIZER	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_HEAD_INITIALIZER(/;"	d
SIMPLEQ_INIT	src/dev/tmux/compat/queue.h	/^#define	SIMPLEQ_INIT(/;"	d
SIMPLEQ_INSERT_AFTER	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_INSERT_AFTER(/;"	d
SIMPLEQ_INSERT_HEAD	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_INSERT_HEAD(/;"	d
SIMPLEQ_INSERT_TAIL	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_INSERT_TAIL(/;"	d
SIMPLEQ_NEXT	src/dev/tmux/compat/queue.h	/^#define	SIMPLEQ_NEXT(/;"	d
SIMPLEQ_REMOVE_AFTER	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_REMOVE_AFTER(/;"	d
SIMPLEQ_REMOVE_HEAD	src/dev/tmux/compat/queue.h	/^#define SIMPLEQ_REMOVE_HEAD(/;"	d
SLIST_EMPTY	src/dev/tmux/compat/queue.h	/^#define	SLIST_EMPTY(/;"	d
SLIST_END	src/dev/tmux/compat/queue.h	/^#define	SLIST_END(/;"	d
SLIST_ENTRY	src/dev/tmux/compat/queue.h	/^#define SLIST_ENTRY(/;"	d
SLIST_FIRST	src/dev/tmux/compat/queue.h	/^#define	SLIST_FIRST(/;"	d
SLIST_FOREACH	src/dev/tmux/compat/queue.h	/^#define	SLIST_FOREACH(/;"	d
SLIST_FOREACH_SAFE	src/dev/tmux/compat/queue.h	/^#define	SLIST_FOREACH_SAFE(/;"	d
SLIST_HEAD	src/dev/tmux/compat/queue.h	/^#define SLIST_HEAD(/;"	d
SLIST_HEAD_INITIALIZER	src/dev/tmux/compat/queue.h	/^#define	SLIST_HEAD_INITIALIZER(/;"	d
SLIST_INIT	src/dev/tmux/compat/queue.h	/^#define	SLIST_INIT(/;"	d
SLIST_INSERT_AFTER	src/dev/tmux/compat/queue.h	/^#define	SLIST_INSERT_AFTER(/;"	d
SLIST_INSERT_HEAD	src/dev/tmux/compat/queue.h	/^#define	SLIST_INSERT_HEAD(/;"	d
SLIST_NEXT	src/dev/tmux/compat/queue.h	/^#define	SLIST_NEXT(/;"	d
SLIST_REMOVE	src/dev/tmux/compat/queue.h	/^#define SLIST_REMOVE(/;"	d
SLIST_REMOVE_AFTER	src/dev/tmux/compat/queue.h	/^#define	SLIST_REMOVE_AFTER(/;"	d
SLIST_REMOVE_HEAD	src/dev/tmux/compat/queue.h	/^#define	SLIST_REMOVE_HEAD(/;"	d
SOURCES	src/dev/tmux/Makefile	/^SOURCES = $(dist_tmux_SOURCES) $(nodist_tmux_SOURCES)$/;"	m
SOURCES	src/dev/tmux/Makefile.in	/^SOURCES = $(dist_tmux_SOURCES) $(nodist_tmux_SOURCES)$/;"	m
SPECIAL	src/dev/ninja/src/eval_env.h	/^  enum TokenType { RAW, SPECIAL };$/;"	e	enum:EvalString::TokenType
SPLAY_ASSEMBLE	src/dev/tmux/compat/tree.h	/^#define SPLAY_ASSEMBLE(/;"	d
SPLAY_EMPTY	src/dev/tmux/compat/tree.h	/^#define SPLAY_EMPTY(/;"	d
SPLAY_ENTRY	src/dev/tmux/compat/tree.h	/^#define SPLAY_ENTRY(/;"	d
SPLAY_FIND	src/dev/tmux/compat/tree.h	/^#define SPLAY_FIND(/;"	d
SPLAY_FOREACH	src/dev/tmux/compat/tree.h	/^#define SPLAY_FOREACH(/;"	d
SPLAY_GENERATE	src/dev/tmux/compat/tree.h	/^#define SPLAY_GENERATE(/;"	d
SPLAY_HEAD	src/dev/tmux/compat/tree.h	/^#define SPLAY_HEAD(/;"	d
SPLAY_INF	src/dev/tmux/compat/tree.h	/^#define SPLAY_INF	/;"	d
SPLAY_INIT	src/dev/tmux/compat/tree.h	/^#define SPLAY_INIT(/;"	d
SPLAY_INITIALIZER	src/dev/tmux/compat/tree.h	/^#define SPLAY_INITIALIZER(/;"	d
SPLAY_INSERT	src/dev/tmux/compat/tree.h	/^#define SPLAY_INSERT(/;"	d
SPLAY_LEFT	src/dev/tmux/compat/tree.h	/^#define SPLAY_LEFT(/;"	d
SPLAY_LINKLEFT	src/dev/tmux/compat/tree.h	/^#define SPLAY_LINKLEFT(/;"	d
SPLAY_LINKRIGHT	src/dev/tmux/compat/tree.h	/^#define SPLAY_LINKRIGHT(/;"	d
SPLAY_MAX	src/dev/tmux/compat/tree.h	/^#define SPLAY_MAX(/;"	d
SPLAY_MIN	src/dev/tmux/compat/tree.h	/^#define SPLAY_MIN(/;"	d
SPLAY_NEGINF	src/dev/tmux/compat/tree.h	/^#define SPLAY_NEGINF	/;"	d
SPLAY_NEXT	src/dev/tmux/compat/tree.h	/^#define SPLAY_NEXT(/;"	d
SPLAY_PROTOTYPE	src/dev/tmux/compat/tree.h	/^#define SPLAY_PROTOTYPE(/;"	d
SPLAY_REMOVE	src/dev/tmux/compat/tree.h	/^#define SPLAY_REMOVE(/;"	d
SPLAY_RIGHT	src/dev/tmux/compat/tree.h	/^#define SPLAY_RIGHT(/;"	d
SPLAY_ROOT	src/dev/tmux/compat/tree.h	/^#define SPLAY_ROOT(/;"	d
SPLAY_ROTATE_LEFT	src/dev/tmux/compat/tree.h	/^#define SPLAY_ROTATE_LEFT(/;"	d
SPLAY_ROTATE_RIGHT	src/dev/tmux/compat/tree.h	/^#define SPLAY_ROTATE_RIGHT(/;"	d
SPLIT_WINDOW_TEMPLATE	src/dev/tmux/cmd-split-window.c	/^#define SPLIT_WINDOW_TEMPLATE /;"	d	file:
SRC_DIR	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^SRC_DIR    := .\/src$/;"	m
SRC_FILES	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^SRC_FILES := \\$/;"	m
STATUS	src/dev/tmux/server-client.c	/^	enum { NOWHERE, PANE, STATUS, BORDER } where;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0203	file:
STATUS	src/dev/tmux/tmux.1	/^.Sh STATUS LINE$/;"	s
STRIP	src/dev/tmux/Makefile	/^STRIP = $/;"	m
STRIP	src/dev/tmux/Makefile.in	/^STRIP = @STRIP@$/;"	m
SUBNINJA	src/dev/ninja/src/lexer.h	/^    SUBNINJA,$/;"	e	enum:Lexer::Token
SUN_LEN	src/dev/tmux/compat.h	/^#define SUN_LEN(/;"	d
SYNOPSIS	src/dev/tmux/tmux.1	/^.Sh SYNOPSIS$/;"	s
SYNOPSIS	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/doc/man/man1/zplug-check.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-CHECK
SYNOPSIS	src/zplug/doc/man/man1/zplug-clean.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-CLEAN
SYNOPSIS	src/zplug/doc/man/man1/zplug-clear.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-CLEAR
SYNOPSIS	src/zplug/doc/man/man1/zplug-info.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INFO
SYNOPSIS	src/zplug/doc/man/man1/zplug-install.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INSTALL
SYNOPSIS	src/zplug/doc/man/man1/zplug-list.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LIST
SYNOPSIS	src/zplug/doc/man/man1/zplug-load.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/doc/man/man1/zplug-status.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-STATUS
SYNOPSIS	src/zplug/doc/man/man1/zplug-update.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-UPDATE
SYNOPSIS	src/zplug/doc/man/man1/zplug.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DEPTH
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INSTALL
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INSTALL
SYNOPSIS	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/doc/man/man5/zplug-as.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-AS
SYNOPSIS	src/zplug/doc/man/man5/zplug-at.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-AT
SYNOPSIS	src/zplug/doc/man/man5/zplug-commit.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-AT
SYNOPSIS	src/zplug/doc/man/man5/zplug-defer.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DEFER
SYNOPSIS	src/zplug/doc/man/man5/zplug-depth.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DEPTH
SYNOPSIS	src/zplug/doc/man/man5/zplug-dir.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DIR
SYNOPSIS	src/zplug/doc/man/man5/zplug-do.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SYNOPSIS	src/zplug/doc/man/man5/zplug-from.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-FROM
SYNOPSIS	src/zplug/doc/man/man5/zplug-frozen.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-FROZEN
SYNOPSIS	src/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SYNOPSIS	src/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
SYNOPSIS	src/zplug/doc/man/man5/zplug-if.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-IF
SYNOPSIS	src/zplug/doc/man/man5/zplug-ignore.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-IGNORE
SYNOPSIS	src/zplug/doc/man/man5/zplug-lazy.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LAZY
SYNOPSIS	src/zplug/doc/man/man5/zplug-of.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-USE
SYNOPSIS	src/zplug/doc/man/man5/zplug-on.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-ON
SYNOPSIS	src/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-RENAME\\-TO
SYNOPSIS	src/zplug/doc/man/man5/zplug-use.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-USE
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-CHECK
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-CLEAN
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-CLEAR
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INFO
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INSTALL
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LIST
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-STATUS
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-UPDATE
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DEPTH
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INSTALL
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-INSTALL
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LOAD
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-AS
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-AT
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-AT
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DEFER
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DEPTH
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-DIR
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-FROM
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-FROZEN
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-HOOK\\-BUILD
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-HOOK\\-LOAD
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-IF
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-IGNORE
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-LAZY
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-USE
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-ON
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-RENAME\\-TO
SYNOPSIS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.SH "SYNOPSIS"$/;"	s	title:ZPLUG\\-USE
S_CTRL	src/dev/tmux/compat/unvis.c	/^#define	S_CTRL	/;"	d	file:
S_GROUND	src/dev/tmux/compat/unvis.c	/^#define	S_GROUND	/;"	d	file:
S_META	src/dev/tmux/compat/unvis.c	/^#define	S_META	/;"	d	file:
S_META1	src/dev/tmux/compat/unvis.c	/^#define	S_META1	/;"	d	file:
S_OCTAL2	src/dev/tmux/compat/unvis.c	/^#define	S_OCTAL2	/;"	d	file:
S_OCTAL3	src/dev/tmux/compat/unvis.c	/^#define	S_OCTAL3	/;"	d	file:
S_START	src/dev/tmux/compat/unvis.c	/^#define	S_START	/;"	d	file:
SafeConstructor	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^class SafeConstructor(BaseConstructor):$/;"	c
SafeConstructor	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^class SafeConstructor(BaseConstructor):$/;"	c
SafeDumper	meta/dotbot/lib/pyyaml/lib/yaml/dumper.py	/^class SafeDumper(Emitter, Serializer, SafeRepresenter, Resolver):$/;"	c
SafeDumper	meta/dotbot/lib/pyyaml/lib3/yaml/dumper.py	/^class SafeDumper(Emitter, Serializer, SafeRepresenter, Resolver):$/;"	c
SafeLoader	meta/dotbot/lib/pyyaml/lib/yaml/loader.py	/^class SafeLoader(Reader, Scanner, Parser, Composer, SafeConstructor, Resolver):$/;"	c
SafeLoader	meta/dotbot/lib/pyyaml/lib3/yaml/loader.py	/^class SafeLoader(Reader, Scanner, Parser, Composer, SafeConstructor, Resolver):$/;"	c
SafeRepresenter	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^class SafeRepresenter(BaseRepresenter):$/;"	c
SafeRepresenter	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^class SafeRepresenter(BaseRepresenter):$/;"	c
SameDrive	src/dev/ninja/src/includes_normalize-win32.cc	/^bool SameDrive(StringPiece a, StringPiece b)  {$/;"	f	namespace:__anon1573a05b0110	typeref:typename:bool
ScalarAnalysis	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^class ScalarAnalysis(object):$/;"	c
ScalarAnalysis	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^class ScalarAnalysis:$/;"	c
ScalarEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ScalarEvent = yaml.events.ScalarEvent$/;"	v
ScalarEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class ScalarEvent(NodeEvent):$/;"	c
ScalarEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class ScalarEvent(NodeEvent):$/;"	c
ScalarNode	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ScalarNode = yaml.nodes.ScalarNode$/;"	v
ScalarNode	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^class ScalarNode(Node):$/;"	c
ScalarNode	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^class ScalarNode(Node):$/;"	c
ScalarToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ScalarToken = yaml.tokens.ScalarToken$/;"	v
ScalarToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class ScalarToken(Token):$/;"	c
ScalarToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class ScalarToken(Token):$/;"	c
Scanner	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^class Scanner(object):$/;"	c
Scanner	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^class Scanner:$/;"	c
ScannerError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ScannerError = yaml.scanner.ScannerError$/;"	v
ScannerError	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^class ScannerError(MarkedYAMLError):$/;"	c
ScannerError	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^class ScannerError(MarkedYAMLError):$/;"	c
ScheduleWork	src/dev/ninja/src/build.cc	/^void Plan::ScheduleWork(Edge* edge) {$/;"	f	class:Plan	typeref:typename:void
ScopedMetric	src/dev/ninja/src/metrics.cc	/^ScopedMetric::ScopedMetric(Metric* metric) {$/;"	f	class:ScopedMetric
ScopedMetric	src/dev/ninja/src/metrics.h	/^struct ScopedMetric {$/;"	s
ScopedTempDir	src/dev/ninja/src/test.h	/^struct ScopedTempDir {$/;"	s
SequenceEndEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^SequenceEndEvent = yaml.events.SequenceEndEvent$/;"	v
SequenceEndEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class SequenceEndEvent(CollectionEndEvent):$/;"	c
SequenceEndEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class SequenceEndEvent(CollectionEndEvent):$/;"	c
SequenceNode	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^SequenceNode = yaml.nodes.SequenceNode$/;"	v
SequenceNode	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^class SequenceNode(CollectionNode):$/;"	c
SequenceNode	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^class SequenceNode(CollectionNode):$/;"	c
SequenceStartEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^SequenceStartEvent = yaml.events.SequenceStartEvent$/;"	v
SequenceStartEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class SequenceStartEvent(CollectionStartEvent):$/;"	c
SequenceStartEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class SequenceStartEvent(CollectionStartEvent):$/;"	c
Serialize	src/dev/ninja/src/eval_env.cc	/^string EvalString::Serialize() const {$/;"	f	class:EvalString	typeref:typename:string
Serializer	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^class Serializer(object):$/;"	c
Serializer	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^class Serializer:$/;"	c
SerializerError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^SerializerError = yaml.serializer.SerializerError$/;"	v
SerializerError	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^class SerializerError(YAMLError):$/;"	c
SerializerError	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^class SerializerError(YAMLError):$/;"	c
SessionLoad	editors/vim/plugin/sessions.vim	/^command! -nargs=? -complete=customlist,<SID>session_complete SessionLoad$/;"	c
SessionSave	editors/vim/plugin/sessions.vim	/^command! -nargs=? -complete=customlist,<SID>session_complete SessionSave$/;"	c
SetBuildLog	src/dev/ninja/src/build.h	/^  void SetBuildLog(BuildLog* log) {$/;"	f	struct:Builder	typeref:typename:void
SetCloseOnExec	src/dev/ninja/src/util.cc	/^void SetCloseOnExec(int fd) {$/;"	f	typeref:typename:void
SetConsoleLocked	src/dev/ninja/src/line_printer.cc	/^void LinePrinter::SetConsoleLocked(bool locked) {$/;"	f	class:LinePrinter	typeref:typename:void
SetEnv	editors/vim/config/env.vim	/^command! -nargs=+ SetEnv call SetupEnvironment(<f-args>)$/;"	c
SetEnvBlock	src/dev/ninja/src/msvc_helper.h	/^  void SetEnvBlock(void* env_block) { env_block_ = env_block; }$/;"	f	struct:CLWrapper	typeref:typename:void
SetInterruptedFlag	src/dev/ninja/src/subprocess-posix.cc	/^void SubprocessSet::SetInterruptedFlag(int signum) {$/;"	f	class:SubprocessSet	typeref:typename:void
SetPythonEnv	editors/vim/ftplugin/python.vim	/^function! SetPythonEnv()$/;"	f
SetUp	src/dev/ninja/src/build_log_test.cc	/^  virtual void SetUp() {$/;"	f	struct:__anon4bc521c40110::BuildLogTest	typeref:typename:void	file:
SetUp	src/dev/ninja/src/build_test.cc	/^  virtual void SetUp() {$/;"	f	struct:BuildTest	typeref:typename:void	file:
SetUp	src/dev/ninja/src/build_test.cc	/^  virtual void SetUp() {$/;"	f	struct:BuildWithDepsLogTest	typeref:typename:void	file:
SetUp	src/dev/ninja/src/clean_test.cc	/^  virtual void SetUp() {$/;"	f	struct:CleanTest	typeref:typename:void	file:
SetUp	src/dev/ninja/src/deps_log_test.cc	/^  virtual void SetUp() {$/;"	f	struct:__anon9efc7f800110::DepsLogTest	typeref:typename:void	file:
SetUp	src/dev/ninja/src/disk_interface_test.cc	/^  virtual void SetUp() {$/;"	f	struct:__anonebbddeae0110::DiskInterfaceTest	typeref:typename:void	file:
SetUp	src/dev/ninja/src/test.h	/^  virtual void SetUp() {}$/;"	f	class:testing::Test	typeref:typename:void
SetupEnvironment	editors/vim/config/env.vim	/^function! SetupEnvironment(LIB_PATH, ...)$/;"	f
SetupPipe	src/dev/ninja/src/subprocess-win32.cc	/^HANDLE Subprocess::SetupPipe(HANDLE ioport) {$/;"	f	class:Subprocess	typeref:typename:HANDLE
Shape	src/dev/tmux/logo/tmux-logo-1-color.svg	/^                    <path d="M2,0.996127635 C2,8.18502577 7.81579104,14 14.9984654,14 L145.00153/;"	i
Shell	meta/dotbot/plugins/shell.py	/^class Shell(dotbot.Plugin):$/;"	c
ShiftOverBit	src/dev/ninja/src/util.cc	/^static unsigned int ShiftOverBit(int offset, unsigned int bits) {$/;"	f	typeref:typename:unsigned int	file:
ShouldDelayEdge	src/dev/ninja/src/state.h	/^  bool ShouldDelayEdge() const { return depth_ != 0; }$/;"	f	struct:Pool	typeref:typename:bool
SimpleKey	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^class SimpleKey(object):$/;"	c
SimpleKey	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^class SimpleKey:$/;"	c
Singleton	meta/dotbot/dotbot/util/singleton.py	/^class Singleton(type):$/;"	c
SlidingRateInfo	src/dev/ninja/src/build.h	/^    SlidingRateInfo(int n) : rate_(-1), N(n), last_update_(-1) {}$/;"	f	struct:BuildStatus::SlidingRateInfo
SlidingRateInfo	src/dev/ninja/src/build.h	/^  struct SlidingRateInfo {$/;"	s	struct:BuildStatus
SnprintfRate	src/dev/ninja/src/build.h	/^  void SnprintfRate(double rate, char(&buf)[S], const char* format) const {$/;"	f	struct:BuildStatus	typeref:typename:void
Source0	src/dev/ninja/misc/packaging/ninja.spec	/^Source0: %{name}-%{version}-%{rel}.tar.gz$/;"	t
SpellcheckNode	src/dev/ninja/src/state.cc	/^Node* State::SpellcheckNode(const string& path) {$/;"	f	class:State	typeref:typename:Node *
SpellcheckString	src/dev/ninja/src/util.cc	/^const char* SpellcheckString(const char* text, ...) {$/;"	f	typeref:typename:const char *
SpellcheckStringV	src/dev/ninja/src/util.cc	/^const char* SpellcheckStringV(const string& text,$/;"	f	typeref:typename:const char *
Split	src/dev/ninja/src/includes_normalize-win32.cc	/^vector<string> IncludesNormalize::Split(const string& input, char sep) {$/;"	f	class:IncludesNormalize	typeref:typename:vector<string>
Start	src/dev/ninja/src/graphviz.cc	/^void GraphViz::Start() {$/;"	f	class:GraphViz	typeref:typename:void
Start	src/dev/ninja/src/lexer.cc	/^void Lexer::Start(StringPiece filename, StringPiece input) {$/;"	f	class:Lexer	typeref:typename:void
Start	src/dev/ninja/src/lexer.in.cc	/^void Lexer::Start(StringPiece filename, StringPiece input) {$/;"	f	class:Lexer	typeref:typename:void
Start	src/dev/ninja/src/subprocess-posix.cc	/^bool Subprocess::Start(SubprocessSet* set, const string& command) {$/;"	f	class:Subprocess	typeref:typename:bool
Start	src/dev/ninja/src/subprocess-win32.cc	/^bool Subprocess::Start(SubprocessSet* set, const string& command) {$/;"	f	class:Subprocess	typeref:typename:bool
StartCommand	src/dev/ninja/src/build.cc	/^bool DryRunCommandRunner::StartCommand(Edge* edge) {$/;"	f	class:__anon965c94440110::DryRunCommandRunner	typeref:typename:bool
StartCommand	src/dev/ninja/src/build.cc	/^bool RealCommandRunner::StartCommand(Edge* edge) {$/;"	f	class:RealCommandRunner	typeref:typename:bool
StartCommand	src/dev/ninja/src/build_test.cc	/^bool FakeCommandRunner::StartCommand(Edge* edge) {$/;"	f	class:FakeCommandRunner	typeref:typename:bool
StartEdge	src/dev/ninja/src/build.cc	/^bool Builder::StartEdge(Edge* edge, string* err) {$/;"	f	class:Builder	typeref:typename:bool
Stat	src/dev/ninja/src/disk_interface.cc	/^TimeStamp RealDiskInterface::Stat(const string& path, string* err) const {$/;"	f	class:RealDiskInterface	typeref:typename:TimeStamp
Stat	src/dev/ninja/src/disk_interface_test.cc	/^TimeStamp StatTest::Stat(const string& path, string* err) const {$/;"	f	class:__anonebbddeae0110::StatTest	typeref:typename:TimeStamp
Stat	src/dev/ninja/src/graph.cc	/^bool Node::Stat(DiskInterface* disk_interface, string* err) {$/;"	f	class:Node	typeref:typename:bool
Stat	src/dev/ninja/src/test.cc	/^TimeStamp VirtualFileSystem::Stat(const string& path, string* err) const {$/;"	f	class:VirtualFileSystem	typeref:typename:TimeStamp
StatAllFilesInDir	src/dev/ninja/src/disk_interface.cc	/^bool StatAllFilesInDir(const string& dir, map<string, TimeStamp>* stamps,$/;"	f	namespace:__anondfd6196f0110	typeref:typename:bool
StatIfNecessary	src/dev/ninja/src/graph.h	/^  bool StatIfNecessary(DiskInterface* disk_interface, string* err) {$/;"	f	struct:Node	typeref:typename:bool
StatSingleFile	src/dev/ninja/src/disk_interface.cc	/^TimeStamp StatSingleFile(const string& path, string* err) {$/;"	f	namespace:__anondfd6196f0110	typeref:typename:TimeStamp
StatTest	src/dev/ninja/src/disk_interface_test.cc	/^  StatTest() : scan_(&state_, NULL, NULL, this) {}$/;"	f	struct:__anonebbddeae0110::StatTest	file:
StatTest	src/dev/ninja/src/disk_interface_test.cc	/^struct StatTest : public StateTestWithBuiltinRules,$/;"	s	namespace:__anonebbddeae0110	file:
State	src/dev/ninja/src/state.cc	/^State::State() {$/;"	f	class:State
State	src/dev/ninja/src/state.h	/^struct State {$/;"	s
StateTestWithBuiltinRules	src/dev/ninja/src/test.cc	/^StateTestWithBuiltinRules::StateTestWithBuiltinRules() {$/;"	f	class:StateTestWithBuiltinRules
StateTestWithBuiltinRules	src/dev/ninja/src/test.h	/^struct StateTestWithBuiltinRules : public testing::Test {$/;"	s
Status	src/dev/ninja/src/disk_interface.h	/^  enum Status {$/;"	g	struct:FileReader
Stopwatch	src/dev/ninja/src/metrics.h	/^  Stopwatch() : started_(0) {}$/;"	f	struct:Stopwatch
Stopwatch	src/dev/ninja/src/metrics.h	/^struct Stopwatch {$/;"	s
StreamEndEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^StreamEndEvent = yaml.events.StreamEndEvent$/;"	v
StreamEndEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class StreamEndEvent(Event):$/;"	c
StreamEndEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class StreamEndEvent(Event):$/;"	c
StreamEndToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^StreamEndToken = yaml.tokens.StreamEndToken$/;"	v
StreamEndToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class StreamEndToken(Token):$/;"	c
StreamEndToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class StreamEndToken(Token):$/;"	c
StreamStartEvent	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^StreamStartEvent = yaml.events.StreamStartEvent$/;"	v
StreamStartEvent	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^class StreamStartEvent(Event):$/;"	c
StreamStartEvent	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^class StreamStartEvent(Event):$/;"	c
StreamStartToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^StreamStartToken = yaml.tokens.StreamStartToken$/;"	v
StreamStartToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class StreamStartToken(Token):$/;"	c
StreamStartToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class StreamStartToken(Token):$/;"	c
StringNeedsShellEscaping	src/dev/ninja/src/util.cc	/^static inline bool StringNeedsShellEscaping(const string& input) {$/;"	f	typeref:typename:bool	file:
StringNeedsWin32Escaping	src/dev/ninja/src/util.cc	/^static inline bool StringNeedsWin32Escaping(const string& input) {$/;"	f	typeref:typename:bool	file:
StringPiece	src/dev/ninja/src/string_piece.h	/^  StringPiece() : str_(NULL), len_(0) {}$/;"	f	struct:StringPiece
StringPiece	src/dev/ninja/src/string_piece.h	/^  StringPiece(const char* str) : str_(str), len_(strlen(str)) {}$/;"	f	struct:StringPiece
StringPiece	src/dev/ninja/src/string_piece.h	/^  StringPiece(const char* str, size_t len) : str_(str), len_(len) {}$/;"	f	struct:StringPiece
StringPiece	src/dev/ninja/src/string_piece.h	/^  StringPiece(const string& str) : str_(str.data()), len_(str.size()) {}$/;"	f	struct:StringPiece
StringPiece	src/dev/ninja/src/string_piece.h	/^struct StringPiece {$/;"	s
StringPieceCmp	src/dev/ninja/src/hash_map.h	/^struct StringPieceCmp : public hash_compare<StringPiece> {$/;"	s
StringPrintf	src/dev/ninja/src/ninja_test.cc	/^string StringPrintf(const char* format, ...) {$/;"	f	namespace:__anonce8c8d230110	typeref:typename:string
StripAnsiEscapeCodes	src/dev/ninja/src/util.cc	/^string StripAnsiEscapeCodes(const string& in) {$/;"	f	typeref:typename:string
Style	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^class Style:$/;"	c
Subprocess	src/dev/ninja/src/subprocess-posix.cc	/^Subprocess::Subprocess(bool use_console) : fd_(-1), pid_(-1),$/;"	f	class:Subprocess
Subprocess	src/dev/ninja/src/subprocess-win32.cc	/^Subprocess::Subprocess(bool use_console) : child_(NULL) , overlapped_(),$/;"	f	class:Subprocess
Subprocess	src/dev/ninja/src/subprocess.h	/^struct Subprocess {$/;"	s
SubprocessSet	src/dev/ninja/src/subprocess-posix.cc	/^SubprocessSet::SubprocessSet() {$/;"	f	class:SubprocessSet
SubprocessSet	src/dev/ninja/src/subprocess-win32.cc	/^SubprocessSet::SubprocessSet() {$/;"	f	class:SubprocessSet
SubprocessSet	src/dev/ninja/src/subprocess.h	/^struct SubprocessSet {$/;"	s
SubprocessTest	src/dev/ninja/src/subprocess_test.cc	/^struct SubprocessTest : public testing::Test {$/;"	s	namespace:__anon5bb798dc0110	file:
Summary	src/dev/ninja/misc/packaging/ninja.spec	/^Summary: Ninja is a small build system with a focus on speed.$/;"	t
T	editors/vim/ftplugin/help.vim	/^nmap <buffer> T h?\\*\\S\\+\\*<CR>l$/;"	m
TAGS	src/dev/tmux/Makefile	/^TAGS: tags$/;"	t
TAGS	src/dev/tmux/Makefile.in	/^TAGS: tags$/;"	t
TAGS	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/doc/man/man1/zplug.1	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAGS	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "TAGS"$/;"	s	title:ZPLUG
TAILQ_CONCAT	src/dev/tmux/compat/queue.h	/^#define TAILQ_CONCAT(/;"	d
TAILQ_EMPTY	src/dev/tmux/compat/queue.h	/^#define	TAILQ_EMPTY(/;"	d
TAILQ_END	src/dev/tmux/compat/queue.h	/^#define	TAILQ_END(/;"	d
TAILQ_ENTRY	src/dev/tmux/compat/queue.h	/^#define TAILQ_ENTRY(/;"	d
TAILQ_FIRST	src/dev/tmux/compat/queue.h	/^#define	TAILQ_FIRST(/;"	d
TAILQ_FOREACH	src/dev/tmux/compat/queue.h	/^#define TAILQ_FOREACH(/;"	d
TAILQ_FOREACH_REVERSE	src/dev/tmux/compat/queue.h	/^#define TAILQ_FOREACH_REVERSE(/;"	d
TAILQ_FOREACH_REVERSE_SAFE	src/dev/tmux/compat/queue.h	/^#define	TAILQ_FOREACH_REVERSE_SAFE(/;"	d
TAILQ_FOREACH_SAFE	src/dev/tmux/compat/queue.h	/^#define	TAILQ_FOREACH_SAFE(/;"	d
TAILQ_HEAD	src/dev/tmux/compat/queue.h	/^#define TAILQ_HEAD(/;"	d
TAILQ_HEAD_INITIALIZER	src/dev/tmux/compat/queue.h	/^#define TAILQ_HEAD_INITIALIZER(/;"	d
TAILQ_INIT	src/dev/tmux/compat/queue.h	/^#define	TAILQ_INIT(/;"	d
TAILQ_INSERT_AFTER	src/dev/tmux/compat/queue.h	/^#define TAILQ_INSERT_AFTER(/;"	d
TAILQ_INSERT_BEFORE	src/dev/tmux/compat/queue.h	/^#define	TAILQ_INSERT_BEFORE(/;"	d
TAILQ_INSERT_HEAD	src/dev/tmux/compat/queue.h	/^#define TAILQ_INSERT_HEAD(/;"	d
TAILQ_INSERT_TAIL	src/dev/tmux/compat/queue.h	/^#define TAILQ_INSERT_TAIL(/;"	d
TAILQ_LAST	src/dev/tmux/compat/queue.h	/^#define TAILQ_LAST(/;"	d
TAILQ_NEXT	src/dev/tmux/compat/queue.h	/^#define	TAILQ_NEXT(/;"	d
TAILQ_PREV	src/dev/tmux/compat/queue.h	/^#define TAILQ_PREV(/;"	d
TAILQ_REMOVE	src/dev/tmux/compat/queue.h	/^#define TAILQ_REMOVE(/;"	d
TAILQ_REPLACE	src/dev/tmux/compat/queue.h	/^#define TAILQ_REPLACE(/;"	d
TEMPLATE	src/zplug/base/io/file.zsh	/^    cat <<-TEMPLATE >$ZPLUG_LOADFILE$/;"	h
TEMPLATE	src/zplug/repos/zplug/zplug/base/io/file.zsh	/^    cat <<-TEMPLATE >$ZPLUG_LOADFILE$/;"	h
TEOF	src/dev/ninja/src/lexer.h	/^    TEOF,$/;"	e	enum:Lexer::Token
TERMINFO	src/dev/tmux/tmux.1	/^.Sh TERMINFO EXTENSIONS$/;"	s
TERM_256COLOURS	src/dev/tmux/tmux.h	/^#define TERM_256COLOURS /;"	d
TERM_EARLYWRAP	src/dev/tmux/tmux.h	/^#define TERM_EARLYWRAP /;"	d
TEST	meta/dotbot/lib/pyyaml/Makefile	/^TEST=$/;"	m
TEST	src/dev/ninja/src/clparser_test.cc	/^TEST(CLParserTest, DuplicatedHeader) {$/;"	f
TEST	src/dev/ninja/src/clparser_test.cc	/^TEST(CLParserTest, DuplicatedHeaderPathConverted) {$/;"	f
TEST	src/dev/ninja/src/clparser_test.cc	/^TEST(CLParserTest, FilterInputFilename) {$/;"	f
TEST	src/dev/ninja/src/clparser_test.cc	/^TEST(CLParserTest, ParseFilenameFilter) {$/;"	f
TEST	src/dev/ninja/src/clparser_test.cc	/^TEST(CLParserTest, ParseSimple) {$/;"	f
TEST	src/dev/ninja/src/clparser_test.cc	/^TEST(CLParserTest, ParseSystemInclude) {$/;"	f
TEST	src/dev/ninja/src/clparser_test.cc	/^TEST(CLParserTest, ShowIncludes) {$/;"	f
TEST	src/dev/ninja/src/edit_distance_test.cc	/^TEST(EditDistanceTest, TestAllowReplacements) {$/;"	f
TEST	src/dev/ninja/src/edit_distance_test.cc	/^TEST(EditDistanceTest, TestBasics) {$/;"	f
TEST	src/dev/ninja/src/edit_distance_test.cc	/^TEST(EditDistanceTest, TestEmpty) {$/;"	f
TEST	src/dev/ninja/src/edit_distance_test.cc	/^TEST(EditDistanceTest, TestMaxDistance) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, Case) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, DifferentDrive) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, Join) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, LongInvalidPath) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, Simple) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, Split) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, ToLower) {$/;"	f
TEST	src/dev/ninja/src/includes_normalize_test.cc	/^TEST(IncludesNormalize, WithRelative) {$/;"	f
TEST	src/dev/ninja/src/lexer_test.cc	/^TEST(Lexer, CommentEOF) {$/;"	f
TEST	src/dev/ninja/src/lexer_test.cc	/^TEST(Lexer, Error) {$/;"	f
TEST	src/dev/ninja/src/lexer_test.cc	/^TEST(Lexer, ReadEvalStringEscapes) {$/;"	f
TEST	src/dev/ninja/src/lexer_test.cc	/^TEST(Lexer, ReadIdent) {$/;"	f
TEST	src/dev/ninja/src/lexer_test.cc	/^TEST(Lexer, ReadIdentCurlies) {$/;"	f
TEST	src/dev/ninja/src/lexer_test.cc	/^TEST(Lexer, ReadVarValue) {$/;"	f
TEST	src/dev/ninja/src/lexer_test.cc	/^TEST(Lexer, Tabs) {$/;"	f
TEST	src/dev/ninja/src/msvc_helper_test.cc	/^TEST(EscapeForDepfileTest, SpacesInFilename) {$/;"	f
TEST	src/dev/ninja/src/msvc_helper_test.cc	/^TEST(MSVCHelperTest, EnvBlock) {$/;"	f
TEST	src/dev/ninja/src/msvc_helper_test.cc	/^TEST(MSVCHelperTest, NoReadOfStderr) {$/;"	f
TEST	src/dev/ninja/src/state_test.cc	/^TEST(State, Basic) {$/;"	f	namespace:__anonaa82fad40110
TEST	src/dev/ninja/src/test.h	/^#define TEST(/;"	d
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, AbsolutePath) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, CanonicalizeNotExceedingLen) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, NotNullTerminated) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, PathSamples) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, PathSamplesWindows) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, SlashTracking) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, TooManyComponents) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(CanonicalizePath, UpDir) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(ElideMiddle, ElideInTheMiddle) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(ElideMiddle, NothingToElide) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(PathEscaping, SensiblePathsAreNotNeedlesslyEscaped) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(PathEscaping, SensibleWin32PathsAreNotNeedlesslyEscaped) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(PathEscaping, TortureTest) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(StripAnsiEscapeCodes, EscapeAtEnd) {$/;"	f
TEST	src/dev/ninja/src/util_test.cc	/^TEST(StripAnsiEscapeCodes, StripColors) {$/;"	f
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogRecompactTest, Recompact) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, DoubleEntry) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, DuplicateVersionHeader) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, FirstWriteAddsSignature) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, MultiTargetEdge) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, ObsoleteOldVersion) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, SpacesInOutputV4) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, Truncate) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, VeryLongInputLine) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_log_test.cc	/^TEST_F(BuildLogTest, WriteRead) {$/;"	f	namespace:__anon4bc521c40110
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildDryRun, AllCommandsShown) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, Chain) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, Console) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, DepFileCanonicalize) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, DepFileMissing) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, DepFileOK) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, DepFileParseError) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, DepsGccWithEmptyDepfileErrorsOut) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, EncounterReadyTwice) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, Fail) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, FailedDepsParse) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, ImplicitOutput) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, InterruptCleanup) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, MakeDirs) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, MissingInput) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, MissingTarget) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, MultiOutIn) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, NoWork) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, OneStep) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, OneStep2) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, OrderOnlyDeps) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, Phony) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, PhonyNoWork) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, PhonyWithNoInputs) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, PoolEdgesReadyButNotWanted) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, RebuildOrderOnlyDeps) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, RestatDepfileDependency) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, RestatMissingDepfile) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, RspFileFailure) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, RspFileSuccess)$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, StatFailureAbortsBuild) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, StatusFormatElapsed) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, StatusFormatReplacePlaceholder) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, SwallowFailures) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, SwallowFailuresLimit) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, SwallowFailuresPool) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, TwoOutputs) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, TwoStep) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildTest, WrongOutputInDepfileCausesRebuild) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithDepsLogTest, DepFileDepsLogCanonicalize) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithDepsLogTest, DepFileOKDepsLog) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithDepsLogTest, DepsIgnoredInDryRun) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithDepsLogTest, ObsoleteDeps) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithDepsLogTest, RestatDepfileDependencyDepsLog) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithDepsLogTest, RestatMissingDepfileDepslog) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithDepsLogTest, Straightforward) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithLogTest, NotInLogButOnDisk) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithLogTest, RestatMissingFile) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithLogTest, RestatMissingInput) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithLogTest, RestatSingleDependentOutputDirty) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithLogTest, RestatTest) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(BuildWithLogTest, RspFileCmdLineChange) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, Basic) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, ConsolePool) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, CycleInEdgesButNotInNodes1) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, CycleInEdgesButNotInNodes2) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, CycleInEdgesButNotInNodes3) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, CycleInEdgesButNotInNodes4) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, DependencyCycle) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, DoubleDependent) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, DoubleOutputDirect) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, DoubleOutputIndirect) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, PoolWithDepthOne) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, PoolWithFailingEdge) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, PoolWithRedundantEdges) {$/;"	f
TEST_F	src/dev/ninja/src/build_test.cc	/^TEST_F(PlanTest, PoolsWithDepthTwo) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanAll) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanAllDryRun) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanDepFile) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanDepFileAndRspFileWithSpaces) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanDepFileOnCleanRule) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanDepFileOnCleanTarget) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanFailure) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanPhony) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanRsp) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanRspFile) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanRule) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanRuleDryRun) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanRuleGenerator) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanTarget) {$/;"	f
TEST_F	src/dev/ninja/src/clean_test.cc	/^TEST_F(CleanTest, CleanTargetDryRun) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, BackSlashes) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, Basic) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, CarriageReturnContinuation) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, Continuation) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, EarlyNewlineAndWhitespace) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, Escapes) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, RejectMultipleDifferentOutputs) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, Spaces) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, SpecialChars) {$/;"	f
TEST_F	src/dev/ninja/src/depfile_parser_test.cc	/^TEST_F(DepfileParserTest, UnifyMultipleOutputs) {$/;"	f
TEST_F	src/dev/ninja/src/deps_log_test.cc	/^TEST_F(DepsLogTest, DoubleEntry) {$/;"	f	namespace:__anon9efc7f800110
TEST_F	src/dev/ninja/src/deps_log_test.cc	/^TEST_F(DepsLogTest, InvalidHeader) {$/;"	f	namespace:__anon9efc7f800110
TEST_F	src/dev/ninja/src/deps_log_test.cc	/^TEST_F(DepsLogTest, LotsOfDeps) {$/;"	f	namespace:__anon9efc7f800110
TEST_F	src/dev/ninja/src/deps_log_test.cc	/^TEST_F(DepsLogTest, Recompact) {$/;"	f	namespace:__anon9efc7f800110
TEST_F	src/dev/ninja/src/deps_log_test.cc	/^TEST_F(DepsLogTest, Truncated) {$/;"	f	namespace:__anon9efc7f800110
TEST_F	src/dev/ninja/src/deps_log_test.cc	/^TEST_F(DepsLogTest, TruncatedRecovery) {$/;"	f	namespace:__anon9efc7f800110
TEST_F	src/dev/ninja/src/deps_log_test.cc	/^TEST_F(DepsLogTest, WriteRead) {$/;"	f	namespace:__anon9efc7f800110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, MakeDirs) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, ReadFile) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, RemoveFile) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, StatBadPath) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, StatCache) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, StatExistingDir) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, StatExistingFile) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(DiskInterfaceTest, StatMissingFile) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(StatTest, Middle) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(StatTest, Simple) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(StatTest, Tree) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/disk_interface_test.cc	/^TEST_F(StatTest, TwoStep) {$/;"	f	namespace:__anonebbddeae0110
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, CycleWithLengthOneFromDepfile) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, CycleWithLengthOneFromDepfileOneHopAway) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, CycleWithLengthZeroFromDepfile) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, Decanonicalize) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, DepfileOverride) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, DepfileOverrideParent) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, DepfileRemoved) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, DepfileWithCanonicalizablePath) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ExplicitImplicit) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, FunkyMakefilePath) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ImplicitOutputMissing) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ImplicitOutputOnlyMissing) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ImplicitOutputOnlyOutOfDate) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ImplicitOutputOnlyParse) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ImplicitOutputOutOfDate) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ImplicitOutputParse) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, MissingImplicit) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, ModifiedImplicit) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, NestedPhonyPrintsDone) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, PathWithCurrentDirectory) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, RootNodes) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, RuleVariablesInScope) {$/;"	f
TEST_F	src/dev/ninja/src/graph_test.cc	/^TEST_F(GraphTest, VarInOutPathEscaping) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Backslash) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, BrokenInclude) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, CRLF) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, CanonicalizeFile) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, CanonicalizeFileBackslashes) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, CanonicalizePaths) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, CanonicalizePathsBackslashes) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Comment) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Continuation) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DefaultDefault) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DefaultDefaultCycle) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DefaultStatements) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Dollars) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DuplicateEdgeInIncludedFile) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DuplicateEdgeWithMultipleOutputs) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DuplicateEdgeWithMultipleOutputsError) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DuplicateRuleInDifferentSubninjas) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, DuplicateRuleInDifferentSubninjasWithInclude) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Empty) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Errors) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, EscapeSpaces) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, IgnoreIndentedBlankLines) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, IgnoreIndentedComments) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Implicit) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, ImplicitOutput) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, ImplicitOutputDupe) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, ImplicitOutputDupes) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, ImplicitOutputEmpty) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, InNewline) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Include) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, MissingInput) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, MissingSubNinja) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, MultipleOutputs) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, MultipleOutputsWithDeps) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, NoDeadPointerFromDuplicateEdge) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, NoExplicitOutput) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, OrderOnly) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, PathVariables) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, ReservedWords) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, ResponseFiles) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, RuleAttributes) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Rules) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, SubNinja) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, UTF8) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, VariableScope) {$/;"	f
TEST_F	src/dev/ninja/src/manifest_parser_test.cc	/^TEST_F(ParserTest, Variables) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, BadCommandStderr) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, Console) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, InterruptChild) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, InterruptChildWithSigHup) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, InterruptChildWithSigTerm) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, InterruptParent) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, InterruptParentWithSigHup) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, InterruptParentWithSigTerm) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, NoSuchCommand) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, ReadStdin) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, SetWithLots) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, SetWithMulti) {$/;"	f
TEST_F	src/dev/ninja/src/subprocess_test.cc	/^TEST_F(SubprocessTest, SetWithSingle) {$/;"	f
TEST_F	src/dev/ninja/src/test.h	/^#define TEST_F(/;"	d
TEST_F_	src/dev/ninja/src/test.h	/^#define TEST_F_(/;"	d
TEST_TARGET	src/zplug/Makefile	/^TEST_TARGET ?= test$/;"	m
TEST_TARGET	src/zplug/repos/zplug/zplug/Makefile	/^TEST_TARGET ?= test$/;"	m
TMUX_CONF	src/dev/tmux/tmux.h	/^#define TMUX_CONF /;"	d
TMUX_H	src/dev/tmux/tmux.h	/^#define TMUX_H$/;"	d
TOOLARGE	src/dev/tmux/compat/strtonum.c	/^#define TOOLARGE /;"	d	file:
TOOSMALL	src/dev/tmux/compat/strtonum.c	/^#define TOOSMALL /;"	d	file:
TREE_OTHER	src/dev/tmux/tmux.h	/^#define TREE_OTHER /;"	d
TREE_SESSION	src/dev/tmux/tmux.h	/^#define TREE_SESSION /;"	d
TREE_WINDOW	src/dev/tmux/tmux.h	/^#define TREE_WINDOW /;"	d
TRIPLE	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
TTYCODE_FLAG	src/dev/tmux/tty-term.c	/^	TTYCODE_FLAG,$/;"	e	enum:tty_code_type	file:
TTYCODE_NONE	src/dev/tmux/tty-term.c	/^	TTYCODE_NONE = 0,$/;"	e	enum:tty_code_type	file:
TTYCODE_NUMBER	src/dev/tmux/tty-term.c	/^	TTYCODE_NUMBER,$/;"	e	enum:tty_code_type	file:
TTYCODE_STRING	src/dev/tmux/tty-term.c	/^	TTYCODE_STRING,$/;"	e	enum:tty_code_type	file:
TTYC_ACSC	src/dev/tmux/tmux.h	/^	TTYC_ACSC,$/;"	e	enum:tty_code_code
TTYC_AX	src/dev/tmux/tmux.h	/^	TTYC_AX = 0,$/;"	e	enum:tty_code_code
TTYC_BCE	src/dev/tmux/tmux.h	/^	TTYC_BCE,$/;"	e	enum:tty_code_code
TTYC_BEL	src/dev/tmux/tmux.h	/^	TTYC_BEL,$/;"	e	enum:tty_code_code
TTYC_BLINK	src/dev/tmux/tmux.h	/^	TTYC_BLINK,$/;"	e	enum:tty_code_code
TTYC_BOLD	src/dev/tmux/tmux.h	/^	TTYC_BOLD,$/;"	e	enum:tty_code_code
TTYC_CIVIS	src/dev/tmux/tmux.h	/^	TTYC_CIVIS,$/;"	e	enum:tty_code_code
TTYC_CLEAR	src/dev/tmux/tmux.h	/^	TTYC_CLEAR,$/;"	e	enum:tty_code_code
TTYC_CNORM	src/dev/tmux/tmux.h	/^	TTYC_CNORM,$/;"	e	enum:tty_code_code
TTYC_COLORS	src/dev/tmux/tmux.h	/^	TTYC_COLORS,$/;"	e	enum:tty_code_code
TTYC_CR	src/dev/tmux/tmux.h	/^	TTYC_CR,$/;"	e	enum:tty_code_code
TTYC_CS	src/dev/tmux/tmux.h	/^	TTYC_CS,$/;"	e	enum:tty_code_code
TTYC_CSR	src/dev/tmux/tmux.h	/^	TTYC_CSR,$/;"	e	enum:tty_code_code
TTYC_CUB	src/dev/tmux/tmux.h	/^	TTYC_CUB,$/;"	e	enum:tty_code_code
TTYC_CUB1	src/dev/tmux/tmux.h	/^	TTYC_CUB1,$/;"	e	enum:tty_code_code
TTYC_CUD	src/dev/tmux/tmux.h	/^	TTYC_CUD,$/;"	e	enum:tty_code_code
TTYC_CUD1	src/dev/tmux/tmux.h	/^	TTYC_CUD1,$/;"	e	enum:tty_code_code
TTYC_CUF	src/dev/tmux/tmux.h	/^	TTYC_CUF,$/;"	e	enum:tty_code_code
TTYC_CUF1	src/dev/tmux/tmux.h	/^	TTYC_CUF1,$/;"	e	enum:tty_code_code
TTYC_CUP	src/dev/tmux/tmux.h	/^	TTYC_CUP,$/;"	e	enum:tty_code_code
TTYC_CUU	src/dev/tmux/tmux.h	/^	TTYC_CUU,$/;"	e	enum:tty_code_code
TTYC_CUU1	src/dev/tmux/tmux.h	/^	TTYC_CUU1,$/;"	e	enum:tty_code_code
TTYC_CVVIS	src/dev/tmux/tmux.h	/^	TTYC_CVVIS,$/;"	e	enum:tty_code_code
TTYC_DCH	src/dev/tmux/tmux.h	/^	TTYC_DCH,$/;"	e	enum:tty_code_code
TTYC_DCH1	src/dev/tmux/tmux.h	/^	TTYC_DCH1,$/;"	e	enum:tty_code_code
TTYC_DIM	src/dev/tmux/tmux.h	/^	TTYC_DIM,$/;"	e	enum:tty_code_code
TTYC_DL	src/dev/tmux/tmux.h	/^	TTYC_DL,$/;"	e	enum:tty_code_code
TTYC_DL1	src/dev/tmux/tmux.h	/^	TTYC_DL1,$/;"	e	enum:tty_code_code
TTYC_E3	src/dev/tmux/tmux.h	/^	TTYC_E3,$/;"	e	enum:tty_code_code
TTYC_ECH	src/dev/tmux/tmux.h	/^	TTYC_ECH,$/;"	e	enum:tty_code_code
TTYC_ED	src/dev/tmux/tmux.h	/^	TTYC_ED,$/;"	e	enum:tty_code_code
TTYC_EL	src/dev/tmux/tmux.h	/^	TTYC_EL,$/;"	e	enum:tty_code_code
TTYC_EL1	src/dev/tmux/tmux.h	/^	TTYC_EL1,$/;"	e	enum:tty_code_code
TTYC_ENACS	src/dev/tmux/tmux.h	/^	TTYC_ENACS,$/;"	e	enum:tty_code_code
TTYC_FSL	src/dev/tmux/tmux.h	/^	TTYC_FSL,$/;"	e	enum:tty_code_code
TTYC_HOME	src/dev/tmux/tmux.h	/^	TTYC_HOME,$/;"	e	enum:tty_code_code
TTYC_HPA	src/dev/tmux/tmux.h	/^	TTYC_HPA,$/;"	e	enum:tty_code_code
TTYC_ICH	src/dev/tmux/tmux.h	/^	TTYC_ICH,$/;"	e	enum:tty_code_code
TTYC_ICH1	src/dev/tmux/tmux.h	/^	TTYC_ICH1,$/;"	e	enum:tty_code_code
TTYC_IL	src/dev/tmux/tmux.h	/^	TTYC_IL,$/;"	e	enum:tty_code_code
TTYC_IL1	src/dev/tmux/tmux.h	/^	TTYC_IL1,$/;"	e	enum:tty_code_code
TTYC_INDN	src/dev/tmux/tmux.h	/^	TTYC_INDN,$/;"	e	enum:tty_code_code
TTYC_INVIS	src/dev/tmux/tmux.h	/^	TTYC_INVIS,$/;"	e	enum:tty_code_code
TTYC_KCBT	src/dev/tmux/tmux.h	/^	TTYC_KCBT,$/;"	e	enum:tty_code_code
TTYC_KCUB1	src/dev/tmux/tmux.h	/^	TTYC_KCUB1,$/;"	e	enum:tty_code_code
TTYC_KCUD1	src/dev/tmux/tmux.h	/^	TTYC_KCUD1,$/;"	e	enum:tty_code_code
TTYC_KCUF1	src/dev/tmux/tmux.h	/^	TTYC_KCUF1,$/;"	e	enum:tty_code_code
TTYC_KCUU1	src/dev/tmux/tmux.h	/^	TTYC_KCUU1,$/;"	e	enum:tty_code_code
TTYC_KDC2	src/dev/tmux/tmux.h	/^	TTYC_KDC2,$/;"	e	enum:tty_code_code
TTYC_KDC3	src/dev/tmux/tmux.h	/^	TTYC_KDC3,$/;"	e	enum:tty_code_code
TTYC_KDC4	src/dev/tmux/tmux.h	/^	TTYC_KDC4,$/;"	e	enum:tty_code_code
TTYC_KDC5	src/dev/tmux/tmux.h	/^	TTYC_KDC5,$/;"	e	enum:tty_code_code
TTYC_KDC6	src/dev/tmux/tmux.h	/^	TTYC_KDC6,$/;"	e	enum:tty_code_code
TTYC_KDC7	src/dev/tmux/tmux.h	/^	TTYC_KDC7,$/;"	e	enum:tty_code_code
TTYC_KDCH1	src/dev/tmux/tmux.h	/^	TTYC_KDCH1,$/;"	e	enum:tty_code_code
TTYC_KDN2	src/dev/tmux/tmux.h	/^	TTYC_KDN2,$/;"	e	enum:tty_code_code
TTYC_KDN3	src/dev/tmux/tmux.h	/^	TTYC_KDN3,$/;"	e	enum:tty_code_code
TTYC_KDN4	src/dev/tmux/tmux.h	/^	TTYC_KDN4,$/;"	e	enum:tty_code_code
TTYC_KDN5	src/dev/tmux/tmux.h	/^	TTYC_KDN5,$/;"	e	enum:tty_code_code
TTYC_KDN6	src/dev/tmux/tmux.h	/^	TTYC_KDN6,$/;"	e	enum:tty_code_code
TTYC_KDN7	src/dev/tmux/tmux.h	/^	TTYC_KDN7,$/;"	e	enum:tty_code_code
TTYC_KEND	src/dev/tmux/tmux.h	/^	TTYC_KEND,$/;"	e	enum:tty_code_code
TTYC_KEND2	src/dev/tmux/tmux.h	/^	TTYC_KEND2,$/;"	e	enum:tty_code_code
TTYC_KEND3	src/dev/tmux/tmux.h	/^	TTYC_KEND3,$/;"	e	enum:tty_code_code
TTYC_KEND4	src/dev/tmux/tmux.h	/^	TTYC_KEND4,$/;"	e	enum:tty_code_code
TTYC_KEND5	src/dev/tmux/tmux.h	/^	TTYC_KEND5,$/;"	e	enum:tty_code_code
TTYC_KEND6	src/dev/tmux/tmux.h	/^	TTYC_KEND6,$/;"	e	enum:tty_code_code
TTYC_KEND7	src/dev/tmux/tmux.h	/^	TTYC_KEND7,$/;"	e	enum:tty_code_code
TTYC_KF1	src/dev/tmux/tmux.h	/^	TTYC_KF1,$/;"	e	enum:tty_code_code
TTYC_KF10	src/dev/tmux/tmux.h	/^	TTYC_KF10,$/;"	e	enum:tty_code_code
TTYC_KF11	src/dev/tmux/tmux.h	/^	TTYC_KF11,$/;"	e	enum:tty_code_code
TTYC_KF12	src/dev/tmux/tmux.h	/^	TTYC_KF12,$/;"	e	enum:tty_code_code
TTYC_KF13	src/dev/tmux/tmux.h	/^	TTYC_KF13,$/;"	e	enum:tty_code_code
TTYC_KF14	src/dev/tmux/tmux.h	/^	TTYC_KF14,$/;"	e	enum:tty_code_code
TTYC_KF15	src/dev/tmux/tmux.h	/^	TTYC_KF15,$/;"	e	enum:tty_code_code
TTYC_KF16	src/dev/tmux/tmux.h	/^	TTYC_KF16,$/;"	e	enum:tty_code_code
TTYC_KF17	src/dev/tmux/tmux.h	/^	TTYC_KF17,$/;"	e	enum:tty_code_code
TTYC_KF18	src/dev/tmux/tmux.h	/^	TTYC_KF18,$/;"	e	enum:tty_code_code
TTYC_KF19	src/dev/tmux/tmux.h	/^	TTYC_KF19,$/;"	e	enum:tty_code_code
TTYC_KF2	src/dev/tmux/tmux.h	/^	TTYC_KF2,$/;"	e	enum:tty_code_code
TTYC_KF20	src/dev/tmux/tmux.h	/^	TTYC_KF20,$/;"	e	enum:tty_code_code
TTYC_KF21	src/dev/tmux/tmux.h	/^	TTYC_KF21,$/;"	e	enum:tty_code_code
TTYC_KF22	src/dev/tmux/tmux.h	/^	TTYC_KF22,$/;"	e	enum:tty_code_code
TTYC_KF23	src/dev/tmux/tmux.h	/^	TTYC_KF23,$/;"	e	enum:tty_code_code
TTYC_KF24	src/dev/tmux/tmux.h	/^	TTYC_KF24,$/;"	e	enum:tty_code_code
TTYC_KF25	src/dev/tmux/tmux.h	/^	TTYC_KF25,$/;"	e	enum:tty_code_code
TTYC_KF26	src/dev/tmux/tmux.h	/^	TTYC_KF26,$/;"	e	enum:tty_code_code
TTYC_KF27	src/dev/tmux/tmux.h	/^	TTYC_KF27,$/;"	e	enum:tty_code_code
TTYC_KF28	src/dev/tmux/tmux.h	/^	TTYC_KF28,$/;"	e	enum:tty_code_code
TTYC_KF29	src/dev/tmux/tmux.h	/^	TTYC_KF29,$/;"	e	enum:tty_code_code
TTYC_KF3	src/dev/tmux/tmux.h	/^	TTYC_KF3,$/;"	e	enum:tty_code_code
TTYC_KF30	src/dev/tmux/tmux.h	/^	TTYC_KF30,$/;"	e	enum:tty_code_code
TTYC_KF31	src/dev/tmux/tmux.h	/^	TTYC_KF31,$/;"	e	enum:tty_code_code
TTYC_KF32	src/dev/tmux/tmux.h	/^	TTYC_KF32,$/;"	e	enum:tty_code_code
TTYC_KF33	src/dev/tmux/tmux.h	/^	TTYC_KF33,$/;"	e	enum:tty_code_code
TTYC_KF34	src/dev/tmux/tmux.h	/^	TTYC_KF34,$/;"	e	enum:tty_code_code
TTYC_KF35	src/dev/tmux/tmux.h	/^	TTYC_KF35,$/;"	e	enum:tty_code_code
TTYC_KF36	src/dev/tmux/tmux.h	/^	TTYC_KF36,$/;"	e	enum:tty_code_code
TTYC_KF37	src/dev/tmux/tmux.h	/^	TTYC_KF37,$/;"	e	enum:tty_code_code
TTYC_KF38	src/dev/tmux/tmux.h	/^	TTYC_KF38,$/;"	e	enum:tty_code_code
TTYC_KF39	src/dev/tmux/tmux.h	/^	TTYC_KF39,$/;"	e	enum:tty_code_code
TTYC_KF4	src/dev/tmux/tmux.h	/^	TTYC_KF4,$/;"	e	enum:tty_code_code
TTYC_KF40	src/dev/tmux/tmux.h	/^	TTYC_KF40,$/;"	e	enum:tty_code_code
TTYC_KF41	src/dev/tmux/tmux.h	/^	TTYC_KF41,$/;"	e	enum:tty_code_code
TTYC_KF42	src/dev/tmux/tmux.h	/^	TTYC_KF42,$/;"	e	enum:tty_code_code
TTYC_KF43	src/dev/tmux/tmux.h	/^	TTYC_KF43,$/;"	e	enum:tty_code_code
TTYC_KF44	src/dev/tmux/tmux.h	/^	TTYC_KF44,$/;"	e	enum:tty_code_code
TTYC_KF45	src/dev/tmux/tmux.h	/^	TTYC_KF45,$/;"	e	enum:tty_code_code
TTYC_KF46	src/dev/tmux/tmux.h	/^	TTYC_KF46,$/;"	e	enum:tty_code_code
TTYC_KF47	src/dev/tmux/tmux.h	/^	TTYC_KF47,$/;"	e	enum:tty_code_code
TTYC_KF48	src/dev/tmux/tmux.h	/^	TTYC_KF48,$/;"	e	enum:tty_code_code
TTYC_KF49	src/dev/tmux/tmux.h	/^	TTYC_KF49,$/;"	e	enum:tty_code_code
TTYC_KF5	src/dev/tmux/tmux.h	/^	TTYC_KF5,$/;"	e	enum:tty_code_code
TTYC_KF50	src/dev/tmux/tmux.h	/^	TTYC_KF50,$/;"	e	enum:tty_code_code
TTYC_KF51	src/dev/tmux/tmux.h	/^	TTYC_KF51,$/;"	e	enum:tty_code_code
TTYC_KF52	src/dev/tmux/tmux.h	/^	TTYC_KF52,$/;"	e	enum:tty_code_code
TTYC_KF53	src/dev/tmux/tmux.h	/^	TTYC_KF53,$/;"	e	enum:tty_code_code
TTYC_KF54	src/dev/tmux/tmux.h	/^	TTYC_KF54,$/;"	e	enum:tty_code_code
TTYC_KF55	src/dev/tmux/tmux.h	/^	TTYC_KF55,$/;"	e	enum:tty_code_code
TTYC_KF56	src/dev/tmux/tmux.h	/^	TTYC_KF56,$/;"	e	enum:tty_code_code
TTYC_KF57	src/dev/tmux/tmux.h	/^	TTYC_KF57,$/;"	e	enum:tty_code_code
TTYC_KF58	src/dev/tmux/tmux.h	/^	TTYC_KF58,$/;"	e	enum:tty_code_code
TTYC_KF59	src/dev/tmux/tmux.h	/^	TTYC_KF59,$/;"	e	enum:tty_code_code
TTYC_KF6	src/dev/tmux/tmux.h	/^	TTYC_KF6,$/;"	e	enum:tty_code_code
TTYC_KF60	src/dev/tmux/tmux.h	/^	TTYC_KF60,$/;"	e	enum:tty_code_code
TTYC_KF61	src/dev/tmux/tmux.h	/^	TTYC_KF61,$/;"	e	enum:tty_code_code
TTYC_KF62	src/dev/tmux/tmux.h	/^	TTYC_KF62,$/;"	e	enum:tty_code_code
TTYC_KF63	src/dev/tmux/tmux.h	/^	TTYC_KF63,$/;"	e	enum:tty_code_code
TTYC_KF7	src/dev/tmux/tmux.h	/^	TTYC_KF7,$/;"	e	enum:tty_code_code
TTYC_KF8	src/dev/tmux/tmux.h	/^	TTYC_KF8,$/;"	e	enum:tty_code_code
TTYC_KF9	src/dev/tmux/tmux.h	/^	TTYC_KF9,$/;"	e	enum:tty_code_code
TTYC_KHOM2	src/dev/tmux/tmux.h	/^	TTYC_KHOM2,$/;"	e	enum:tty_code_code
TTYC_KHOM3	src/dev/tmux/tmux.h	/^	TTYC_KHOM3,$/;"	e	enum:tty_code_code
TTYC_KHOM4	src/dev/tmux/tmux.h	/^	TTYC_KHOM4,$/;"	e	enum:tty_code_code
TTYC_KHOM5	src/dev/tmux/tmux.h	/^	TTYC_KHOM5,$/;"	e	enum:tty_code_code
TTYC_KHOM6	src/dev/tmux/tmux.h	/^	TTYC_KHOM6,$/;"	e	enum:tty_code_code
TTYC_KHOM7	src/dev/tmux/tmux.h	/^	TTYC_KHOM7,$/;"	e	enum:tty_code_code
TTYC_KHOME	src/dev/tmux/tmux.h	/^	TTYC_KHOME,$/;"	e	enum:tty_code_code
TTYC_KIC2	src/dev/tmux/tmux.h	/^	TTYC_KIC2,$/;"	e	enum:tty_code_code
TTYC_KIC3	src/dev/tmux/tmux.h	/^	TTYC_KIC3,$/;"	e	enum:tty_code_code
TTYC_KIC4	src/dev/tmux/tmux.h	/^	TTYC_KIC4,$/;"	e	enum:tty_code_code
TTYC_KIC5	src/dev/tmux/tmux.h	/^	TTYC_KIC5,$/;"	e	enum:tty_code_code
TTYC_KIC6	src/dev/tmux/tmux.h	/^	TTYC_KIC6,$/;"	e	enum:tty_code_code
TTYC_KIC7	src/dev/tmux/tmux.h	/^	TTYC_KIC7,$/;"	e	enum:tty_code_code
TTYC_KICH1	src/dev/tmux/tmux.h	/^	TTYC_KICH1,$/;"	e	enum:tty_code_code
TTYC_KIND	src/dev/tmux/tmux.h	/^	TTYC_KIND,$/;"	e	enum:tty_code_code
TTYC_KLFT2	src/dev/tmux/tmux.h	/^	TTYC_KLFT2,$/;"	e	enum:tty_code_code
TTYC_KLFT3	src/dev/tmux/tmux.h	/^	TTYC_KLFT3,$/;"	e	enum:tty_code_code
TTYC_KLFT4	src/dev/tmux/tmux.h	/^	TTYC_KLFT4,$/;"	e	enum:tty_code_code
TTYC_KLFT5	src/dev/tmux/tmux.h	/^	TTYC_KLFT5,$/;"	e	enum:tty_code_code
TTYC_KLFT6	src/dev/tmux/tmux.h	/^	TTYC_KLFT6,$/;"	e	enum:tty_code_code
TTYC_KLFT7	src/dev/tmux/tmux.h	/^	TTYC_KLFT7,$/;"	e	enum:tty_code_code
TTYC_KMOUS	src/dev/tmux/tmux.h	/^	TTYC_KMOUS,$/;"	e	enum:tty_code_code
TTYC_KNP	src/dev/tmux/tmux.h	/^	TTYC_KNP,$/;"	e	enum:tty_code_code
TTYC_KNXT2	src/dev/tmux/tmux.h	/^	TTYC_KNXT2,$/;"	e	enum:tty_code_code
TTYC_KNXT3	src/dev/tmux/tmux.h	/^	TTYC_KNXT3,$/;"	e	enum:tty_code_code
TTYC_KNXT4	src/dev/tmux/tmux.h	/^	TTYC_KNXT4,$/;"	e	enum:tty_code_code
TTYC_KNXT5	src/dev/tmux/tmux.h	/^	TTYC_KNXT5,$/;"	e	enum:tty_code_code
TTYC_KNXT6	src/dev/tmux/tmux.h	/^	TTYC_KNXT6,$/;"	e	enum:tty_code_code
TTYC_KNXT7	src/dev/tmux/tmux.h	/^	TTYC_KNXT7,$/;"	e	enum:tty_code_code
TTYC_KPP	src/dev/tmux/tmux.h	/^	TTYC_KPP,$/;"	e	enum:tty_code_code
TTYC_KPRV2	src/dev/tmux/tmux.h	/^	TTYC_KPRV2,$/;"	e	enum:tty_code_code
TTYC_KPRV3	src/dev/tmux/tmux.h	/^	TTYC_KPRV3,$/;"	e	enum:tty_code_code
TTYC_KPRV4	src/dev/tmux/tmux.h	/^	TTYC_KPRV4,$/;"	e	enum:tty_code_code
TTYC_KPRV5	src/dev/tmux/tmux.h	/^	TTYC_KPRV5,$/;"	e	enum:tty_code_code
TTYC_KPRV6	src/dev/tmux/tmux.h	/^	TTYC_KPRV6,$/;"	e	enum:tty_code_code
TTYC_KPRV7	src/dev/tmux/tmux.h	/^	TTYC_KPRV7,$/;"	e	enum:tty_code_code
TTYC_KRI	src/dev/tmux/tmux.h	/^	TTYC_KRI,$/;"	e	enum:tty_code_code
TTYC_KRIT2	src/dev/tmux/tmux.h	/^	TTYC_KRIT2,$/;"	e	enum:tty_code_code
TTYC_KRIT3	src/dev/tmux/tmux.h	/^	TTYC_KRIT3,$/;"	e	enum:tty_code_code
TTYC_KRIT4	src/dev/tmux/tmux.h	/^	TTYC_KRIT4,$/;"	e	enum:tty_code_code
TTYC_KRIT5	src/dev/tmux/tmux.h	/^	TTYC_KRIT5,$/;"	e	enum:tty_code_code
TTYC_KRIT6	src/dev/tmux/tmux.h	/^	TTYC_KRIT6,$/;"	e	enum:tty_code_code
TTYC_KRIT7	src/dev/tmux/tmux.h	/^	TTYC_KRIT7,$/;"	e	enum:tty_code_code
TTYC_KUP2	src/dev/tmux/tmux.h	/^	TTYC_KUP2,$/;"	e	enum:tty_code_code
TTYC_KUP3	src/dev/tmux/tmux.h	/^	TTYC_KUP3,$/;"	e	enum:tty_code_code
TTYC_KUP4	src/dev/tmux/tmux.h	/^	TTYC_KUP4,$/;"	e	enum:tty_code_code
TTYC_KUP5	src/dev/tmux/tmux.h	/^	TTYC_KUP5,$/;"	e	enum:tty_code_code
TTYC_KUP6	src/dev/tmux/tmux.h	/^	TTYC_KUP6,$/;"	e	enum:tty_code_code
TTYC_KUP7	src/dev/tmux/tmux.h	/^	TTYC_KUP7,$/;"	e	enum:tty_code_code
TTYC_MS	src/dev/tmux/tmux.h	/^	TTYC_MS,$/;"	e	enum:tty_code_code
TTYC_OP	src/dev/tmux/tmux.h	/^	TTYC_OP,$/;"	e	enum:tty_code_code
TTYC_REV	src/dev/tmux/tmux.h	/^	TTYC_REV,$/;"	e	enum:tty_code_code
TTYC_RI	src/dev/tmux/tmux.h	/^	TTYC_RI,$/;"	e	enum:tty_code_code
TTYC_RMACS	src/dev/tmux/tmux.h	/^	TTYC_RMACS,$/;"	e	enum:tty_code_code
TTYC_RMCUP	src/dev/tmux/tmux.h	/^	TTYC_RMCUP,$/;"	e	enum:tty_code_code
TTYC_RMKX	src/dev/tmux/tmux.h	/^	TTYC_RMKX,$/;"	e	enum:tty_code_code
TTYC_SE	src/dev/tmux/tmux.h	/^	TTYC_SE,$/;"	e	enum:tty_code_code
TTYC_SETAB	src/dev/tmux/tmux.h	/^	TTYC_SETAB,$/;"	e	enum:tty_code_code
TTYC_SETAF	src/dev/tmux/tmux.h	/^	TTYC_SETAF,$/;"	e	enum:tty_code_code
TTYC_SETRGBB	src/dev/tmux/tmux.h	/^	TTYC_SETRGBB,$/;"	e	enum:tty_code_code
TTYC_SETRGBF	src/dev/tmux/tmux.h	/^	TTYC_SETRGBF,$/;"	e	enum:tty_code_code
TTYC_SGR0	src/dev/tmux/tmux.h	/^	TTYC_SGR0,$/;"	e	enum:tty_code_code
TTYC_SITM	src/dev/tmux/tmux.h	/^	TTYC_SITM,$/;"	e	enum:tty_code_code
TTYC_SMACS	src/dev/tmux/tmux.h	/^	TTYC_SMACS,$/;"	e	enum:tty_code_code
TTYC_SMCUP	src/dev/tmux/tmux.h	/^	TTYC_SMCUP,$/;"	e	enum:tty_code_code
TTYC_SMKX	src/dev/tmux/tmux.h	/^	TTYC_SMKX,$/;"	e	enum:tty_code_code
TTYC_SMSO	src/dev/tmux/tmux.h	/^	TTYC_SMSO,$/;"	e	enum:tty_code_code
TTYC_SMUL	src/dev/tmux/tmux.h	/^	TTYC_SMUL,$/;"	e	enum:tty_code_code
TTYC_SMXX	src/dev/tmux/tmux.h	/^	TTYC_SMXX,$/;"	e	enum:tty_code_code
TTYC_SS	src/dev/tmux/tmux.h	/^	TTYC_SS,$/;"	e	enum:tty_code_code
TTYC_TC	src/dev/tmux/tmux.h	/^	TTYC_TC,$/;"	e	enum:tty_code_code
TTYC_TSL	src/dev/tmux/tmux.h	/^	TTYC_TSL,$/;"	e	enum:tty_code_code
TTYC_U8	src/dev/tmux/tmux.h	/^	TTYC_U8,$/;"	e	enum:tty_code_code
TTYC_VPA	src/dev/tmux/tmux.h	/^	TTYC_VPA,$/;"	e	enum:tty_code_code
TTYC_XENL	src/dev/tmux/tmux.h	/^	TTYC_XENL,$/;"	e	enum:tty_code_code
TTYC_XT	src/dev/tmux/tmux.h	/^	TTYC_XT,$/;"	e	enum:tty_code_code
TTY_BLOCK	src/dev/tmux/tmux.h	/^#define TTY_BLOCK /;"	d
TTY_BLOCK_INTERVAL	src/dev/tmux/tty.c	/^#define TTY_BLOCK_INTERVAL /;"	d	file:
TTY_BLOCK_START	src/dev/tmux/tty.c	/^#define TTY_BLOCK_START(/;"	d	file:
TTY_BLOCK_STOP	src/dev/tmux/tty.c	/^#define TTY_BLOCK_STOP(/;"	d	file:
TTY_FOCUS	src/dev/tmux/tmux.h	/^#define TTY_FOCUS /;"	d
TTY_FREEZE	src/dev/tmux/tmux.h	/^#define TTY_FREEZE /;"	d
TTY_NAME_MAX	src/dev/tmux/compat.h	/^#define TTY_NAME_MAX /;"	d
TTY_NOCURSOR	src/dev/tmux/tmux.h	/^#define TTY_NOCURSOR /;"	d
TTY_OPENED	src/dev/tmux/tmux.h	/^#define TTY_OPENED /;"	d
TTY_STARTED	src/dev/tmux/tmux.h	/^#define TTY_STARTED /;"	d
TTY_TIMER	src/dev/tmux/tmux.h	/^#define TTY_TIMER /;"	d
TTY_TYPES	src/dev/tmux/tmux.h	/^#define TTY_TYPES /;"	d
TTY_UNKNOWN	src/dev/tmux/tmux.h	/^		TTY_UNKNOWN$/;"	e	enum:tty::__anonc903038b0603
TTY_UTF8	src/dev/tmux/tmux.h	/^#define TTY_UTF8 /;"	d
TTY_VT100	src/dev/tmux/tmux.h	/^		TTY_VT100,$/;"	e	enum:tty::__anonc903038b0603
TTY_VT101	src/dev/tmux/tmux.h	/^		TTY_VT101,$/;"	e	enum:tty::__anonc903038b0603
TTY_VT102	src/dev/tmux/tmux.h	/^		TTY_VT102,$/;"	e	enum:tty::__anonc903038b0603
TTY_VT220	src/dev/tmux/tmux.h	/^		TTY_VT220,$/;"	e	enum:tty::__anonc903038b0603
TTY_VT320	src/dev/tmux/tmux.h	/^		TTY_VT320,$/;"	e	enum:tty::__anonc903038b0603
TTY_VT420	src/dev/tmux/tmux.h	/^		TTY_VT420,$/;"	e	enum:tty::__anonc903038b0603
Tabline	editors/vim/themes/rafi-2015.vim	/^function! Tabline() abort "{{{$/;"	f
Tabline	editors/vim/themes/rafi-2016.vim	/^function! Tabline() abort "{{{$/;"	f
Tabline	editors/vim/themes/rafi-2017.vim	/^function! Tabline() abort "{{{$/;"	f
TagToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^TagToken = yaml.tokens.TagToken$/;"	v
TagToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class TagToken(Token):$/;"	c
TagToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class TagToken(Token):$/;"	c
Target	src/dev/ninja/misc/write_fake_manifests.py	/^class Target(object):$/;"	c
TearDown	src/dev/ninja/src/build_log_test.cc	/^  virtual void TearDown() {$/;"	f	struct:__anon4bc521c40110::BuildLogTest	typeref:typename:void	file:
TearDown	src/dev/ninja/src/build_test.cc	/^  virtual void TearDown() {$/;"	f	struct:BuildWithDepsLogTest	typeref:typename:void	file:
TearDown	src/dev/ninja/src/deps_log_test.cc	/^  virtual void TearDown() {$/;"	f	struct:__anon9efc7f800110::DepsLogTest	typeref:typename:void	file:
TearDown	src/dev/ninja/src/disk_interface_test.cc	/^  virtual void TearDown() {$/;"	f	struct:__anonebbddeae0110::DiskInterfaceTest	typeref:typename:void	file:
TearDown	src/dev/ninja/src/test.h	/^  virtual void TearDown() {}$/;"	f	class:testing::Test	typeref:typename:void
TerminalSession	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^class TerminalSession$/;"	c
TerminateHandler	src/dev/ninja/src/ninja.cc	/^void TerminateHandler() {$/;"	f	namespace:__anon193baac40110	typeref:typename:void
Test	src/dev/ninja/src/test.h	/^  Test() : failed_(false), assertion_failures_(0) {}$/;"	f	class:testing::Test
Test	src/dev/ninja/src/test.h	/^class Test {$/;"	c	namespace:testing
TestBuild	src/dev/ninja/misc/ninja_syntax_test.py	/^class TestBuild(unittest.TestCase):$/;"	c
TestExpand	src/dev/ninja/misc/ninja_syntax_test.py	/^class TestExpand(unittest.TestCase):$/;"	c
TestLineWordWrap	src/dev/ninja/misc/ninja_syntax_test.py	/^class TestLineWordWrap(unittest.TestCase):$/;"	c
TestMatchesFilter	src/dev/ninja/src/ninja_test.cc	/^bool TestMatchesFilter(const char* test, const char* filter) {$/;"	f	namespace:__anonce8c8d230110	typeref:typename:bool
TestPoolWithDepthOne	src/dev/ninja/src/build_test.cc	/^void PlanTest::TestPoolWithDepthOne(const char* test_case) {$/;"	f	class:PlanTest	typeref:typename:void
Tick	src/dev/ninja/src/test.h	/^  int Tick() {$/;"	f	struct:VirtualFileSystem	typeref:typename:int
TimeStamp	src/dev/ninja/src/timestamp.h	/^typedef int TimeStamp;$/;"	t	typeref:typename:int
TimeStampFromFileTime	src/dev/ninja/src/disk_interface.cc	/^TimeStamp TimeStampFromFileTime(const FILETIME& filetime) {$/;"	f	namespace:__anondfd6196f0110	typeref:typename:TimeStamp
TimerToMicros	src/dev/ninja/src/metrics.cc	/^int64_t TimerToMicros(int64_t dt) {$/;"	f	namespace:__anon88a2436b0110	typeref:typename:int64_t
ToLower	src/dev/ninja/src/includes_normalize-win32.cc	/^string IncludesNormalize::ToLower(const string& s) {$/;"	f	class:IncludesNormalize	typeref:typename:string
ToggleBackground	editors/vim/config/theme.vim	/^command! ToggleBackground call ToggleBg()$/;"	c
ToggleBg	editors/vim/config/theme.vim	/^function! ToggleBg()$/;"	f
Token	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class Token(object):$/;"	c
Token	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class Token(object):$/;"	c
Token	src/dev/ninja/src/lexer.h	/^  enum Token {$/;"	g	struct:Lexer
TokenErrorHint	src/dev/ninja/src/lexer.cc	/^const char* Lexer::TokenErrorHint(Token expected) {$/;"	f	class:Lexer	typeref:typename:const char *
TokenErrorHint	src/dev/ninja/src/lexer.in.cc	/^const char* Lexer::TokenErrorHint(Token expected) {$/;"	f	class:Lexer	typeref:typename:const char *
TokenList	src/dev/ninja/src/eval_env.h	/^  typedef vector<pair<string, TokenType> > TokenList;$/;"	t	struct:EvalString	typeref:typename:vector<pair<string,TokenType>>
TokenName	src/dev/ninja/src/lexer.cc	/^const char* Lexer::TokenName(Token t) {$/;"	f	class:Lexer	typeref:typename:const char *
TokenName	src/dev/ninja/src/lexer.in.cc	/^const char* Lexer::TokenName(Token t) {$/;"	f	class:Lexer	typeref:typename:const char *
TokenType	src/dev/ninja/src/eval_env.h	/^  enum TokenType { RAW, SPECIAL };$/;"	g	struct:EvalString
Tool	src/dev/ninja/src/ninja.cc	/^struct Tool {$/;"	s	namespace:__anon193baac40110	file:
ToolBrowse	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolBrowse(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolClean	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolClean(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolCommands	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolCommands(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolCompilationDatabase	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolCompilationDatabase(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolDeps	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolDeps(const Options* options, int argc, char** argv) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolFunc	src/dev/ninja/src/ninja.cc	/^  typedef int (NinjaMain::*ToolFunc)(const Options*, int, char**);$/;"	t	struct:__anon193baac40110::NinjaMain	typeref:typename:int (NinjaMain::*)(const Options *,int,char **)	file:
ToolGraph	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolGraph(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolMSVC	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolMSVC(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolQuery	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolQuery(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolRecompact	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolRecompact(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolTargets	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolTargets(const Options* options, int argc, char* argv[]) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
ToolTargetsList	src/dev/ninja/src/ninja.cc	/^int ToolTargetsList(State* state) {$/;"	f	namespace:__anon193baac40110	typeref:typename:int
ToolTargetsList	src/dev/ninja/src/ninja.cc	/^int ToolTargetsList(State* state, const string& rule_name) {$/;"	f	namespace:__anon193baac40110	typeref:typename:int
ToolTargetsList	src/dev/ninja/src/ninja.cc	/^int ToolTargetsList(const vector<Node*>& nodes, int depth, int indent) {$/;"	f	namespace:__anon193baac40110	typeref:typename:int
ToolTargetsSourceList	src/dev/ninja/src/ninja.cc	/^int ToolTargetsSourceList(State* state) {$/;"	f	namespace:__anon193baac40110	typeref:typename:int
ToolUrtle	src/dev/ninja/src/ninja.cc	/^int NinjaMain::ToolUrtle(const Options* options, int argc, char** argv) {$/;"	f	class:__anon193baac40110::NinjaMain	typeref:typename:int
Touch	src/dev/ninja/src/disk_interface_test.cc	/^  bool Touch(const char* path) {$/;"	f	struct:__anonebbddeae0110::DiskInterfaceTest	typeref:typename:bool	file:
Truncate	src/dev/ninja/src/util.cc	/^bool Truncate(const string& path, size_t size, string* err) {$/;"	f	typeref:typename:bool
Type	src/dev/ninja/src/hash_map.h	/^  typedef std::unordered_map<StringPiece, V> Type;$/;"	t	struct:ExternalStringHashMap	typeref:typename:std::unordered_map<StringPiece,V>
UNVIS_END	src/dev/tmux/compat/vis.h	/^#define	UNVIS_END	/;"	d
UNVIS_ERROR	src/dev/tmux/compat/vis.h	/^#define	UNVIS_ERROR	/;"	d
UNVIS_NOCHAR	src/dev/tmux/compat/vis.h	/^#define	UNVIS_NOCHAR	/;"	d
UNVIS_SYNBAD	src/dev/tmux/compat/vis.h	/^#define	UNVIS_SYNBAD	/;"	d
UNVIS_VALID	src/dev/tmux/compat/vis.h	/^#define	UNVIS_VALID	/;"	d
UNVIS_VALIDPUSH	src/dev/tmux/compat/vis.h	/^#define	UNVIS_VALIDPUSH	/;"	d
UP	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
URL	meta/dotbot/lib/pyyaml/setup.py	/^URL = "http:\/\/pyyaml.org\/wiki\/PyYAML"$/;"	v
URL	src/dev/ninja/misc/packaging/ninja.spec	/^URL: https:\/\/github.com\/ninja-build\/ninja$/;"	t
USING ZSTYLE	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/doc/man/man1/zplug.1	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
USING ZSTYLE	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.SH "USING ZSTYLE"$/;"	s	title:ZPLUG
UTF8_DONE	src/dev/tmux/tmux.h	/^	UTF8_DONE,$/;"	e	enum:utf8_state
UTF8_ERROR	src/dev/tmux/tmux.h	/^	UTF8_ERROR$/;"	e	enum:utf8_state
UTF8_MORE	src/dev/tmux/tmux.h	/^	UTF8_MORE,$/;"	e	enum:utf8_state
UTF8_SIZE	src/dev/tmux/tmux.h	/^#define UTF8_SIZE /;"	d
UnreadToken	src/dev/ninja/src/lexer.cc	/^void Lexer::UnreadToken() {$/;"	f	class:Lexer	typeref:typename:void
UnreadToken	src/dev/ninja/src/lexer.in.cc	/^void Lexer::UnreadToken() {$/;"	f	class:Lexer	typeref:typename:void
UpdateDeps	src/dev/ninja/src/deps_log.cc	/^bool DepsLog::UpdateDeps(int out_id, Deps* deps) {$/;"	f	class:DepsLog	typeref:typename:bool
UpdateRate	src/dev/ninja/src/build.h	/^    void UpdateRate(int edges) {$/;"	f	struct:BuildStatus::RateInfo	typeref:typename:void
UpdateRate	src/dev/ninja/src/build.h	/^    void UpdateRate(int update_hint) {$/;"	f	struct:BuildStatus::SlidingRateInfo	typeref:typename:void
Usage	src/dev/ninja/src/msvc_helper_main-win32.cc	/^void Usage() {$/;"	f	namespace:__anon670f5b500110	typeref:typename:void
Usage	src/dev/ninja/src/ninja.cc	/^void Usage(const BuildConfig& config) {$/;"	f	namespace:__anon193baac40110	typeref:typename:void
Usage	src/dev/ninja/src/ninja_test.cc	/^void Usage() {$/;"	f	namespace:__anonce8c8d230110	typeref:typename:void
V	editors/vim/config/plugins/all.vim	/^	xmap V <Plug>(expand_region_shrink)$/;"	m
VERBOSE	src/dev/ninja/src/build.h	/^    VERBOSE$/;"	e	enum:BuildConfig::Verbosity
VERSION	meta/dotbot/lib/pyyaml/setup.py	/^VERSION = '3.11'$/;"	v
VERSION	src/dev/tmux/Makefile	/^VERSION = master$/;"	m
VERSION	src/dev/tmux/Makefile.in	/^VERSION = @VERSION@$/;"	m
VISUAL_BOTH	src/dev/tmux/tmux.h	/^#define VISUAL_BOTH /;"	d
VISUAL_OFF	src/dev/tmux/tmux.h	/^#define VISUAL_OFF /;"	d
VISUAL_ON	src/dev/tmux/tmux.h	/^#define VISUAL_ON /;"	d
VIS_ALL	src/dev/tmux/compat/vis.h	/^#define	VIS_ALL	/;"	d
VIS_CSTYLE	src/dev/tmux/compat/vis.h	/^#define	VIS_CSTYLE	/;"	d
VIS_DQ	src/dev/tmux/compat/vis.h	/^#define	VIS_DQ	/;"	d
VIS_GLOB	src/dev/tmux/compat/vis.h	/^#define	VIS_GLOB	/;"	d
VIS_NL	src/dev/tmux/compat/vis.h	/^#define	VIS_NL	/;"	d
VIS_NOSLASH	src/dev/tmux/compat/vis.h	/^#define	VIS_NOSLASH	/;"	d
VIS_OCTAL	src/dev/tmux/compat/vis.h	/^#define	VIS_OCTAL	/;"	d
VIS_SAFE	src/dev/tmux/compat/vis.h	/^#define	VIS_SAFE	/;"	d
VIS_SP	src/dev/tmux/compat/vis.h	/^#define	VIS_SP	/;"	d
VIS_TAB	src/dev/tmux/compat/vis.h	/^#define	VIS_TAB	/;"	d
VIS_WHITE	src/dev/tmux/compat/vis.h	/^#define	VIS_WHITE	/;"	d
VPATH	src/dev/tmux/Makefile.in	/^VPATH = @srcdir@$/;"	m
ValueToken	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^ValueToken = yaml.tokens.ValueToken$/;"	v
ValueToken	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^class ValueToken(Token):$/;"	c
ValueToken	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^class ValueToken(Token):$/;"	c
Verbosity	src/dev/ninja/src/build.h	/^  enum Verbosity {$/;"	g	struct:BuildConfig
VerifyGraph	src/dev/ninja/src/test.cc	/^void VerifyGraph(const State& state) {$/;"	f	typeref:typename:void
Version	src/dev/ninja/misc/packaging/ninja.spec	/^Version: %{ver}$/;"	t
VirtualFileSystem	src/dev/ninja/src/test.h	/^  VirtualFileSystem() : now_(1) {}$/;"	f	struct:VirtualFileSystem
VirtualFileSystem	src/dev/ninja/src/test.h	/^struct VirtualFileSystem : public DiskInterface {$/;"	s
W!!	editors/vim/config/mappings.vim	/^cmap W!! w !sudo tee % >\/dev\/null$/;"	m
WAIT_ANY	src/dev/tmux/compat.h	/^#define WAIT_ANY /;"	d
WARNING	meta/dotbot/dotbot/messenger/level.py	/^    WARNING = 30$/;"	v	class:Level
WHEEL	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	e	enum:server_client_check_mouse::__anon3d11261b0103	file:
WINDOWS	src/dev/tmux/tmux.1	/^.Sh WINDOWS AND PANES$/;"	s
WINDOW_ACTIVITY	src/dev/tmux/tmux.h	/^#define WINDOW_ACTIVITY /;"	d
WINDOW_ALERTFLAGS	src/dev/tmux/tmux.h	/^#define WINDOW_ALERTFLAGS /;"	d
WINDOW_BELL	src/dev/tmux/tmux.h	/^#define WINDOW_BELL /;"	d
WINDOW_BUFFER_BY_NAME	src/dev/tmux/window-buffer.c	/^	WINDOW_BUFFER_BY_NAME,$/;"	e	enum:window_buffer_sort_type	file:
WINDOW_BUFFER_BY_SIZE	src/dev/tmux/window-buffer.c	/^	WINDOW_BUFFER_BY_SIZE,$/;"	e	enum:window_buffer_sort_type	file:
WINDOW_BUFFER_BY_TIME	src/dev/tmux/window-buffer.c	/^	WINDOW_BUFFER_BY_TIME,$/;"	e	enum:window_buffer_sort_type	file:
WINDOW_BUFFER_DEFAULT_COMMAND	src/dev/tmux/window-buffer.c	/^#define WINDOW_BUFFER_DEFAULT_COMMAND /;"	d	file:
WINDOW_BUFFER_DEFAULT_FORMAT	src/dev/tmux/window-buffer.c	/^#define WINDOW_BUFFER_DEFAULT_FORMAT /;"	d	file:
WINDOW_CLIENT_BY_ACTIVITY_TIME	src/dev/tmux/window-client.c	/^	WINDOW_CLIENT_BY_ACTIVITY_TIME,$/;"	e	enum:window_client_sort_type	file:
WINDOW_CLIENT_BY_CREATION_TIME	src/dev/tmux/window-client.c	/^	WINDOW_CLIENT_BY_CREATION_TIME,$/;"	e	enum:window_client_sort_type	file:
WINDOW_CLIENT_BY_NAME	src/dev/tmux/window-client.c	/^	WINDOW_CLIENT_BY_NAME,$/;"	e	enum:window_client_sort_type	file:
WINDOW_CLIENT_BY_SIZE	src/dev/tmux/window-client.c	/^	WINDOW_CLIENT_BY_SIZE,$/;"	e	enum:window_client_sort_type	file:
WINDOW_CLIENT_DEFAULT_COMMAND	src/dev/tmux/window-client.c	/^#define WINDOW_CLIENT_DEFAULT_COMMAND /;"	d	file:
WINDOW_CLIENT_DEFAULT_FORMAT	src/dev/tmux/window-client.c	/^#define WINDOW_CLIENT_DEFAULT_FORMAT /;"	d	file:
WINDOW_COPY_JUMPBACKWARD	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_JUMPBACKWARD,$/;"	e	enum:__anon4b4b36d80103	file:
WINDOW_COPY_JUMPFORWARD	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_JUMPFORWARD,$/;"	e	enum:__anon4b4b36d80103	file:
WINDOW_COPY_JUMPTOBACKWARD	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_JUMPTOBACKWARD,$/;"	e	enum:__anon4b4b36d80103	file:
WINDOW_COPY_JUMPTOFORWARD	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_JUMPTOFORWARD,$/;"	e	enum:__anon4b4b36d80103	file:
WINDOW_COPY_OFF	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_OFF,$/;"	e	enum:__anon4b4b36d80103	file:
WINDOW_COPY_REL_POS_ABOVE	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_REL_POS_ABOVE,$/;"	e	enum:__anon4b4b36d80203	file:
WINDOW_COPY_REL_POS_BELOW	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_REL_POS_BELOW,$/;"	e	enum:__anon4b4b36d80203	file:
WINDOW_COPY_REL_POS_ON_SCREEN	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_REL_POS_ON_SCREEN,$/;"	e	enum:__anon4b4b36d80203	file:
WINDOW_COPY_SEARCHDOWN	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_SEARCHDOWN,$/;"	e	enum:__anon4b4b36d80103	file:
WINDOW_COPY_SEARCHUP	src/dev/tmux/window-copy.c	/^	WINDOW_COPY_SEARCHUP,$/;"	e	enum:__anon4b4b36d80103	file:
WINDOW_FORCEHEIGHT	src/dev/tmux/tmux.h	/^#define WINDOW_FORCEHEIGHT /;"	d
WINDOW_FORCEWIDTH	src/dev/tmux/tmux.h	/^#define WINDOW_FORCEWIDTH /;"	d
WINDOW_MODE_TIMEOUT	src/dev/tmux/tmux.h	/^#define WINDOW_MODE_TIMEOUT /;"	d
WINDOW_SILENCE	src/dev/tmux/tmux.h	/^#define WINDOW_SILENCE /;"	d
WINDOW_STYLECHANGED	src/dev/tmux/tmux.h	/^#define WINDOW_STYLECHANGED /;"	d
WINDOW_TREE_BY_INDEX	src/dev/tmux/window-tree.c	/^	WINDOW_TREE_BY_INDEX,$/;"	e	enum:window_tree_sort_type	file:
WINDOW_TREE_BY_NAME	src/dev/tmux/window-tree.c	/^	WINDOW_TREE_BY_NAME,$/;"	e	enum:window_tree_sort_type	file:
WINDOW_TREE_BY_TIME	src/dev/tmux/window-tree.c	/^	WINDOW_TREE_BY_TIME,$/;"	e	enum:window_tree_sort_type	file:
WINDOW_TREE_DEFAULT_COMMAND	src/dev/tmux/window-tree.c	/^#define WINDOW_TREE_DEFAULT_COMMAND /;"	d	file:
WINDOW_TREE_DEFAULT_FORMAT	src/dev/tmux/window-tree.c	/^#define WINDOW_TREE_DEFAULT_FORMAT /;"	d	file:
WINDOW_TREE_NONE	src/dev/tmux/window-tree.c	/^	WINDOW_TREE_NONE,$/;"	e	enum:window_tree_type	file:
WINDOW_TREE_PANE	src/dev/tmux/window-tree.c	/^	WINDOW_TREE_PANE,$/;"	e	enum:window_tree_type	file:
WINDOW_TREE_SESSION	src/dev/tmux/window-tree.c	/^	WINDOW_TREE_SESSION,$/;"	e	enum:window_tree_type	file:
WINDOW_TREE_WINDOW	src/dev/tmux/window-tree.c	/^	WINDOW_TREE_WINDOW,$/;"	e	enum:window_tree_type	file:
WINDOW_ZOOMED	src/dev/tmux/tmux.h	/^#define WINDOW_ZOOMED /;"	d
WINLINK_ACTIVITY	src/dev/tmux/tmux.h	/^#define WINLINK_ACTIVITY /;"	d
WINLINK_ALERTFLAGS	src/dev/tmux/tmux.h	/^#define WINLINK_ALERTFLAGS /;"	d
WINLINK_BELL	src/dev/tmux/tmux.h	/^#define WINLINK_BELL /;"	d
WINLINK_SILENCE	src/dev/tmux/tmux.h	/^#define WINLINK_SILENCE /;"	d
WaitForCommand	src/dev/ninja/src/build.cc	/^bool DryRunCommandRunner::WaitForCommand(Result* result) {$/;"	f	class:__anon965c94440110::DryRunCommandRunner	typeref:typename:bool
WaitForCommand	src/dev/ninja/src/build.cc	/^bool RealCommandRunner::WaitForCommand(Result* result) {$/;"	f	class:RealCommandRunner	typeref:typename:bool
WaitForCommand	src/dev/ninja/src/build_test.cc	/^bool FakeCommandRunner::WaitForCommand(Result* result) {$/;"	f	class:FakeCommandRunner	typeref:typename:bool
Warning	src/dev/ninja/src/util.cc	/^void Warning(const char* msg, ...) {$/;"	f	typeref:typename:void
WarningEnable	src/dev/ninja/src/ninja.cc	/^bool WarningEnable(const string& name, Options* options) {$/;"	f	namespace:__anon193baac40110	typeref:typename:bool
WebSocketServer	src/crouton-clipboard/server.js	/^  var WebSocketServer = require('ws').Server$/;"	v
WeightedEdgeCmp	src/dev/ninja/src/state.cc	/^bool Pool::WeightedEdgeCmp(const Edge* a, const Edge* b) {$/;"	f	class:Pool	typeref:typename:bool
WhitespaceErase	editors/vim/plugin/whitespace.vim	/^command! -range=% WhitespaceErase call <SID>WhitespaceErase(<line1>,<line2>)$/;"	c
WhitespaceMatch	editors/vim/plugin/whitespace.vim	/^	augroup WhitespaceMatch$/;"	a
Win32Fatal	src/dev/ninja/src/util.cc	/^void Win32Fatal(const char* function) {$/;"	f	typeref:typename:void
WipeHiddenBuffers	editors/vim/config/mappings.vim	/^function! WipeHiddenBuffers()$/;"	f
WriteDepFileOrDie	src/dev/ninja/src/msvc_helper_main-win32.cc	/^void WriteDepFileOrDie(const char* object_path, const CLParser& parse) {$/;"	f	namespace:__anon670f5b500110	typeref:typename:void
WriteEntry	src/dev/ninja/src/build_log.cc	/^bool BuildLog::WriteEntry(FILE* f, const LogEntry& entry) {$/;"	f	class:BuildLog	typeref:typename:bool
WriteFakeManifests	src/dev/ninja/src/manifest_parser_perftest.cc	/^bool WriteFakeManifests(const string& dir, string* err) {$/;"	f	typeref:typename:bool
WriteFile	src/dev/ninja/src/disk_interface.cc	/^bool RealDiskInterface::WriteFile(const string& path, const string& contents) {$/;"	f	class:RealDiskInterface	typeref:typename:bool
WriteFile	src/dev/ninja/src/disk_interface_test.cc	/^  virtual bool WriteFile(const string& path, const string& contents) {$/;"	f	struct:__anonebbddeae0110::StatTest	typeref:typename:bool	file:
WriteFile	src/dev/ninja/src/test.cc	/^bool VirtualFileSystem::WriteFile(const string& path, const string& contents) {$/;"	f	class:VirtualFileSystem	typeref:typename:bool
WriteTestData	src/dev/ninja/src/build_log_perftest.cc	/^bool WriteTestData(string* err) {$/;"	f	typeref:typename:bool
Writer	src/dev/ninja/misc/ninja_syntax.py	/^class Writer(object):$/;"	c
X	editors/vim/themes/one.vim	/^  fun <sid>X(group, fg, bg, attr)$/;"	f
XDG_CACHE_HOME	editors/vim/Makefile	/^XDG_CACHE_HOME ?= $(HOME)\/.cache$/;"	m
XMALLOC_H	src/dev/tmux/xmalloc.h	/^#define XMALLOC_H$/;"	d
XOPEN_DEFINES	src/dev/tmux/Makefile	/^XOPEN_DEFINES = $/;"	m
XOPEN_DEFINES	src/dev/tmux/Makefile.in	/^XOPEN_DEFINES = @XOPEN_DEFINES@$/;"	m
XOPEN_DEFINES	src/dev/tmux/configure.ac	/^AC_SUBST(XOPEN_DEFINES)$/;"	s
XSIMPLEQ_EMPTY	src/dev/tmux/compat/queue.h	/^#define	XSIMPLEQ_EMPTY(/;"	d
XSIMPLEQ_END	src/dev/tmux/compat/queue.h	/^#define	XSIMPLEQ_END(/;"	d
XSIMPLEQ_ENTRY	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_ENTRY(/;"	d
XSIMPLEQ_FIRST	src/dev/tmux/compat/queue.h	/^#define	XSIMPLEQ_FIRST(/;"	d
XSIMPLEQ_FOREACH	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_FOREACH(/;"	d
XSIMPLEQ_FOREACH_SAFE	src/dev/tmux/compat/queue.h	/^#define	XSIMPLEQ_FOREACH_SAFE(/;"	d
XSIMPLEQ_HEAD	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_HEAD(/;"	d
XSIMPLEQ_INIT	src/dev/tmux/compat/queue.h	/^#define	XSIMPLEQ_INIT(/;"	d
XSIMPLEQ_INSERT_AFTER	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_INSERT_AFTER(/;"	d
XSIMPLEQ_INSERT_HEAD	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_INSERT_HEAD(/;"	d
XSIMPLEQ_INSERT_TAIL	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_INSERT_TAIL(/;"	d
XSIMPLEQ_NEXT	src/dev/tmux/compat/queue.h	/^#define	XSIMPLEQ_NEXT(/;"	d
XSIMPLEQ_REMOVE_AFTER	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_REMOVE_AFTER(/;"	d
XSIMPLEQ_REMOVE_HEAD	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_REMOVE_HEAD(/;"	d
XSIMPLEQ_XOR	src/dev/tmux/compat/queue.h	/^#define XSIMPLEQ_XOR(/;"	d
Y	editors/vim/config/plugins/all.vim	/^	nmap Y <Plug>(operator-flashy)\$$/;"	m
YAMLError	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^YAMLError = yaml.error.YAMLError$/;"	v
YAMLError	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^class YAMLError(Exception):$/;"	c
YAMLError	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^class YAMLError(Exception):$/;"	c
YAMLHighlight	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^class YAMLHighlight:$/;"	c
YAMLLexer	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^class YAMLLexer(ExtendedRegexLexer):$/;"	c
YAMLLexerContext	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^class YAMLLexerContext(LexerContext):$/;"	c
YAMLObject	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^class YAMLObject(object):$/;"	c
YAMLObject	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^class YAMLObject(metaclass=YAMLObjectMetaclass):$/;"	c
YAMLObject1	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class YAMLObject1(yaml.YAMLObject):$/;"	c	function:_make_objects	file:
YAMLObject1	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class YAMLObject1(yaml.YAMLObject):$/;"	c	function:_make_objects	file:
YAMLObject2	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    class YAMLObject2(yaml.YAMLObject):$/;"	c	function:_make_objects	file:
YAMLObject2	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    class YAMLObject2(yaml.YAMLObject):$/;"	c	function:_make_objects	file:
YAMLObjectMetaclass	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^class YAMLObjectMetaclass(type):$/;"	c
YAMLObjectMetaclass	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^class YAMLObjectMetaclass(type):$/;"	c
YELLOW	meta/dotbot/dotbot/messenger/color.py	/^    YELLOW = '\\033[93m'$/;"	v	class:Color
Z	editors/vim/config/plugins/all.vim	/^	command! -nargs=+ -complete=file Z$/;"	c
ZPLUG	src/zplug/doc/man/man1/ZPLUG_HOME.1	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/doc/man/man1/zplug.1	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/doc/man/man5/ZPLUG_HOME.5	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/repos/zplug/zplug/doc/man/man1/ZPLUG_HOME.1	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/repos/zplug/zplug/doc/man/man1/zplug.1	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_FILTER.5	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_HOME.5	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_ROOT.5	/^.TH "ZPLUG" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-AS	src/zplug/doc/man/man5/zplug-as.5	/^.TH "ZPLUG\\-AS" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-AS	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-as.5	/^.TH "ZPLUG\\-AS" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-AT	src/zplug/doc/man/man5/zplug-at.5	/^.TH "ZPLUG\\-AT" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-AT	src/zplug/doc/man/man5/zplug-commit.5	/^.TH "ZPLUG\\-AT" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-AT	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-at.5	/^.TH "ZPLUG\\-AT" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-AT	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-commit.5	/^.TH "ZPLUG\\-AT" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-CHECK	src/zplug/doc/man/man1/zplug-check.1	/^.TH "ZPLUG\\-CHECK" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-CHECK	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-check.1	/^.TH "ZPLUG\\-CHECK" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-CLEAN	src/zplug/doc/man/man1/zplug-clean.1	/^.TH "ZPLUG\\-CLEAN" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-CLEAN	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clean.1	/^.TH "ZPLUG\\-CLEAN" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-CLEAR	src/zplug/doc/man/man1/zplug-clear.1	/^.TH "ZPLUG\\-CLEAR" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-CLEAR	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-clear.1	/^.TH "ZPLUG\\-CLEAR" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DEFER	src/zplug/doc/man/man5/zplug-defer.5	/^.TH "ZPLUG\\-DEFER" "5" "12\/03\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DEFER	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-defer.5	/^.TH "ZPLUG\\-DEFER" "5" "12\/03\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DEPTH	src/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.TH "ZPLUG\\-DEPTH" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DEPTH	src/zplug/doc/man/man5/zplug-depth.5	/^.TH "ZPLUG\\-DEPTH" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DEPTH	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CLONE_DEPTH.5	/^.TH "ZPLUG\\-DEPTH" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DEPTH	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-depth.5	/^.TH "ZPLUG\\-DEPTH" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DIR	src/zplug/doc/man/man5/zplug-dir.5	/^.TH "ZPLUG\\-DIR" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-DIR	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-dir.5	/^.TH "ZPLUG\\-DIR" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-FROM	src/zplug/doc/man/man5/zplug-from.5	/^.TH "ZPLUG\\-FROM" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-FROM	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-from.5	/^.TH "ZPLUG\\-FROM" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-FROZEN	src/zplug/doc/man/man5/zplug-frozen.5	/^.TH "ZPLUG\\-FROZEN" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-FROZEN	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-frozen.5	/^.TH "ZPLUG\\-FROZEN" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-HOOK\\-BUILD	src/zplug/doc/man/man5/zplug-do.5	/^.TH "ZPLUG\\-HOOK\\-BUILD" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-HOOK\\-BUILD	src/zplug/doc/man/man5/zplug-hook-build.5	/^.TH "ZPLUG\\-HOOK\\-BUILD" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-HOOK\\-BUILD	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-do.5	/^.TH "ZPLUG\\-HOOK\\-BUILD" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-HOOK\\-BUILD	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-build.5	/^.TH "ZPLUG\\-HOOK\\-BUILD" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-HOOK\\-LOAD	src/zplug/doc/man/man5/zplug-hook-load.5	/^.TH "ZPLUG\\-HOOK\\-LOAD" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-HOOK\\-LOAD	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-hook-load.5	/^.TH "ZPLUG\\-HOOK\\-LOAD" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-IF	src/zplug/doc/man/man5/zplug-if.5	/^.TH "ZPLUG\\-IF" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-IF	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-if.5	/^.TH "ZPLUG\\-IF" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-IGNORE	src/zplug/doc/man/man5/zplug-ignore.5	/^.TH "ZPLUG\\-IGNORE" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-IGNORE	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-ignore.5	/^.TH "ZPLUG\\-IGNORE" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INFO	src/zplug/doc/man/man1/zplug-info.1	/^.TH "ZPLUG\\-INFO" "1" "12\/03\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INFO	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-info.1	/^.TH "ZPLUG\\-INFO" "1" "12\/03\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INSTALL	src/zplug/doc/man/man1/zplug-install.1	/^.TH "ZPLUG\\-INSTALL" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INSTALL	src/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.TH "ZPLUG\\-INSTALL" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INSTALL	src/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.TH "ZPLUG\\-INSTALL" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INSTALL	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-install.1	/^.TH "ZPLUG\\-INSTALL" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INSTALL	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_PROTOCOL.5	/^.TH "ZPLUG\\-INSTALL" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-INSTALL	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_THREADS.5	/^.TH "ZPLUG\\-INSTALL" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LAZY	src/zplug/doc/man/man5/zplug-lazy.5	/^.TH "ZPLUG\\-LAZY" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LAZY	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-lazy.5	/^.TH "ZPLUG\\-LAZY" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LIST	src/zplug/doc/man/man1/zplug-list.1	/^.TH "ZPLUG\\-LIST" "1" "12\/03\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LIST	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-list.1	/^.TH "ZPLUG\\-LIST" "1" "12\/03\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/doc/man/man1/zplug-load.1	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-load.1	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_CACHE_FILE.5	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_LOADFILE.5	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-LOAD	src/zplug/repos/zplug/zplug/doc/man/man5/ZPLUG_USE_CACHE.5	/^.TH "ZPLUG\\-LOAD" "1" "12\/01\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-ON	src/zplug/doc/man/man5/zplug-on.5	/^.TH "ZPLUG\\-ON" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-ON	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-on.5	/^.TH "ZPLUG\\-ON" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-RENAME\\-TO	src/zplug/doc/man/man5/zplug-rename-to.5	/^.TH "ZPLUG\\-RENAME\\-TO" "5" "12\/28\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-RENAME\\-TO	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-rename-to.5	/^.TH "ZPLUG\\-RENAME\\-TO" "5" "12\/28\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-STATUS	src/zplug/doc/man/man1/zplug-status.1	/^.TH "ZPLUG\\-STATUS" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-STATUS	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-status.1	/^.TH "ZPLUG\\-STATUS" "1" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-UPDATE	src/zplug/doc/man/man1/zplug-update.1	/^.TH "ZPLUG\\-UPDATE" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-UPDATE	src/zplug/repos/zplug/zplug/doc/man/man1/zplug-update.1	/^.TH "ZPLUG\\-UPDATE" "1" "12\/22\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-USE	src/zplug/doc/man/man5/zplug-of.5	/^.TH "ZPLUG\\-USE" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-USE	src/zplug/doc/man/man5/zplug-use.5	/^.TH "ZPLUG\\-USE" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-USE	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-of.5	/^.TH "ZPLUG\\-USE" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG\\-USE	src/zplug/repos/zplug/zplug/doc/man/man5/zplug-use.5	/^.TH "ZPLUG\\-USE" "5" "11\/21\/2016" "ZPLUG Manual" "ZPLUG Manual"$/;"	t
ZPLUG_ROOT	src/zplug/Makefile	/^ZPLUG_ROOT  := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))$/;"	m
ZPLUG_ROOT	src/zplug/repos/zplug/zplug/Makefile	/^ZPLUG_ROOT  := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))$/;"	m
ZSH	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^ZSH?=zsh # zsh binary to run tests with$/;"	m
ZSH_HIGHLIGHT_STYLES=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^ZSH_HIGHLIGHT_STYLES=()$/;"	f
[<space>	editors/vim/config/mappings.vim	/^vnoremap [<space>  :<c-u>put! =repeat(nr2char(10), v:count1)<cr>$/;"	m
[Window]	editors/vim/config/mappings.vim	/^nnoremap  [Window]   <Nop>$/;"	m
[Window]=	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]=  <C-w>=$/;"	m
[Window]H	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]H  <C-w>H$/;"	m
[Window]J	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]J  <C-w>J$/;"	m
[Window]K	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]K  <C-w>K$/;"	m
[Window]L	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]L  <C-w>L$/;"	m
[Window]T	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]T  :tabnew<CR>$/;"	m
[Window]]	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]]  <C-w>]$/;"	m
[Window]b	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]b  :b#<CR>$/;"	m
[Window]c	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]c  :close<CR>$/;"	m
[Window]g	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]g  :<C-u>split<CR>:wincmd p<CR>:e#<CR>$/;"	m
[Window]o	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]o  :<C-u>only<CR>$/;"	m
[Window]t	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]t  :<C-u>tab split<CR>:execute 'tabn '.g:lasttab<CR>$/;"	m
[Window]v	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]v  :<C-u>vsplit<CR>:wincmd p<CR>:e#<CR>$/;"	m
[Window]x	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]x  :<C-u>call <SID>BufferEmpty()<CR>$/;"	m
[Window]z	editors/vim/config/mappings.vim	/^nnoremap <silent> [Window]z  <C-w>z$/;"	m
\\\\	editors/vim/config/mappings.vim	/^nmap <silent> \\\\ :execute 'tabn '.g:lasttab<CR>$/;"	m
\x21	editors/vim/config/mappings.vim	/^nnoremap ! :!$/;"	m
]<space>	editors/vim/config/mappings.vim	/^vnoremap ]<space>  :<c-u>put =repeat(nr2char(10), v:count1)<cr>$/;"	m
_ACAWK	src/dev/tmux/config.status	/^cat >>"$ac_tmp\/subs1.awk" <<_ACAWK &&$/;"	h
_ACEOF	src/dev/tmux/configure	/^	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	src/dev/tmux/configure	/^	cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	src/dev/tmux/configure	/^      cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	src/dev/tmux/configure	/^   cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	src/dev/tmux/configure	/^  cat <<_ACEOF$/;"	h
_ACEOF	src/dev/tmux/configure	/^  cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	src/dev/tmux/configure	/^  cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	src/dev/tmux/configure	/^cat >&5 <<_ACEOF$/;"	h
_ACEOF	src/dev/tmux/configure	/^cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1$/;"	h
_ACEOF	src/dev/tmux/configure	/^cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	src/dev/tmux/configure	/^cat >config.log <<_ACEOF$/;"	h
_ACEOF	src/dev/tmux/configure	/^cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_AC_AM_CONFIG_HEADER_HOOK	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],$/;"	m
_AC_COMPILER_EXEEXT	src/dev/tmux/aclocal.m4	/^m4_define([_AC_COMPILER_EXEEXT],$/;"	d
_AM_AUTOCONF_VERSION	src/dev/tmux/aclocal.m4	/^m4_define([_AM_AUTOCONF_VERSION], [])$/;"	d
_AM_DEPENDENCIES	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_DEPENDENCIES],$/;"	m
_AM_IF_OPTION	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_IF_OPTION],$/;"	m
_AM_MANGLE_OPTION	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_MANGLE_OPTION],$/;"	m
_AM_OUTPUT_DEPENDENCY_COMMANDS	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],$/;"	m
_AM_PROG_CC_C_O	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_PROG_CC_C_O],$/;"	m
_AM_PROG_TAR	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_PROG_TAR],$/;"	m
_AM_SET_OPTION	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_SET_OPTION],$/;"	m
_AM_SET_OPTIONS	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_SET_OPTIONS],$/;"	m
_AM_SUBST_NOTMAKE	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_AM_SUBST_NOTMAKE])$/;"	m
_ASBOX	src/dev/tmux/config.status	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	src/dev/tmux/configure	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASEOF	src/dev/tmux/configure	/^cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1$/;"	h
_ASUNAME	src/dev/tmux/configure	/^cat <<_ASUNAME$/;"	h
_BITSTRING_H_	src/dev/tmux/compat/bitstring.h	/^#define	_BITSTRING_H_$/;"	d
_Distribution	meta/dotbot/lib/pyyaml/setup.py	/^from distutils.core import Distribution as _Distribution$/;"	x
_Extension	meta/dotbot/lib/pyyaml/setup.py	/^            from Pyrex.Distutils import Extension as _Extension$/;"	x
_Extension	meta/dotbot/lib/pyyaml/setup.py	/^        from Cython.Distutils.extension import Extension as _Extension$/;"	x
_Extension	meta/dotbot/lib/pyyaml/setup.py	/^    _Extension = sys.modules['setuptools.extension']._Extension$/;"	v
_Extension	meta/dotbot/lib/pyyaml/setup.py	/^from distutils.core import Extension as _Extension$/;"	x
_IMSG_H_	src/dev/tmux/compat/imsg.h	/^#define _IMSG_H_$/;"	d
_PATH_BSHELL	src/dev/tmux/compat.h	/^#define	_PATH_BSHELL	/;"	d
_PATH_DEV	src/dev/tmux/compat.h	/^#define _PATH_DEV	/;"	d
_PATH_DEVNULL	src/dev/tmux/compat.h	/^#define _PATH_DEVNULL	/;"	d
_PATH_TMP	src/dev/tmux/compat.h	/^#define	_PATH_TMP	/;"	d
_PATH_TTY	src/dev/tmux/compat.h	/^#define _PATH_TTY	/;"	d
_PKG_CONFIG	src/dev/tmux/aclocal.m4	/^m4_define([_PKG_CONFIG],$/;"	d
_PKG_SHORT_ERRORS_SUPPORTED	src/dev/tmux/aclocal.m4	/^AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],$/;"	m
_Q_INVALIDATE	src/dev/tmux/compat/queue.h	/^#define _Q_INVALIDATE(/;"	d
_SYS_QUEUE_H_	src/dev/tmux/compat/queue.h	/^#define	_SYS_QUEUE_H_$/;"	d
_SYS_TREE_H_	src/dev/tmux/compat/tree.h	/^#define	_SYS_TREE_H_$/;"	d
_VIS_H_	src/dev/tmux/compat/vis.h	/^#define	_VIS_H_$/;"	d
__STDC_FORMAT_MACROS	src/dev/ninja/src/build_log.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__all__	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^__all__ = ['YAMLLexer']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^__all__ = ['Composer', 'ComposerError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^__all__ = ['BaseConstructor', 'SafeConstructor', 'Constructor',$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^__all__ = ['CBaseLoader', 'CSafeLoader', 'CLoader',$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/dumper.py	/^__all__ = ['BaseDumper', 'SafeDumper', 'Dumper']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^__all__ = ['Emitter', 'EmitterError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^__all__ = ['Mark', 'YAMLError', 'MarkedYAMLError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/loader.py	/^__all__ = ['BaseLoader', 'SafeLoader', 'Loader']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^__all__ = ['Parser', 'ParserError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^__all__ = ['Reader', 'ReaderError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^__all__ = ['BaseRepresenter', 'SafeRepresenter', 'Representer',$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^__all__ = ['BaseResolver', 'Resolver']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^__all__ = ['Scanner', 'ScannerError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^__all__ = ['Serializer', 'SerializerError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^__all__ = ['Composer', 'ComposerError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^__all__ = ['BaseConstructor', 'SafeConstructor', 'Constructor',$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^__all__ = ['CBaseLoader', 'CSafeLoader', 'CLoader',$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/dumper.py	/^__all__ = ['BaseDumper', 'SafeDumper', 'Dumper']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^__all__ = ['Emitter', 'EmitterError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^__all__ = ['Mark', 'YAMLError', 'MarkedYAMLError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/loader.py	/^__all__ = ['BaseLoader', 'SafeLoader', 'Loader']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^__all__ = ['Parser', 'ParserError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^__all__ = ['Reader', 'ReaderError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^__all__ = ['BaseRepresenter', 'SafeRepresenter', 'Representer',$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^__all__ = ['BaseResolver', 'Resolver']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^__all__ = ['Scanner', 'ScannerError']$/;"	v
__all__	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^__all__ = ['Serializer', 'SerializerError']$/;"	v
__anon0ff79082010a	src/dev/tmux/compat/imsg-buffer.c	/^	union {$/;"	u	function:msgbuf_write	file:
__anon12b34c0c0110	src/dev/ninja/src/msvc_helper-win32.cc	/^namespace {$/;"	n	file:
__anon1573a05b0110	src/dev/ninja/src/includes_normalize-win32.cc	/^namespace {$/;"	n	file:
__anon193baac40110	src/dev/ninja/src/ninja.cc	/^namespace {$/;"	n	file:
__anon193baac40203	src/dev/ninja/src/ninja.cc	/^  enum {$/;"	g	struct:__anon193baac40110::Tool	file:
__anon193baac40303	src/dev/ninja/src/ninja.cc	/^  enum { OPT_VERSION = 1 };$/;"	g	function:__anon193baac40110::ReadFlags	file:
__anon3d11261b0103	src/dev/tmux/server-client.c	/^	enum { NOTYPE, MOVE, DOWN, UP, DRAG, WHEEL, DOUBLE, TRIPLE } type;$/;"	g	function:server_client_check_mouse	file:
__anon3d11261b0203	src/dev/tmux/server-client.c	/^	enum { NOWHERE, PANE, STATUS, BORDER } where;$/;"	g	function:server_client_check_mouse	file:
__anon4b4b36d80103	src/dev/tmux/window-copy.c	/^enum {$/;"	g	file:
__anon4b4b36d80203	src/dev/tmux/window-copy.c	/^enum {$/;"	g	file:
__anon4b4b36d80303	src/dev/tmux/window-copy.c	/^	enum {$/;"	g	struct:window_copy_mode_data	file:
__anon4bc521c40110	src/dev/ninja/src/build_log_test.cc	/^namespace {$/;"	n	file:
__anon5bb798dc0110	src/dev/ninja/src/subprocess_test.cc	/^namespace {$/;"	n	file:
__anon6128e3050108	src/dev/tmux/key-string.c	/^static const struct {$/;"	s	file:
__anon670f5b500110	src/dev/ninja/src/msvc_helper_main-win32.cc	/^namespace {$/;"	n	file:
__anon6cf1a97b010a	src/dev/tmux/compat/imsg.c	/^	union {$/;"	u	function:imsg_read	file:
__anon713809b10110	src/dev/ninja/src/util_test.cc	/^namespace {$/;"	n	file:
__anon88a2436b0110	src/dev/ninja/src/metrics.cc	/^namespace {$/;"	n	file:
__anon965c94440110	src/dev/ninja/src/build.cc	/^namespace {$/;"	n	file:
__anon9efc7f800110	src/dev/ninja/src/deps_log_test.cc	/^namespace {$/;"	n	file:
__anonaa19d11a0110	src/dev/ninja/src/includes_normalize_test.cc	/^namespace {$/;"	n	file:
__anonaa82fad40110	src/dev/ninja/src/state_test.cc	/^namespace {$/;"	n	file:
__anonab03843e0108	src/dev/tmux/grid.c	/^	struct {$/;"	s	function:grid_string_cells_code	file:
__anonb14b96c50110	src/dev/ninja/src/build_log.cc	/^namespace {$/;"	n	file:
__anonbcfe80ef0108	src/dev/tmux/layout-set.c	/^static const struct {$/;"	s	file:
__anonc903038b0103	src/dev/tmux/tmux.h	/^enum {$/;"	g
__anonc903038b020a	src/dev/tmux/tmux.h	/^	union {$/;"	u	struct:grid_cell_entry
__anonc903038b0308	src/dev/tmux/tmux.h	/^		struct {$/;"	s	union:grid_cell_entry::__anonc903038b020a
__anonc903038b0403	src/dev/tmux/tmux.h	/^	enum {$/;"	g	struct:job
__anonc903038b0503	src/dev/tmux/tmux.h	/^	enum {$/;"	g	struct:screen_sel
__anonc903038b0603	src/dev/tmux/tmux.h	/^	enum {$/;"	g	struct:tty
__anonc903038b0708	src/dev/tmux/tmux.h	/^	struct {$/;"	s	struct:cmd_entry
__anonc903038b0803	src/dev/tmux/tmux.h	/^	enum { PROMPT_ENTRY, PROMPT_COMMAND } prompt_mode;$/;"	g	struct:client
__anonc9119abe010a	src/dev/tmux/tty-term.c	/^	union {$/;"	u	struct:tty_code	file:
__anonce8c8d230110	src/dev/ninja/src/ninja_test.cc	/^namespace {$/;"	n	file:
__anonce8c8d230203	src/dev/ninja/src/ninja_test.cc	/^  enum { OPT_GTEST_FILTER = 1 };$/;"	g	function:__anonce8c8d230110::ReadFlags	file:
__anonda8a6bb00110	src/dev/ninja/src/clparser.cc	/^namespace {$/;"	n	file:
__anondfd6196f0110	src/dev/ninja/src/disk_interface.cc	/^namespace {$/;"	n	file:
__anone31179a4010a	src/dev/tmux/options.c	/^	union {$/;"	u	struct:options_entry	file:
__anone31179a40208	src/dev/tmux/options.c	/^		struct {$/;"	s	union:options_entry::__anone31179a4010a	file:
__anonebbddeae0110	src/dev/ninja/src/disk_interface_test.cc	/^namespace {$/;"	n	file:
__anonf43750740110	src/dev/ninja/src/test.cc	/^namespace {$/;"	n	file:
__anonfb464b170103	src/dev/tmux/client.c	/^static enum {$/;"	g	file:
__attribute__	src/dev/tmux/compat.h	/^#define __attribute__(/;"	d
__bounded__	src/dev/tmux/xmalloc.h	/^#define __bounded__(/;"	d
__call__	meta/dotbot/dotbot/util/singleton.py	/^    def __call__(cls, *args, **kwargs):$/;"	m	class:Singleton
__cmp__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __cmp__(self, other):$/;"	m	class:_make_objects.AnInstance
__cmp__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __cmp__(self, other):$/;"	m	class:_make_objects.AnObject
__cmp__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __cmp__(self, other):$/;"	m	class:_make_objects.AnInstance
__cmp__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __cmp__(self, other):$/;"	m	class:_make_objects.AnObject
__dead	src/dev/tmux/compat.h	/^#define __dead /;"	d
__dealloc__	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def __dealloc__(self):$/;"	m	class:CEmitter
__dealloc__	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def __dealloc__(self):$/;"	m	class:CParser
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.AnInstance
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.AnObject
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyDict
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyInt
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyList
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyTestClass1
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.YAMLObject1
__eq__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.YAMLObject2
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.AnInstance
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.AnObject
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyDict
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyInt
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyList
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.MyTestClass1
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.YAMLObject1
__eq__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __eq__(self, other):$/;"	m	class:_make_objects.YAMLObject2
__getinitargs__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getinitargs__(self):$/;"	m	class:_make_objects.InitArgs
__getinitargs__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getinitargs__(self):$/;"	m	class:_make_objects.InitArgsWithState
__getnewargs__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getnewargs__(self):$/;"	m	class:_make_objects.NewArgs
__getnewargs__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getnewargs__(self):$/;"	m	class:_make_objects.NewArgsWithState
__getnewargs__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __getnewargs__(self):$/;"	m	class:_make_objects.NewArgs
__getnewargs__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __getnewargs__(self):$/;"	m	class:_make_objects.NewArgsWithState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.ACustomState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.AState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.InitArgs
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.InitArgsWithState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.NewArgs
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.NewArgsWithState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.YAMLObject2
__getstate__	meta/dotbot/lib/pyyaml/tests/lib/test_recursive.py	/^    def __getstate__(self):$/;"	m	class:AnInstanceWithState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.ACustomState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.AState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.NewArgs
__getstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.NewArgsWithState
__getstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __getstate__(self):$/;"	m	class:_make_objects.YAMLObject2
__getstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_recursive.py	/^    def __getstate__(self):$/;"	m	class:AnInstanceWithState
__gnu_cxx	src/dev/ninja/src/hash_map.h	/^namespace __gnu_cxx {$/;"	n
__init__	languages/python/pdbrc.py	/^    def __init__(self):$/;"	m	class:Config
__init__	meta/dotbot/dotbot/config.py	/^    def __init__(self, config_file_path):$/;"	m	class:ConfigReader
__init__	meta/dotbot/dotbot/context.py	/^    def __init__(self, base_directory):$/;"	m	class:Context
__init__	meta/dotbot/dotbot/dispatcher.py	/^    def __init__(self, base_directory):$/;"	m	class:Dispatcher
__init__	meta/dotbot/dotbot/messenger/messenger.py	/^    def __init__(self, level = Level.LOWINFO):$/;"	m	class:Messenger
__init__	meta/dotbot/dotbot/plugin.py	/^    def __init__(self, context):$/;"	m	class:Plugin
__init__	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:YAMLLexerContext
__init__	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^    def __init__(self, header=None, footer=None,$/;"	m	class:Style
__init__	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^    def __init__(self, options):$/;"	m	class:YAMLHighlight
__init__	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def __init__(self, object name, int index, int line, int column,$/;"	m	class:Mark
__init__	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def __init__(self, stream):$/;"	m	class:CParser
__init__	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def __init__(self, stream, canonical=None, indent=None, width=None,$/;"	m	class:CEmitter
__init__	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    def __init__(cls, name, bases, kwds):$/;"	m	class:YAMLObjectMetaclass
__init__	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def __init__(self):$/;"	m	class:Composer
__init__	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def __init__(self):$/;"	m	class:BaseConstructor
__init__	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CBaseLoader
__init__	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CLoader
__init__	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CSafeLoader
__init__	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CBaseDumper
__init__	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CDumper
__init__	meta/dotbot/lib/pyyaml/lib/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CSafeDumper
__init__	meta/dotbot/lib/pyyaml/lib/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:BaseDumper
__init__	meta/dotbot/lib/pyyaml/lib/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:Dumper
__init__	meta/dotbot/lib/pyyaml/lib/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:SafeDumper
__init__	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def __init__(self, scalar, empty, multiline,$/;"	m	class:ScalarAnalysis
__init__	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def __init__(self, stream, canonical=None, indent=None, width=None,$/;"	m	class:Emitter
__init__	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^    def __init__(self, context=None, context_mark=None,$/;"	m	class:MarkedYAMLError
__init__	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^    def __init__(self, name, index, line, column, buffer, pointer):$/;"	m	class:Mark
__init__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __init__(self, anchor, start_mark=None, end_mark=None):$/;"	m	class:NodeEvent
__init__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __init__(self, anchor, tag, implicit, start_mark=None, end_mark=None,$/;"	m	class:CollectionStartEvent
__init__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __init__(self, anchor, tag, implicit, value,$/;"	m	class:ScalarEvent
__init__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None):$/;"	m	class:Event
__init__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None, encoding=None):$/;"	m	class:StreamStartEvent
__init__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:DocumentEndEvent
__init__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:DocumentStartEvent
__init__	meta/dotbot/lib/pyyaml/lib/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:BaseLoader
__init__	meta/dotbot/lib/pyyaml/lib/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:Loader
__init__	meta/dotbot/lib/pyyaml/lib/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:SafeLoader
__init__	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^    def __init__(self, tag, value, start_mark, end_mark):$/;"	m	class:Node
__init__	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^    def __init__(self, tag, value,$/;"	m	class:CollectionNode
__init__	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^    def __init__(self, tag, value,$/;"	m	class:ScalarNode
__init__	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def __init__(self):$/;"	m	class:Parser
__init__	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def __init__(self, name, position, character, encoding, reason):$/;"	m	class:ReaderError
__init__	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def __init__(self, stream):$/;"	m	class:Reader
__init__	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def __init__(self, default_style=None, default_flow_style=None):$/;"	m	class:BaseRepresenter
__init__	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    def __init__(self):$/;"	m	class:BaseResolver
__init__	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def __init__(self):$/;"	m	class:Scanner
__init__	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def __init__(self, token_number, required, index, line, column, mark):$/;"	m	class:SimpleKey
__init__	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    def __init__(self, encoding=None,$/;"	m	class:Serializer
__init__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __init__(self, name, value, start_mark, end_mark):$/;"	m	class:DirectiveToken
__init__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __init__(self, start_mark, end_mark):$/;"	m	class:Token
__init__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:StreamStartToken
__init__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __init__(self, value, plain, start_mark, end_mark, style=None):$/;"	m	class:ScalarToken
__init__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:AliasToken
__init__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:AnchorToken
__init__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:TagToken
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    def __init__(cls, name, bases, kwds):$/;"	m	class:YAMLObjectMetaclass
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def __init__(self):$/;"	m	class:Composer
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def __init__(self):$/;"	m	class:BaseConstructor
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CBaseLoader
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CLoader
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^    def __init__(self, stream):$/;"	m	class:CSafeLoader
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CBaseDumper
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CDumper
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/cyaml.py	/^    def __init__(self, stream,$/;"	m	class:CSafeDumper
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:BaseDumper
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:Dumper
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/dumper.py	/^    def __init__(self, stream,$/;"	m	class:SafeDumper
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def __init__(self, scalar, empty, multiline,$/;"	m	class:ScalarAnalysis
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def __init__(self, stream, canonical=None, indent=None, width=None,$/;"	m	class:Emitter
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^    def __init__(self, context=None, context_mark=None,$/;"	m	class:MarkedYAMLError
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^    def __init__(self, name, index, line, column, buffer, pointer):$/;"	m	class:Mark
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __init__(self, anchor, start_mark=None, end_mark=None):$/;"	m	class:NodeEvent
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __init__(self, anchor, tag, implicit, start_mark=None, end_mark=None,$/;"	m	class:CollectionStartEvent
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __init__(self, anchor, tag, implicit, value,$/;"	m	class:ScalarEvent
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None):$/;"	m	class:Event
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None, encoding=None):$/;"	m	class:StreamStartEvent
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:DocumentEndEvent
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:DocumentStartEvent
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:BaseLoader
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:Loader
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/loader.py	/^    def __init__(self, stream):$/;"	m	class:SafeLoader
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^    def __init__(self, tag, value, start_mark, end_mark):$/;"	m	class:Node
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^    def __init__(self, tag, value,$/;"	m	class:CollectionNode
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^    def __init__(self, tag, value,$/;"	m	class:ScalarNode
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def __init__(self):$/;"	m	class:Parser
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def __init__(self, name, position, character, encoding, reason):$/;"	m	class:ReaderError
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def __init__(self, stream):$/;"	m	class:Reader
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def __init__(self, default_style=None, default_flow_style=None):$/;"	m	class:BaseRepresenter
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    def __init__(self):$/;"	m	class:BaseResolver
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def __init__(self):$/;"	m	class:Scanner
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def __init__(self, token_number, required, index, line, column, mark):$/;"	m	class:SimpleKey
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    def __init__(self, encoding=None,$/;"	m	class:Serializer
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __init__(self, name, value, start_mark, end_mark):$/;"	m	class:DirectiveToken
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __init__(self, start_mark, end_mark):$/;"	m	class:Token
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __init__(self, start_mark=None, end_mark=None,$/;"	m	class:StreamStartToken
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __init__(self, value, plain, start_mark, end_mark, style=None):$/;"	m	class:ScalarToken
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:AliasToken
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:AnchorToken
__init__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __init__(self, value, start_mark, end_mark):$/;"	m	class:TagToken
__init__	meta/dotbot/lib/pyyaml/setup.py	/^    def __init__(self, attrs=None):$/;"	m	class:Distribution
__init__	meta/dotbot/lib/pyyaml/setup.py	/^    def __init__(self, name, sources, feature_name, feature_description,$/;"	m	class:Extension
__init__	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def __init__(self):$/;"	m	class:CanonicalParser
__init__	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def __init__(self, data):$/;"	m	class:CanonicalScanner
__init__	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def __init__(self, stream):$/;"	m	class:CanonicalLoader
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __init__(self, foo=1, bar=2, baz=3):$/;"	m	class:_make_objects.YAMLObject2
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __init__(self, foo=None, bar=None, baz=None):$/;"	m	class:_make_objects.AnInstance
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __init__(self, my_parameter=None, my_another_parameter=None):$/;"	m	class:_make_objects.YAMLObject1
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __init__(self, n=1):$/;"	m	class:_make_objects.MyDict
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __init__(self, n=1):$/;"	m	class:_make_objects.MyList
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __init__(self, offset, name):$/;"	m	class:_make_objects.FixedOffset
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __init__(self, x, y=0, z=0):$/;"	m	class:_make_objects.MyTestClass1
__init__	meta/dotbot/lib/pyyaml/tests/lib/test_recursive.py	/^    def __init__(self, foo, bar):$/;"	m	class:AnInstance
__init__	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def __init__(self):$/;"	m	class:CanonicalParser
__init__	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def __init__(self, data):$/;"	m	class:CanonicalScanner
__init__	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def __init__(self, stream):$/;"	m	class:CanonicalLoader
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __init__(self, foo=1, bar=2, baz=3):$/;"	m	class:_make_objects.YAMLObject2
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __init__(self, foo=None, bar=None, baz=None):$/;"	m	class:_make_objects.AnInstance
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __init__(self, my_parameter=None, my_another_parameter=None):$/;"	m	class:_make_objects.YAMLObject1
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __init__(self, n=1):$/;"	m	class:_make_objects.MyDict
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __init__(self, n=1):$/;"	m	class:_make_objects.MyList
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __init__(self, offset, name):$/;"	m	class:_make_objects.FixedOffset
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __init__(self, x, y=0, z=0):$/;"	m	class:_make_objects.MyTestClass1
__init__	meta/dotbot/lib/pyyaml/tests/lib3/test_recursive.py	/^    def __init__(self, foo, bar):$/;"	m	class:AnInstance
__init__	src/dev/ninja/configure.py	/^    def __init__(self, platform):$/;"	m	class:Platform
__init__	src/dev/ninja/configure.py	/^    def __init__(self, writer, verbose=False):$/;"	m	class:Bootstrap
__init__	src/dev/ninja/misc/ninja_syntax.py	/^    def __init__(self, output, width=78):$/;"	m	class:Writer
__init__	src/dev/ninja/misc/write_fake_manifests.py	/^    def __init__(self, gen, kind):$/;"	m	class:Target
__init__	src/dev/ninja/misc/write_fake_manifests.py	/^    def __init__(self, src_dir):$/;"	m	class:GenRandom
__metaclass__	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    __metaclass__ = YAMLObjectMetaclass$/;"	v	class:YAMLObject	file:
__new__	meta/dotbot/dotbot/util/compat.py	/^        def __new__(cls, name, this_bases, d):$/;"	m	class:with_metaclass.metaclass
__new__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __new__(cls, foo=None, bar=None, baz=None):$/;"	m	class:_make_objects.AnObject
__new__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __new__(cls, foo=None, bar=None, baz=None):$/;"	m	class:_make_objects.AnObject
__packed	src/dev/tmux/compat.h	/^#define __packed /;"	d
__packed	src/dev/tmux/tmux.h	/^} __packed;$/;"	v	typeref:struct:grid_cell_entry
__packed	src/dev/tmux/tmux.h	/^} __packed;$/;"	v	typeref:struct:grid_line
__packed	src/dev/tmux/tmux.h	/^} __packed;$/;"	v	typeref:struct:utf8_data
__reduce__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __reduce__(self):$/;"	m	class:_make_objects.Reduce
__reduce__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __reduce__(self):$/;"	m	class:_make_objects.ReduceWithState
__reduce__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __reduce__(self):$/;"	m	class:_make_objects.Reduce
__reduce__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __reduce__(self):$/;"	m	class:_make_objects.ReduceWithState
__repr__	meta/dotbot/lib/pyyaml/lib/yaml/events.py	/^    def __repr__(self):$/;"	m	class:Event
__repr__	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^    def __repr__(self):$/;"	m	class:Node
__repr__	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    def __repr__(self):$/;"	m	class:Token
__repr__	meta/dotbot/lib/pyyaml/lib3/yaml/events.py	/^    def __repr__(self):$/;"	m	class:Event
__repr__	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^    def __repr__(self):$/;"	m	class:Node
__repr__	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    def __repr__(self):$/;"	m	class:Token
__repr__	meta/dotbot/lib/pyyaml/tests/lib/test_recursive.py	/^    def __repr__(self):$/;"	m	class:AnInstance
__repr__	meta/dotbot/lib/pyyaml/tests/lib3/test_recursive.py	/^    def __repr__(self):$/;"	m	class:AnInstance
__setstate__	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^    def __setstate__(self, state):$/;"	m	class:Style
__setstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.ACustomState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.AState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.InitArgsWithState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.NewArgsWithState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.ReduceWithState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.YAMLObject2
__setstate__	meta/dotbot/lib/pyyaml/tests/lib/test_recursive.py	/^    def __setstate__(self, state):$/;"	m	class:AnInstanceWithState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.ACustomState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.AState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.NewArgsWithState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.ReduceWithState
__setstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def __setstate__(self, state):$/;"	m	class:_make_objects.YAMLObject2
__setstate__	meta/dotbot/lib/pyyaml/tests/lib3/test_recursive.py	/^    def __setstate__(self, state):$/;"	m	class:AnInstanceWithState
__slots__	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    __slots__ = ()  # no direct instantiation, so allow immutable subclasses$/;"	v	class:YAMLObject	file:
__slots__	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    __slots__ = ()  # no direct instantiation, so allow immutable subclasses$/;"	v	class:YAMLObject	file:
__str__	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def __str__(self):$/;"	m	class:Mark
__str__	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^    def __str__(self):$/;"	m	class:Mark
__str__	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^    def __str__(self):$/;"	m	class:MarkedYAMLError
__str__	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def __str__(self):$/;"	m	class:ReaderError
__str__	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^    def __str__(self):$/;"	m	class:Mark
__str__	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^    def __str__(self):$/;"	m	class:MarkedYAMLError
__str__	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def __str__(self):$/;"	m	class:ReaderError
__unused	src/dev/tmux/compat.h	/^#define __unused /;"	d
__unused	src/dev/tmux/osdep-darwin.c	/^#define __unused /;"	d	file:
__version__	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^__version__ = '3.11'$/;"	v
__version__	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^__version__ = '3.11'$/;"	v
__with_libyaml__	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    __with_libyaml__ = False$/;"	v
__with_libyaml__	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    __with_libyaml__ = True$/;"	v
__with_libyaml__	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    __with_libyaml__ = False$/;"	v
__with_libyaml__	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    __with_libyaml__ = True$/;"	v
__zplug::base	src/zplug/base/init.zsh	/^__zplug::base()$/;"	f
__zplug::base	src/zplug/repos/zplug/zplug/base/init.zsh	/^__zplug::base()$/;"	f
__zplug::base::base::get_os	src/zplug/base/base/base.zsh	/^__zplug::base::base::get_os()$/;"	f
__zplug::base::base::get_os	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::get_os()$/;"	f
__zplug::base::base::git_version	src/zplug/base/base/base.zsh	/^__zplug::base::base::git_version()$/;"	f
__zplug::base::base::git_version	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::git_version()$/;"	f
__zplug::base::base::is_cli	src/zplug/base/base/base.zsh	/^__zplug::base::base::is_cli()$/;"	f
__zplug::base::base::is_cli	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::is_cli()$/;"	f
__zplug::base::base::is_linux	src/zplug/base/base/base.zsh	/^__zplug::base::base::is_linux()$/;"	f
__zplug::base::base::is_linux	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::is_linux()$/;"	f
__zplug::base::base::is_osx	src/zplug/base/base/base.zsh	/^__zplug::base::base::is_osx()$/;"	f
__zplug::base::base::is_osx	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::is_osx()$/;"	f
__zplug::base::base::osx_version	src/zplug/base/base/base.zsh	/^__zplug::base::base::osx_version()$/;"	f
__zplug::base::base::osx_version	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::osx_version()$/;"	f
__zplug::base::base::packaging	src/zplug/base/base/base.zsh	/^__zplug::base::base::packaging()$/;"	f
__zplug::base::base::packaging	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::packaging()$/;"	f
__zplug::base::base::valid_semver	src/zplug/base/base/base.zsh	/^__zplug::base::base::valid_semver()$/;"	f
__zplug::base::base::valid_semver	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::valid_semver()$/;"	f
__zplug::base::base::version_requirement	src/zplug/base/base/base.zsh	/^__zplug::base::base::version_requirement()$/;"	f
__zplug::base::base::version_requirement	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::version_requirement()$/;"	f
__zplug::base::base::zpluged	src/zplug/base/base/base.zsh	/^__zplug::base::base::zpluged()$/;"	f
__zplug::base::base::zpluged	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::zpluged()$/;"	f
__zplug::base::base::zsh_version	src/zplug/base/base/base.zsh	/^__zplug::base::base::zsh_version()$/;"	f
__zplug::base::base::zsh_version	src/zplug/repos/zplug/zplug/base/base/base.zsh	/^__zplug::base::base::zsh_version()$/;"	f
__zplug::core::add::on_cli	src/zplug/base/core/add.zsh	/^__zplug::core::add::on_cli()$/;"	f
__zplug::core::add::on_cli	src/zplug/repos/zplug/zplug/base/core/add.zsh	/^__zplug::core::add::on_cli()$/;"	f
__zplug::core::add::proc_at-sign	src/zplug/base/core/add.zsh	/^__zplug::core::add::proc_at-sign()$/;"	f
__zplug::core::add::proc_at-sign	src/zplug/repos/zplug/zplug/base/core/add.zsh	/^__zplug::core::add::proc_at-sign()$/;"	f
__zplug::core::add::to_zplugs	src/zplug/base/core/add.zsh	/^__zplug::core::add::to_zplugs()$/;"	f
__zplug::core::add::to_zplugs	src/zplug/repos/zplug/zplug/base/core/add.zsh	/^__zplug::core::add::to_zplugs()$/;"	f
__zplug::core::arguments::auto_correct	src/zplug/base/core/arguments.zsh	/^__zplug::core::arguments::auto_correct()$/;"	f
__zplug::core::arguments::auto_correct	src/zplug/repos/zplug/zplug/base/core/arguments.zsh	/^__zplug::core::arguments::auto_correct()$/;"	f
__zplug::core::arguments::exec	src/zplug/base/core/arguments.zsh	/^__zplug::core::arguments::exec()$/;"	f
__zplug::core::arguments::exec	src/zplug/repos/zplug/zplug/base/core/arguments.zsh	/^__zplug::core::arguments::exec()$/;"	f
__zplug::core::arguments::none	src/zplug/base/core/arguments.zsh	/^__zplug::core::arguments::none()$/;"	f
__zplug::core::arguments::none	src/zplug/repos/zplug/zplug/base/core/arguments.zsh	/^__zplug::core::arguments::none()$/;"	f
__zplug::core::cache::commands	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::commands()$/;"	f
__zplug::core::cache::commands	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::commands()$/;"	f
__zplug::core::cache::commit	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::commit()$/;"	f
__zplug::core::cache::commit	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::commit()$/;"	f
__zplug::core::cache::diff	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::diff()$/;"	f
__zplug::core::cache::diff	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::diff()$/;"	f
__zplug::core::cache::expose	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::expose()$/;"	f
__zplug::core::cache::expose	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::expose()$/;"	f
__zplug::core::cache::plugins	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::plugins()$/;"	f
__zplug::core::cache::plugins	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::plugins()$/;"	f
__zplug::core::cache::set_file	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::set_file()$/;"	f
__zplug::core::cache::set_file	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::set_file()$/;"	f
__zplug::core::cache::themes	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::themes()$/;"	f
__zplug::core::cache::themes	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::themes()$/;"	f
__zplug::core::cache::update	src/zplug/base/core/cache.zsh	/^__zplug::core::cache::update()$/;"	f
__zplug::core::cache::update	src/zplug/repos/zplug/zplug/base/core/cache.zsh	/^__zplug::core::cache::update()$/;"	f
__zplug::core::commands::get	src/zplug/base/core/commands.zsh	/^__zplug::core::commands::get()$/;"	f
__zplug::core::commands::get	src/zplug/repos/zplug/zplug/base/core/commands.zsh	/^__zplug::core::commands::get()$/;"	f
__zplug::core::commands::user_defined	src/zplug/base/core/commands.zsh	/^__zplug::core::commands::user_defined()$/;"	f
__zplug::core::commands::user_defined	src/zplug/repos/zplug/zplug/base/core/commands.zsh	/^__zplug::core::commands::user_defined()$/;"	f
__zplug::core::core::get_interfaces	src/zplug/base/core/core.zsh	/^__zplug::core::core::get_interfaces()$/;"	f
__zplug::core::core::get_interfaces	src/zplug/repos/zplug/zplug/base/core/core.zsh	/^__zplug::core::core::get_interfaces()$/;"	f
__zplug::core::core::prepare	src/zplug/base/core/core.zsh	/^__zplug::core::core::prepare()$/;"	f
__zplug::core::core::prepare	src/zplug/repos/zplug/zplug/base/core/core.zsh	/^__zplug::core::core::prepare()$/;"	f
__zplug::core::core::run_interfaces	src/zplug/base/core/core.zsh	/^__zplug::core::core::run_interfaces()$/;"	f
__zplug::core::core::run_interfaces	src/zplug/repos/zplug/zplug/base/core/core.zsh	/^__zplug::core::core::run_interfaces()$/;"	f
__zplug::core::core::variable	src/zplug/base/core/core.zsh	/^__zplug::core::core::variable()$/;"	f
__zplug::core::core::variable	src/zplug/repos/zplug/zplug/base/core/core.zsh	/^__zplug::core::core::variable()$/;"	f
__zplug::core::interface::expose	src/zplug/base/core/interface.zsh	/^__zplug::core::interface::expose()$/;"	f
__zplug::core::interface::expose	src/zplug/repos/zplug/zplug/base/core/interface.zsh	/^__zplug::core::interface::expose()$/;"	f
__zplug::core::load::as_command	src/zplug/base/core/load.zsh	/^__zplug::core::load::as_command()$/;"	f
__zplug::core::load::as_command	src/zplug/repos/zplug/zplug/base/core/load.zsh	/^__zplug::core::load::as_command()$/;"	f
__zplug::core::load::as_plugin	src/zplug/base/core/load.zsh	/^__zplug::core::load::as_plugin()$/;"	f
__zplug::core::load::as_plugin	src/zplug/repos/zplug/zplug/base/core/load.zsh	/^__zplug::core::load::as_plugin()$/;"	f
__zplug::core::load::as_theme	src/zplug/base/core/load.zsh	/^__zplug::core::load::as_theme()$/;"	f
__zplug::core::load::as_theme	src/zplug/repos/zplug/zplug/base/core/load.zsh	/^__zplug::core::load::as_theme()$/;"	f
__zplug::core::load::from_cache	src/zplug/base/core/load.zsh	/^__zplug::core::load::from_cache()$/;"	f
__zplug::core::load::from_cache	src/zplug/repos/zplug/zplug/base/core/load.zsh	/^__zplug::core::load::from_cache()$/;"	f
__zplug::core::load::prepare	src/zplug/base/core/load.zsh	/^__zplug::core::load::prepare()$/;"	f
__zplug::core::load::prepare	src/zplug/repos/zplug/zplug/base/core/load.zsh	/^__zplug::core::load::prepare()$/;"	f
__zplug::core::load::skip_condition	src/zplug/base/core/load.zsh	/^__zplug::core::load::skip_condition()$/;"	f
__zplug::core::load::skip_condition	src/zplug/repos/zplug/zplug/base/core/load.zsh	/^__zplug::core::load::skip_condition()$/;"	f
__zplug::core::migration::cache_file_dir	src/zplug/base/core/migration.zsh	/^__zplug::core::migration::cache_file_dir()$/;"	f
__zplug::core::migration::cache_file_dir	src/zplug/repos/zplug/zplug/base/core/migration.zsh	/^__zplug::core::migration::cache_file_dir()$/;"	f
__zplug::core::migration::pipe	src/zplug/base/core/migration.zsh	/^__zplug::core::migration::pipe()$/;"	f
__zplug::core::migration::pipe	src/zplug/repos/zplug/zplug/base/core/migration.zsh	/^__zplug::core::migration::pipe()$/;"	f
__zplug::core::migration::tags	src/zplug/base/core/migration.zsh	/^__zplug::core::migration::tags()$/;"	f
__zplug::core::migration::tags	src/zplug/repos/zplug/zplug/base/core/migration.zsh	/^__zplug::core::migration::tags()$/;"	f
__zplug::core::options::get	src/zplug/base/core/options.zsh	/^__zplug::core::options::get()$/;"	f
__zplug::core::options::get	src/zplug/repos/zplug/zplug/base/core/options.zsh	/^__zplug::core::options::get()$/;"	f
__zplug::core::options::long	src/zplug/base/core/options.zsh	/^__zplug::core::options::long()$/;"	f
__zplug::core::options::long	src/zplug/repos/zplug/zplug/base/core/options.zsh	/^__zplug::core::options::long()$/;"	f
__zplug::core::options::parse	src/zplug/base/core/options.zsh	/^__zplug::core::options::parse()$/;"	f
__zplug::core::options::parse	src/zplug/repos/zplug/zplug/base/core/options.zsh	/^__zplug::core::options::parse()$/;"	f
__zplug::core::options::short	src/zplug/base/core/options.zsh	/^__zplug::core::options::short()$/;"	f
__zplug::core::options::short	src/zplug/repos/zplug/zplug/base/core/options.zsh	/^__zplug::core::options::short()$/;"	f
__zplug::core::options::unknown	src/zplug/base/core/options.zsh	/^__zplug::core::options::unknown()$/;"	f
__zplug::core::options::unknown	src/zplug/repos/zplug/zplug/base/core/options.zsh	/^__zplug::core::options::unknown()$/;"	f
__zplug::core::self::info	src/zplug/base/core/self.zsh	/^__zplug::core::self::info()$/;"	f
__zplug::core::self::info	src/zplug/repos/zplug/zplug/base/core/self.zsh	/^__zplug::core::self::info()$/;"	f
__zplug::core::self::init	src/zplug/base/core/self.zsh	/^__zplug::core::self::init()$/;"	f
__zplug::core::self::init	src/zplug/repos/zplug/zplug/base/core/self.zsh	/^__zplug::core::self::init()$/;"	f
__zplug::core::self::load	src/zplug/base/core/self.zsh	/^__zplug::core::self::load()$/;"	f
__zplug::core::self::load	src/zplug/repos/zplug/zplug/base/core/self.zsh	/^__zplug::core::self::load()$/;"	f
__zplug::core::self::update	src/zplug/base/core/self.zsh	/^__zplug::core::self::update()$/;"	f
__zplug::core::self::update	src/zplug/repos/zplug/zplug/base/core/self.zsh	/^__zplug::core::self::update()$/;"	f
__zplug::core::sources::call	src/zplug/base/core/sources.zsh	/^__zplug::core::sources::call()$/;"	f
__zplug::core::sources::call	src/zplug/repos/zplug/zplug/base/core/sources.zsh	/^__zplug::core::sources::call()$/;"	f
__zplug::core::sources::is_exists	src/zplug/base/core/sources.zsh	/^__zplug::core::sources::is_exists()$/;"	f
__zplug::core::sources::is_exists	src/zplug/repos/zplug/zplug/base/core/sources.zsh	/^__zplug::core::sources::is_exists()$/;"	f
__zplug::core::sources::is_handler_defined	src/zplug/base/core/sources.zsh	/^__zplug::core::sources::is_handler_defined()$/;"	f
__zplug::core::sources::is_handler_defined	src/zplug/repos/zplug/zplug/base/core/sources.zsh	/^__zplug::core::sources::is_handler_defined()$/;"	f
__zplug::core::sources::use_default	src/zplug/base/core/sources.zsh	/^__zplug::core::sources::use_default()$/;"	f
__zplug::core::sources::use_default	src/zplug/repos/zplug/zplug/base/core/sources.zsh	/^__zplug::core::sources::use_default()$/;"	f
__zplug::core::sources::use_handler	src/zplug/base/core/sources.zsh	/^__zplug::core::sources::use_handler()$/;"	f
__zplug::core::sources::use_handler	src/zplug/repos/zplug/zplug/base/core/sources.zsh	/^__zplug::core::sources::use_handler()$/;"	f
__zplug::core::tags::get	src/zplug/base/core/tags.zsh	/^__zplug::core::tags::get()$/;"	f
__zplug::core::tags::get	src/zplug/repos/zplug/zplug/base/core/tags.zsh	/^__zplug::core::tags::get()$/;"	f
__zplug::core::tags::parse	src/zplug/base/core/tags.zsh	/^__zplug::core::tags::parse()$/;"	f
__zplug::core::tags::parse	src/zplug/repos/zplug/zplug/base/core/tags.zsh	/^__zplug::core::tags::parse()$/;"	f
__zplug::io::file::generate	src/zplug/base/io/file.zsh	/^__zplug::io::file::generate()$/;"	f
__zplug::io::file::generate	src/zplug/repos/zplug/zplug/base/io/file.zsh	/^__zplug::io::file::generate()$/;"	f
__zplug::io::file::load	src/zplug/base/io/file.zsh	/^__zplug::io::file::load()$/;"	f
__zplug::io::file::load	src/zplug/repos/zplug/zplug/base/io/file.zsh	/^__zplug::io::file::load()$/;"	f
__zplug::io::file::rm_touch	src/zplug/base/io/file.zsh	/^__zplug::io::file::rm_touch()$/;"	f
__zplug::io::file::rm_touch	src/zplug/repos/zplug/zplug/base/io/file.zsh	/^__zplug::io::file::rm_touch()$/;"	f
__zplug::io::print::die	src/zplug/base/io/print.zsh	/^__zplug::io::print::die()$/;"	f
__zplug::io::print::die	src/zplug/repos/zplug/zplug/base/io/print.zsh	/^__zplug::io::print::die()$/;"	f
__zplug::io::print::f	src/zplug/base/io/print.zsh	/^__zplug::io::print::f()$/;"	f
__zplug::io::print::f	src/zplug/repos/zplug/zplug/base/io/print.zsh	/^__zplug::io::print::f()$/;"	f
__zplug::io::print::put	src/zplug/base/io/print.zsh	/^__zplug::io::print::put()$/;"	f
__zplug::io::print::put	src/zplug/repos/zplug/zplug/base/io/print.zsh	/^__zplug::io::print::put()$/;"	f
__zplug::job::handle::elapsed_time	src/zplug/base/job/handle.zsh	/^__zplug::job::handle::elapsed_time()$/;"	f
__zplug::job::handle::elapsed_time	src/zplug/repos/zplug/zplug/base/job/handle.zsh	/^__zplug::job::handle::elapsed_time()$/;"	f
__zplug::job::handle::flock	src/zplug/base/job/handle.zsh	/^__zplug::job::handle::flock()$/;"	f
__zplug::job::handle::flock	src/zplug/repos/zplug/zplug/base/job/handle.zsh	/^__zplug::job::handle::flock()$/;"	f
__zplug::job::handle::hook	src/zplug/base/job/handle.zsh	/^__zplug::job::handle::hook()$/;"	f
__zplug::job::handle::hook	src/zplug/repos/zplug/zplug/base/job/handle.zsh	/^__zplug::job::handle::hook()$/;"	f
__zplug::job::handle::running	src/zplug/base/job/handle.zsh	/^__zplug::job::handle::running()$/;"	f
__zplug::job::handle::running	src/zplug/repos/zplug/zplug/base/job/handle.zsh	/^__zplug::job::handle::running()$/;"	f
__zplug::job::handle::state	src/zplug/base/job/handle.zsh	/^__zplug::job::handle::state()$/;"	f
__zplug::job::handle::state	src/zplug/repos/zplug/zplug/base/job/handle.zsh	/^__zplug::job::handle::state()$/;"	f
__zplug::job::handle::wait	src/zplug/base/job/handle.zsh	/^__zplug::job::handle::wait()$/;"	f
__zplug::job::handle::wait	src/zplug/repos/zplug/zplug/base/job/handle.zsh	/^__zplug::job::handle::wait()$/;"	f
__zplug::job::hook::build	src/zplug/base/job/hook.zsh	/^__zplug::job::hook::build()$/;"	f
__zplug::job::hook::build	src/zplug/repos/zplug/zplug/base/job/hook.zsh	/^__zplug::job::hook::build()$/;"	f
__zplug::job::hook::build_failure	src/zplug/base/job/hook.zsh	/^__zplug::job::hook::build_failure()$/;"	f
__zplug::job::hook::build_failure	src/zplug/repos/zplug/zplug/base/job/hook.zsh	/^__zplug::job::hook::build_failure()$/;"	f
__zplug::job::hook::build_timeout	src/zplug/base/job/hook.zsh	/^__zplug::job::hook::build_timeout()$/;"	f
__zplug::job::hook::build_timeout	src/zplug/repos/zplug/zplug/base/job/hook.zsh	/^__zplug::job::hook::build_timeout()$/;"	f
__zplug::job::hook::load	src/zplug/base/job/hook.zsh	/^__zplug::job::hook::load()$/;"	f
__zplug::job::hook::load	src/zplug/repos/zplug/zplug/base/job/hook.zsh	/^__zplug::job::hook::load()$/;"	f
__zplug::job::hook::service	src/zplug/base/job/hook.zsh	/^__zplug::job::hook::service()$/;"	f
__zplug::job::hook::service	src/zplug/repos/zplug/zplug/base/job/hook.zsh	/^__zplug::job::hook::service()$/;"	f
__zplug::job::message::green	src/zplug/base/job/message.zsh	/^__zplug::job::message::green()$/;"	f
__zplug::job::message::green	src/zplug/repos/zplug/zplug/base/job/message.zsh	/^__zplug::job::message::green()$/;"	f
__zplug::job::message::red	src/zplug/base/job/message.zsh	/^__zplug::job::message::red()$/;"	f
__zplug::job::message::red	src/zplug/repos/zplug/zplug/base/job/message.zsh	/^__zplug::job::message::red()$/;"	f
__zplug::job::message::spinning	src/zplug/base/job/message.zsh	/^__zplug::job::message::spinning()$/;"	f
__zplug::job::message::spinning	src/zplug/repos/zplug/zplug/base/job/message.zsh	/^__zplug::job::message::spinning()$/;"	f
__zplug::job::message::white	src/zplug/base/job/message.zsh	/^__zplug::job::message::white()$/;"	f
__zplug::job::message::white	src/zplug/repos/zplug/zplug/base/job/message.zsh	/^__zplug::job::message::white()$/;"	f
__zplug::job::message::yellow	src/zplug/base/job/message.zsh	/^__zplug::job::message::yellow()$/;"	f
__zplug::job::message::yellow	src/zplug/repos/zplug/zplug/base/job/message.zsh	/^__zplug::job::message::yellow()$/;"	f
__zplug::job::parallel::deinit	src/zplug/base/job/parallel.zsh	/^__zplug::job::parallel::deinit()$/;"	f
__zplug::job::parallel::deinit	src/zplug/repos/zplug/zplug/base/job/parallel.zsh	/^__zplug::job::parallel::deinit()$/;"	f
__zplug::job::parallel::init	src/zplug/base/job/parallel.zsh	/^__zplug::job::parallel::init()$/;"	f
__zplug::job::parallel::init	src/zplug/repos/zplug/zplug/base/job/parallel.zsh	/^__zplug::job::parallel::init()$/;"	f
__zplug::job::polling::periodic	src/zplug/base/job/polling.zsh	/^__zplug::job::polling::periodic()$/;"	f
__zplug::job::polling::periodic	src/zplug/repos/zplug/zplug/base/job/polling.zsh	/^__zplug::job::polling::periodic()$/;"	f
__zplug::job::process::get_status_code	src/zplug/base/job/process.zsh	/^__zplug::job::process::get_status_code() {$/;"	f
__zplug::job::process::get_status_code	src/zplug/repos/zplug/zplug/base/job/process.zsh	/^__zplug::job::process::get_status_code() {$/;"	f
__zplug::job::process::is_running	src/zplug/base/job/process.zsh	/^__zplug::job::process::is_running()$/;"	f
__zplug::job::process::is_running	src/zplug/repos/zplug/zplug/base/job/process.zsh	/^__zplug::job::process::is_running()$/;"	f
__zplug::job::process::kill	src/zplug/base/job/process.zsh	/^__zplug::job::process::kill() {$/;"	f
__zplug::job::process::kill	src/zplug/repos/zplug/zplug/base/job/process.zsh	/^__zplug::job::process::kill() {$/;"	f
__zplug::job::queue::is_overflow	src/zplug/base/job/queue.zsh	/^__zplug::job::queue::is_overflow()$/;"	f
__zplug::job::queue::is_overflow	src/zplug/repos/zplug/zplug/base/job/queue.zsh	/^__zplug::job::queue::is_overflow()$/;"	f
__zplug::job::queue::is_within_range	src/zplug/base/job/queue.zsh	/^__zplug::job::queue::is_within_range()$/;"	f
__zplug::job::queue::is_within_range	src/zplug/repos/zplug/zplug/base/job/queue.zsh	/^__zplug::job::queue::is_within_range()$/;"	f
__zplug::job::rollback::build	src/zplug/base/job/rollback.zsh	/^__zplug::job::rollback::build()$/;"	f
__zplug::job::rollback::build	src/zplug/repos/zplug/zplug/base/job/rollback.zsh	/^__zplug::job::rollback::build()$/;"	f
__zplug::job::rollback::message	src/zplug/base/job/rollback.zsh	/^__zplug::job::rollback::message()$/;"	f
__zplug::job::rollback::message	src/zplug/repos/zplug/zplug/base/job/rollback.zsh	/^__zplug::job::rollback::message()$/;"	f
__zplug::log::capture::debug	src/zplug/base/log/capture.zsh	/^__zplug::log::capture::debug()$/;"	f
__zplug::log::capture::debug	src/zplug/repos/zplug/zplug/base/log/capture.zsh	/^__zplug::log::capture::debug()$/;"	f
__zplug::log::capture::error	src/zplug/base/log/capture.zsh	/^__zplug::log::capture::error()$/;"	f
__zplug::log::capture::error	src/zplug/repos/zplug/zplug/base/log/capture.zsh	/^__zplug::log::capture::error()$/;"	f
__zplug::log::capture::info	src/zplug/base/log/capture.zsh	/^__zplug::log::capture::info()$/;"	f
__zplug::log::capture::info	src/zplug/repos/zplug/zplug/base/log/capture.zsh	/^__zplug::log::capture::info()$/;"	f
__zplug::log::format::with_json	src/zplug/base/log/format.zsh	/^__zplug::log::format::with_json()$/;"	f
__zplug::log::format::with_json	src/zplug/repos/zplug/zplug/base/log/format.zsh	/^__zplug::log::format::with_json()$/;"	f
__zplug::log::print::debug	src/zplug/base/log/print.zsh	/^__zplug::log::print::debug()$/;"	f
__zplug::log::print::debug	src/zplug/repos/zplug/zplug/base/log/print.zsh	/^__zplug::log::print::debug()$/;"	f
__zplug::log::print::error	src/zplug/base/log/print.zsh	/^__zplug::log::print::error()$/;"	f
__zplug::log::print::error	src/zplug/repos/zplug/zplug/base/log/print.zsh	/^__zplug::log::print::error()$/;"	f
__zplug::log::print::info	src/zplug/base/log/print.zsh	/^__zplug::log::print::info()$/;"	f
__zplug::log::print::info	src/zplug/repos/zplug/zplug/base/log/print.zsh	/^__zplug::log::print::info()$/;"	f
__zplug::log::write::debug	src/zplug/base/log/write.zsh	/^__zplug::log::write::debug()$/;"	f
__zplug::log::write::debug	src/zplug/repos/zplug/zplug/base/log/write.zsh	/^__zplug::log::write::debug()$/;"	f
__zplug::log::write::error	src/zplug/base/log/write.zsh	/^__zplug::log::write::error()$/;"	f
__zplug::log::write::error	src/zplug/repos/zplug/zplug/base/log/write.zsh	/^__zplug::log::write::error()$/;"	f
__zplug::log::write::info	src/zplug/base/log/write.zsh	/^__zplug::log::write::info()$/;"	f
__zplug::log::write::info	src/zplug/repos/zplug/zplug/base/log/write.zsh	/^__zplug::log::write::info()$/;"	f
__zplug::sources::bitbucket::check	src/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::check()$/;"	f
__zplug::sources::bitbucket::check	src/zplug/repos/zplug/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::check()$/;"	f
__zplug::sources::bitbucket::get_url	src/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::get_url()$/;"	f
__zplug::sources::bitbucket::get_url	src/zplug/repos/zplug/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::get_url()$/;"	f
__zplug::sources::bitbucket::install	src/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::install()$/;"	f
__zplug::sources::bitbucket::install	src/zplug/repos/zplug/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::install()$/;"	f
__zplug::sources::bitbucket::load_command	src/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::load_command()$/;"	f
__zplug::sources::bitbucket::load_command	src/zplug/repos/zplug/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::load_command()$/;"	f
__zplug::sources::bitbucket::load_plugin	src/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::load_plugin()$/;"	f
__zplug::sources::bitbucket::load_plugin	src/zplug/repos/zplug/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::load_plugin()$/;"	f
__zplug::sources::bitbucket::load_theme	src/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::load_theme()$/;"	f
__zplug::sources::bitbucket::load_theme	src/zplug/repos/zplug/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::load_theme()$/;"	f
__zplug::sources::bitbucket::update	src/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::update()$/;"	f
__zplug::sources::bitbucket::update	src/zplug/repos/zplug/zplug/base/sources/bitbucket.zsh	/^__zplug::sources::bitbucket::update()$/;"	f
__zplug::sources::gh-r::check	src/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::check()$/;"	f
__zplug::sources::gh-r::check	src/zplug/repos/zplug/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::check()$/;"	f
__zplug::sources::gh-r::install	src/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::install()$/;"	f
__zplug::sources::gh-r::install	src/zplug/repos/zplug/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::install()$/;"	f
__zplug::sources::gh-r::load_command	src/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::load_command()$/;"	f
__zplug::sources::gh-r::load_command	src/zplug/repos/zplug/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::load_command()$/;"	f
__zplug::sources::gh-r::update	src/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::update()$/;"	f
__zplug::sources::gh-r::update	src/zplug/repos/zplug/zplug/base/sources/gh-r.zsh	/^__zplug::sources::gh-r::update()$/;"	f
__zplug::sources::gist::check	src/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::check()$/;"	f
__zplug::sources::gist::check	src/zplug/repos/zplug/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::check()$/;"	f
__zplug::sources::gist::get_url	src/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::get_url()$/;"	f
__zplug::sources::gist::get_url	src/zplug/repos/zplug/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::get_url()$/;"	f
__zplug::sources::gist::install	src/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::install()$/;"	f
__zplug::sources::gist::install	src/zplug/repos/zplug/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::install()$/;"	f
__zplug::sources::gist::load_command	src/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::load_command()$/;"	f
__zplug::sources::gist::load_command	src/zplug/repos/zplug/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::load_command()$/;"	f
__zplug::sources::gist::load_plugin	src/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::load_plugin()$/;"	f
__zplug::sources::gist::load_plugin	src/zplug/repos/zplug/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::load_plugin()$/;"	f
__zplug::sources::gist::load_theme	src/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::load_theme()$/;"	f
__zplug::sources::gist::load_theme	src/zplug/repos/zplug/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::load_theme()$/;"	f
__zplug::sources::gist::update	src/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::update()$/;"	f
__zplug::sources::gist::update	src/zplug/repos/zplug/zplug/base/sources/gist.zsh	/^__zplug::sources::gist::update()$/;"	f
__zplug::sources::github::check	src/zplug/base/sources/github.zsh	/^__zplug::sources::github::check()$/;"	f
__zplug::sources::github::check	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^__zplug::sources::github::check()$/;"	f
__zplug::sources::github::get_url	src/zplug/base/sources/github.zsh	/^__zplug::sources::github::get_url()$/;"	f
__zplug::sources::github::get_url	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^__zplug::sources::github::get_url()$/;"	f
__zplug::sources::github::install	src/zplug/base/sources/github.zsh	/^__zplug::sources::github::install()$/;"	f
__zplug::sources::github::install	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^__zplug::sources::github::install()$/;"	f
__zplug::sources::github::load_command	src/zplug/base/sources/github.zsh	/^__zplug::sources::github::load_command()$/;"	f
__zplug::sources::github::load_command	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^__zplug::sources::github::load_command()$/;"	f
__zplug::sources::github::load_plugin	src/zplug/base/sources/github.zsh	/^__zplug::sources::github::load_plugin()$/;"	f
__zplug::sources::github::load_plugin	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^__zplug::sources::github::load_plugin()$/;"	f
__zplug::sources::github::load_theme	src/zplug/base/sources/github.zsh	/^__zplug::sources::github::load_theme()$/;"	f
__zplug::sources::github::load_theme	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^__zplug::sources::github::load_theme()$/;"	f
__zplug::sources::github::update	src/zplug/base/sources/github.zsh	/^__zplug::sources::github::update()$/;"	f
__zplug::sources::github::update	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^__zplug::sources::github::update()$/;"	f
__zplug::sources::gitlab::check	src/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::check()$/;"	f
__zplug::sources::gitlab::check	src/zplug/repos/zplug/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::check()$/;"	f
__zplug::sources::gitlab::get_url	src/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::get_url()$/;"	f
__zplug::sources::gitlab::get_url	src/zplug/repos/zplug/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::get_url()$/;"	f
__zplug::sources::gitlab::install	src/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::install()$/;"	f
__zplug::sources::gitlab::install	src/zplug/repos/zplug/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::install()$/;"	f
__zplug::sources::gitlab::load_command	src/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::load_command()$/;"	f
__zplug::sources::gitlab::load_command	src/zplug/repos/zplug/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::load_command()$/;"	f
__zplug::sources::gitlab::load_plugin	src/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::load_plugin()$/;"	f
__zplug::sources::gitlab::load_plugin	src/zplug/repos/zplug/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::load_plugin()$/;"	f
__zplug::sources::gitlab::load_theme	src/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::load_theme()$/;"	f
__zplug::sources::gitlab::load_theme	src/zplug/repos/zplug/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::load_theme()$/;"	f
__zplug::sources::gitlab::update	src/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::update()$/;"	f
__zplug::sources::gitlab::update	src/zplug/repos/zplug/zplug/base/sources/gitlab.zsh	/^__zplug::sources::gitlab::update()$/;"	f
__zplug::sources::local::check	src/zplug/base/sources/local.zsh	/^__zplug::sources::local::check()$/;"	f
__zplug::sources::local::check	src/zplug/repos/zplug/zplug/base/sources/local.zsh	/^__zplug::sources::local::check()$/;"	f
__zplug::sources::local::load_command	src/zplug/base/sources/local.zsh	/^__zplug::sources::local::load_command()$/;"	f
__zplug::sources::local::load_command	src/zplug/repos/zplug/zplug/base/sources/local.zsh	/^__zplug::sources::local::load_command()$/;"	f
__zplug::sources::local::load_plugin	src/zplug/base/sources/local.zsh	/^__zplug::sources::local::load_plugin()$/;"	f
__zplug::sources::local::load_plugin	src/zplug/repos/zplug/zplug/base/sources/local.zsh	/^__zplug::sources::local::load_plugin()$/;"	f
__zplug::sources::local::load_theme	src/zplug/base/sources/local.zsh	/^__zplug::sources::local::load_theme()$/;"	f
__zplug::sources::local::load_theme	src/zplug/repos/zplug/zplug/base/sources/local.zsh	/^__zplug::sources::local::load_theme()$/;"	f
__zplug::sources::oh-my-zsh::check	src/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::check()$/;"	f
__zplug::sources::oh-my-zsh::check	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::check()$/;"	f
__zplug::sources::oh-my-zsh::get_url	src/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::get_url()$/;"	f
__zplug::sources::oh-my-zsh::get_url	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::get_url()$/;"	f
__zplug::sources::oh-my-zsh::install	src/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::install()$/;"	f
__zplug::sources::oh-my-zsh::install	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::install()$/;"	f
__zplug::sources::oh-my-zsh::load_plugin	src/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::load_plugin()$/;"	f
__zplug::sources::oh-my-zsh::load_plugin	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::load_plugin()$/;"	f
__zplug::sources::oh-my-zsh::load_theme	src/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::load_theme()$/;"	f
__zplug::sources::oh-my-zsh::load_theme	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::load_theme()$/;"	f
__zplug::sources::oh-my-zsh::update	src/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::update()$/;"	f
__zplug::sources::oh-my-zsh::update	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^__zplug::sources::oh-my-zsh::update()$/;"	f
__zplug::sources::prezto::check	src/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::check()$/;"	f
__zplug::sources::prezto::check	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::check()$/;"	f
__zplug::sources::prezto::get_url	src/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::get_url()$/;"	f
__zplug::sources::prezto::get_url	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::get_url()$/;"	f
__zplug::sources::prezto::install	src/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::install()$/;"	f
__zplug::sources::prezto::install	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::install()$/;"	f
__zplug::sources::prezto::load_plugin	src/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::load_plugin()$/;"	f
__zplug::sources::prezto::load_plugin	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::load_plugin()$/;"	f
__zplug::sources::prezto::update	src/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::update()$/;"	f
__zplug::sources::prezto::update	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^__zplug::sources::prezto::update()$/;"	f
__zplug::utils::ansi::cursor_up	src/zplug/base/utils/ansi.zsh	/^__zplug::utils::ansi::cursor_up()$/;"	f
__zplug::utils::ansi::cursor_up	src/zplug/repos/zplug/zplug/base/utils/ansi.zsh	/^__zplug::utils::ansi::cursor_up()$/;"	f
__zplug::utils::ansi::erace_current_line	src/zplug/base/utils/ansi.zsh	/^__zplug::utils::ansi::erace_current_line()$/;"	f
__zplug::utils::ansi::erace_current_line	src/zplug/repos/zplug/zplug/base/utils/ansi.zsh	/^__zplug::utils::ansi::erace_current_line()$/;"	f
__zplug::utils::ansi::remove	src/zplug/base/utils/ansi.zsh	/^__zplug::utils::ansi::remove()$/;"	f
__zplug::utils::ansi::remove	src/zplug/repos/zplug/zplug/base/utils/ansi.zsh	/^__zplug::utils::ansi::remove()$/;"	f
__zplug::utils::awk::available	src/zplug/base/utils/awk.zsh	/^__zplug::utils::awk::available()$/;"	f
__zplug::utils::awk::available	src/zplug/repos/zplug/zplug/base/utils/awk.zsh	/^__zplug::utils::awk::available()$/;"	f
__zplug::utils::awk::ltsv	src/zplug/base/utils/awk.zsh	/^__zplug::utils::awk::ltsv()$/;"	f
__zplug::utils::awk::ltsv	src/zplug/repos/zplug/zplug/base/utils/awk.zsh	/^__zplug::utils::awk::ltsv()$/;"	f
__zplug::utils::awk::path	src/zplug/base/utils/awk.zsh	/^__zplug::utils::awk::path()$/;"	f
__zplug::utils::awk::path	src/zplug/repos/zplug/zplug/base/utils/awk.zsh	/^__zplug::utils::awk::path()$/;"	f
__zplug::utils::git::checkout	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::checkout()$/;"	f
__zplug::utils::git::checkout	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::checkout()$/;"	f
__zplug::utils::git::clone	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::clone()$/;"	f
__zplug::utils::git::clone	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::clone()$/;"	f
__zplug::utils::git::get_head_branch_name	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_head_branch_name()$/;"	f
__zplug::utils::git::get_head_branch_name	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_head_branch_name()$/;"	f
__zplug::utils::git::get_remote_name	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_remote_name()$/;"	f
__zplug::utils::git::get_remote_name	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_remote_name()$/;"	f
__zplug::utils::git::get_remote_state	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_remote_state()$/;"	f
__zplug::utils::git::get_remote_state	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_remote_state()$/;"	f
__zplug::utils::git::get_state	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_state()$/;"	f
__zplug::utils::git::get_state	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::get_state()$/;"	f
__zplug::utils::git::have_cloned	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::have_cloned()$/;"	f
__zplug::utils::git::have_cloned	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::have_cloned()$/;"	f
__zplug::utils::git::merge	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::merge()$/;"	f
__zplug::utils::git::merge	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::merge()$/;"	f
__zplug::utils::git::remote_url	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::remote_url()$/;"	f
__zplug::utils::git::remote_url	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::remote_url()$/;"	f
__zplug::utils::git::status	src/zplug/base/utils/git.zsh	/^__zplug::utils::git::status()$/;"	f
__zplug::utils::git::status	src/zplug/repos/zplug/zplug/base/utils/git.zsh	/^__zplug::utils::git::status()$/;"	f
__zplug::utils::omz::depends	src/zplug/base/utils/omz.zsh	/^__zplug::utils::omz::depends()$/;"	f
__zplug::utils::omz::depends	src/zplug/repos/zplug/zplug/base/utils/omz.zsh	/^__zplug::utils::omz::depends()$/;"	f
__zplug::utils::prezto::depends	src/zplug/base/utils/prezto.zsh	/^__zplug::utils::prezto::depends()$/;"	f
__zplug::utils::prezto::depends	src/zplug/repos/zplug/zplug/base/utils/prezto.zsh	/^__zplug::utils::prezto::depends()$/;"	f
__zplug::utils::releases::get	src/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get()$/;"	f
__zplug::utils::releases::get	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get()$/;"	f
__zplug::utils::releases::get_latest	src/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get_latest()$/;"	f
__zplug::utils::releases::get_latest	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get_latest()$/;"	f
__zplug::utils::releases::get_state	src/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get_state()$/;"	f
__zplug::utils::releases::get_state	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get_state()$/;"	f
__zplug::utils::releases::get_url	src/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get_url()$/;"	f
__zplug::utils::releases::get_url	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::get_url()$/;"	f
__zplug::utils::releases::index	src/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::index()$/;"	f
__zplug::utils::releases::index	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::index()$/;"	f
__zplug::utils::releases::is_64	src/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::is_64()$/;"	f
__zplug::utils::releases::is_64	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::is_64()$/;"	f
__zplug::utils::releases::is_arm	src/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::is_arm()$/;"	f
__zplug::utils::releases::is_arm	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^__zplug::utils::releases::is_arm()$/;"	f
__zplug::utils::shell::cd	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::cd()$/;"	f
__zplug::utils::shell::cd	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::cd()$/;"	f
__zplug::utils::shell::eval	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::eval()$/;"	f
__zplug::utils::shell::eval	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::eval()$/;"	f
__zplug::utils::shell::expand_glob	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::expand_glob()$/;"	f
__zplug::utils::shell::expand_glob	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::expand_glob()$/;"	f
__zplug::utils::shell::getopts	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::getopts()$/;"	f
__zplug::utils::shell::getopts	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::getopts()$/;"	f
__zplug::utils::shell::glob2regexp	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::glob2regexp()$/;"	f
__zplug::utils::shell::glob2regexp	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::glob2regexp()$/;"	f
__zplug::utils::shell::is_atty	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::is_atty()$/;"	f
__zplug::utils::shell::is_atty	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::is_atty()$/;"	f
__zplug::utils::shell::json_escape	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::json_escape()$/;"	f
__zplug::utils::shell::json_escape	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::json_escape()$/;"	f
__zplug::utils::shell::pipestatus	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::pipestatus()$/;"	f
__zplug::utils::shell::pipestatus	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::pipestatus()$/;"	f
__zplug::utils::shell::remove_deadlinks	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::remove_deadlinks()$/;"	f
__zplug::utils::shell::remove_deadlinks	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::remove_deadlinks()$/;"	f
__zplug::utils::shell::search_commands	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::search_commands()$/;"	f
__zplug::utils::shell::search_commands	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::search_commands()$/;"	f
__zplug::utils::shell::sudo	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::sudo()$/;"	f
__zplug::utils::shell::sudo	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::sudo()$/;"	f
__zplug::utils::shell::unansi	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::unansi()$/;"	f
__zplug::utils::shell::unansi	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::unansi()$/;"	f
__zplug::utils::shell::zglob	src/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::zglob()$/;"	f
__zplug::utils::shell::zglob	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^__zplug::utils::shell::zglob()$/;"	f
__zplug::utils::yaml::parser	src/zplug/base/utils/yaml.zsh	/^__zplug::utils::yaml::parser()$/;"	f
__zplug::utils::yaml::parser	src/zplug/repos/zplug/zplug/base/utils/yaml.zsh	/^__zplug::utils::yaml::parser()$/;"	f
__zplug::utils::yaml::tokenizer	src/zplug/base/utils/yaml.zsh	/^__zplug::utils::yaml::tokenizer()$/;"	f
__zplug::utils::yaml::tokenizer	src/zplug/repos/zplug/zplug/base/utils/yaml.zsh	/^__zplug::utils::yaml::tokenizer()$/;"	f
_accept-line	shells/general/aliases.bash	/^function _accept-line() {$/;"	f
_accept-line	shells/zsh/aliases.zsh	/^function _accept-line() {$/;"	f
_add_plugin_to_tmux_conf	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^_add_plugin_to_tmux_conf() {$/;"	f
_anchor_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef int _anchor_node(self, object node) except 0:$/;"	m	class:CEmitter
_bdist_rpm	meta/dotbot/lib/pyyaml/setup.py	/^from distutils.command.bdist_rpm import bdist_rpm as _bdist_rpm$/;"	x
_bit_byte	src/dev/tmux/compat/bitstring.h	/^#define	_bit_byte(/;"	d
_bit_mask	src/dev/tmux/compat/bitstring.h	/^#define	_bit_mask(/;"	d
_build_ext	meta/dotbot/lib/pyyaml/setup.py	/^            from Pyrex.Distutils import build_ext as _build_ext$/;"	x
_build_ext	meta/dotbot/lib/pyyaml/setup.py	/^        from Cython.Distutils import build_ext as _build_ext$/;"	x
_build_ext	meta/dotbot/lib/pyyaml/setup.py	/^from distutils.command.build_ext import build_ext as _build_ext$/;"	x
_clean	meta/dotbot/plugins/clean.py	/^    def _clean(self, target, force):$/;"	m	class:Clean
_clone_the_plugin	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^_clone_the_plugin() {$/;"	f
_color	meta/dotbot/dotbot/messenger/messenger.py	/^    def _color(self, level):$/;"	m	class:Messenger
_compare_emitters	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def _compare_emitters(data, verbose):$/;"	f
_compare_emitters	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def _compare_emitters(data, verbose):$/;"	f
_compare_events	meta/dotbot/lib/pyyaml/tests/lib/test_emitter.py	/^def _compare_events(events1, events2):$/;"	f
_compare_events	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def _compare_events(events1, events2, full=False):$/;"	f
_compare_events	meta/dotbot/lib/pyyaml/tests/lib3/test_emitter.py	/^def _compare_events(events1, events2):$/;"	f
_compare_events	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def _compare_events(events1, events2, full=False):$/;"	f
_compare_nodes	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def _compare_nodes(node1, node2):$/;"	f
_compare_nodes	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def _compare_nodes(node1, node2):$/;"	f
_compare_parsers	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def _compare_parsers(py_data, c_data, verbose):$/;"	f
_compare_parsers	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def _compare_parsers(py_data, c_data, verbose):$/;"	f
_compare_scanners	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def _compare_scanners(py_data, c_data, verbose):$/;"	f
_compare_scanners	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def _compare_scanners(py_data, c_data, verbose):$/;"	f
_compose_document	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _compose_document(self):$/;"	m	class:CParser
_compose_mapping_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef _compose_mapping_node(self, object anchor):$/;"	m	class:CParser
_compose_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _compose_node(self, object parent, object index):$/;"	m	class:CParser
_compose_scalar_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef _compose_scalar_node(self, object anchor):$/;"	m	class:CParser
_compose_sequence_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef _compose_sequence_node(self, object anchor):$/;"	m	class:CParser
_convert_node	meta/dotbot/lib/pyyaml/tests/lib/test_resolver.py	/^def _convert_node(node):$/;"	f
_convert_node	meta/dotbot/lib/pyyaml/tests/lib3/test_resolver.py	/^def _convert_node(node):$/;"	f
_convert_structure	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def _convert_structure(loader):$/;"	f
_convert_structure	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def _convert_structure(loader):$/;"	f
_count_dollars_before_index	src/dev/ninja/misc/ninja_syntax.py	/^    def _count_dollars_before_index(self, s, i):$/;"	m	class:Writer
_create	meta/dotbot/plugins/link.py	/^    def _create(self, path):$/;"	m	class:Link
_default_source	meta/dotbot/plugins/link.py	/^    def _default_source(self, destination, source):$/;"	m	class:Link
_delete	meta/dotbot/plugins/link.py	/^    def _delete(self, source, path, relative, force):$/;"	m	class:Link
_directive	meta/dotbot/plugins/clean.py	/^    _directive = 'clean'$/;"	v	class:Clean
_directive	meta/dotbot/plugins/link.py	/^    _directive = 'link'$/;"	v	class:Link
_directive	meta/dotbot/plugins/shell.py	/^    _directive = 'shell'$/;"	v	class:Shell
_emitter_error	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _emitter_error(self):$/;"	m	class:CEmitter
_event_to_object	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _event_to_object(self, yaml_event_t *event):$/;"	m	class:CParser
_exists	meta/dotbot/plugins/link.py	/^    def _exists(self, path):$/;"	m	class:Link
_expand	src/dev/ninja/configure.py	/^    def _expand(self, str, local_vars={}):$/;"	m	class:Bootstrap
_expand_paths	src/dev/ninja/configure.py	/^    def _expand_paths(self, paths):$/;"	m	class:Bootstrap
_fatal_error_abort	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_fatal_error_abort() {$/;"	f
_has_emacs_mode_keys	terminals/tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^_has_emacs_mode_keys() {$/;"	f
_history-substring-search-begin	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-begin() {$/;"	f
_history-substring-search-down-buffer	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-down-buffer() {$/;"	f
_history-substring-search-down-history	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-down-history() {$/;"	f
_history-substring-search-down-search	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-down-search() {$/;"	f
_history-substring-search-end	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-end() {$/;"	f
_history-substring-search-found	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-found() {$/;"	f
_history-substring-search-has-next	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-has-next() {$/;"	f
_history-substring-search-has-prev	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-has-prev() {$/;"	f
_history-substring-search-not-found	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-not-found() {$/;"	f
_history-substring-search-up-buffer	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-up-buffer() {$/;"	f
_history-substring-search-up-history	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-up-history() {$/;"	f
_history-substring-search-up-search	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history-substring-search-up-search() {$/;"	f
_history_substring_search_matches=	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^  _history_substring_search_matches=()$/;"	f
_history_substring_search_process_raw_matches	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^_history_substring_search_process_raw_matches() {$/;"	f
_history_substring_search_query_parts=	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^    _history_substring_search_query_parts=()$/;"	f
_history_substring_search_raw_matches=	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^    _history_substring_search_raw_matches=()$/;"	f
_history_substring_search_unique_filter=	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^  _history_substring_search_unique_filter=()$/;"	f
_in_directory	meta/dotbot/plugins/clean.py	/^    def _in_directory(self, path, directory):$/;"	m	class:Clean
_instances	meta/dotbot/dotbot/util/singleton.py	/^    _instances = {}$/;"	v	class:Singleton
_is_link	meta/dotbot/plugins/link.py	/^    def _is_link(self, path):$/;"	m	class:Link
_line	src/dev/ninja/misc/ninja_syntax.py	/^    def _line(self, text, indent=0):$/;"	m	class:Writer
_link	meta/dotbot/plugins/link.py	/^    def _link(self, source, link_name, relative):$/;"	m	class:Link
_link_destination	meta/dotbot/plugins/link.py	/^    def _link_destination(self, path):$/;"	m	class:Link
_load_code	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^def _load_code(expression):$/;"	f
_load_code	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^def _load_code(expression):$/;"	f
_load_plugins	meta/dotbot/dotbot/dispatcher.py	/^    def _load_plugins(self):$/;"	m	class:Dispatcher
_make_canonical_loader	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def _make_canonical_loader():$/;"	f
_make_canonical_loader	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def _make_canonical_loader():$/;"	f
_make_loader	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def _make_loader():$/;"	f
_make_loader	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def _make_loader():$/;"	f
_make_objects	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^def _make_objects():$/;"	f
_make_objects	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^def _make_objects():$/;"	f
_make_path_loader_and_dumper	meta/dotbot/lib/pyyaml/tests/lib/test_resolver.py	/^def _make_path_loader_and_dumper():$/;"	f
_make_path_loader_and_dumper	meta/dotbot/lib/pyyaml/tests/lib3/test_resolver.py	/^def _make_path_loader_and_dumper():$/;"	f
_make_spec_file	meta/dotbot/lib/pyyaml/setup.py	/^    def _make_spec_file(self):$/;"	m	class:bdist_rpm
_manual_expansion	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_manual_expansion() {$/;"	f
_mktemp_s	src/dev/ninja/src/test.cc	/^int _mktemp_s(char* templ) {$/;"	f	namespace:__anonf43750740110	typeref:typename:int
_n_unique_strings	src/dev/ninja/misc/write_fake_manifests.py	/^    def _n_unique_strings(self, n):$/;"	m	class:GenRandom
_object_to_event	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef int _object_to_event(self, object event_object, yaml_event_t *event) except 0:$/;"	m	class:CEmitter
_parse	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _parse(self):$/;"	m	class:CParser
_parse_next_event	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef int _parse_next_event(self) except 0:$/;"	m	class:CParser
_parser_error	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _parser_error(self):$/;"	m	class:CParser
_process_clean	meta/dotbot/plugins/clean.py	/^    def _process_clean(self, targets):$/;"	m	class:Clean
_process_commands	meta/dotbot/plugins/shell.py	/^    def _process_commands(self, data):$/;"	m	class:Shell
_process_links	meta/dotbot/plugins/link.py	/^    def _process_links(self, links):$/;"	m	class:Link
_read	meta/dotbot/dotbot/config.py	/^    def _read(self, config_file_path):$/;"	m	class:ConfigReader
_relative_path	meta/dotbot/plugins/link.py	/^    def _relative_path(self, source, destination):$/;"	m	class:Link
_replaces	meta/dotbot/lib/pyyaml/tests/lib/test_tokens.py	/^_replaces = {$/;"	v
_replaces	meta/dotbot/lib/pyyaml/tests/lib3/test_tokens.py	/^_replaces = {$/;"	v
_reset	meta/dotbot/dotbot/messenger/messenger.py	/^    def _reset(self):$/;"	m	class:Messenger
_run_command	src/dev/ninja/configure.py	/^    def _run_command(self, cmdline):$/;"	m	class:Bootstrap
_run_reader	meta/dotbot/lib/pyyaml/tests/lib/test_reader.py	/^def _run_reader(data, verbose):$/;"	f
_run_reader	meta/dotbot/lib/pyyaml/tests/lib3/test_reader.py	/^def _run_reader(data, verbose):$/;"	f
_scan	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _scan(self):$/;"	m	class:CParser
_serialize_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef int _serialize_node(self, object node, object parent, object index) except 0:$/;"	m	class:CEmitter
_serialize_value	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^def _serialize_value(data):$/;"	f
_serialize_value	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^def _serialize_value(data):$/;"	f
_set_up	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def _set_up():$/;"	f
_set_up	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def _set_up():$/;"	f
_setup_context	meta/dotbot/dotbot/dispatcher.py	/^    def _setup_context(self, base_directory):$/;"	m	class:Dispatcher
_shell_escape	src/dev/ninja/configure.py	/^    def _shell_escape(self, path):$/;"	m	class:Bootstrap
_sourced_files	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_sourced_files() {$/;"	f
_tear_down	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def _tear_down():$/;"	f
_tear_down	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def _tear_down():$/;"	f
_tmux_conf_contents	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tmux_conf_contents() {$/;"	f
_tmuxinator	shells/zsh/completion/tmuxinator.zsh	/^_tmuxinator() {$/;"	f
_token_to_object	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    cdef object _token_to_object(self, yaml_token_t *token):$/;"	m	class:CParser
_tpm_path	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tpm_path() {$/;"	f
_unicode_open	meta/dotbot/lib/pyyaml/tests/lib/test_input_output.py	/^def _unicode_open(file, encoding, errors='strict'):$/;"	f
_unique_string	src/dev/ninja/misc/write_fake_manifests.py	/^    def _unique_string(self, seen, avg_options=1.3, p_suffix=0.1):$/;"	m	class:GenRandom
_z	shells/general/z.bash	/^_z() {$/;"	f
_z	shells/zsh/z.zsh	/^_z() {$/;"	f
_z_dirs	shells/general/z.bash	/^    _z_dirs () {$/;"	f
_z_dirs	shells/zsh/z.zsh	/^    _z_dirs () {$/;"	f
_z_precmd	shells/general/z.bash	/^            _z_precmd() {$/;"	f
_z_precmd	shells/zsh/z.zsh	/^            _z_precmd() {$/;"	f
_z_zsh_tab_completion	shells/general/z.bash	/^    _z_zsh_tab_completion() {$/;"	f
_z_zsh_tab_completion	shells/zsh/z.zsh	/^    _z_zsh_tab_completion() {$/;"	f
_zplug_yaml=	src/zplug/base/utils/yaml.zsh	/^    _zplug_yaml=()$/;"	f
_zplug_yaml=	src/zplug/repos/zplug/zplug/base/utils/yaml.zsh	/^    _zplug_yaml=()$/;"	f
_zsh_autosuggest_accept	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_accept	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_async_pty_create	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_pty_create() {$/;"	f
_zsh_autosuggest_async_pty_create	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_pty_create() {$/;"	f
_zsh_autosuggest_async_pty_destroy	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_pty_destroy() {$/;"	f
_zsh_autosuggest_async_pty_destroy	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_pty_destroy() {$/;"	f
_zsh_autosuggest_async_pty_recreate	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_pty_recreate() {$/;"	f
_zsh_autosuggest_async_pty_recreate	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_pty_recreate() {$/;"	f
_zsh_autosuggest_async_request	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_request	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_response	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_response	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_server	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_server() {$/;"	f
_zsh_autosuggest_async_server	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_server() {$/;"	f
_zsh_autosuggest_async_start	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_start() {$/;"	f
_zsh_autosuggest_async_start	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_start() {$/;"	f
_zsh_autosuggest_bind_widget	src/zplug/repos/zsh-users/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widget	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widgets	src/zplug/repos/zsh-users/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_bind_widgets	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_clear	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_clear	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_disable	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_disable	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_enable	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_enable	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_escape_command	src/zplug/repos/zsh-users/zsh-autosuggestions/src/util.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_escape_command	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_execute	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_execute	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_feature_detect_zpty_returns_fd	src/zplug/repos/zsh-users/zsh-autosuggestions/src/features.zsh	/^_zsh_autosuggest_feature_detect_zpty_returns_fd() {$/;"	f
_zsh_autosuggest_feature_detect_zpty_returns_fd	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_feature_detect_zpty_returns_fd() {$/;"	f
_zsh_autosuggest_fetch	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_get_bind_count	src/zplug/repos/zsh-users/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_get_bind_count() {$/;"	f
_zsh_autosuggest_get_bind_count	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_get_bind_count() {$/;"	f
_zsh_autosuggest_highlight_apply	src/zplug/repos/zsh-users/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_apply	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_reset	src/zplug/repos/zsh-users/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_highlight_reset	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_incr_bind_count	src/zplug/repos/zsh-users/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_incr_bind_count	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_invoke_original_widget	src/zplug/repos/zsh-users/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_invoke_original_widget	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_modify	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_modify	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_partial_accept	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_partial_accept	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_start	src/zplug/repos/zsh-users/zsh-autosuggestions/src/start.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_start	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_strategy_default	src/zplug/repos/zsh-users/zsh-autosuggestions/src/strategies/default.zsh	/^_zsh_autosuggest_strategy_default() {$/;"	f
_zsh_autosuggest_strategy_default	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_default() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	src/zplug/repos/zsh-users/zsh-autosuggestions/src/strategies/match_prev_cmd.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_suggest	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_suggest	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_toggle	src/zplug/repos/zsh-users/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_autosuggest_toggle	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_highlight	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^  _zsh_highlight() {$/;"	f
_zsh_highlight	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight()$/;"	f
_zsh_highlight_add_highlight	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/inheritance.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/generate.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_apply_zle_highlight	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_apply_zle_highlight() {$/;"	f
_zsh_highlight_bind_widgets	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^  _zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_bind_widgets	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_brackets_match	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_brackets_match()$/;"	f
_zsh_highlight_buffer_modified	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_buffer_modified()$/;"	f
_zsh_highlight_call_widget	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_call_widget()$/;"	f
_zsh_highlight_cursor_moved	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_cursor_moved()$/;"	f
_zsh_highlight_highlighter_brackets_paint	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_paint()$/;"	f
_zsh_highlight_highlighter_brackets_predicate	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_predicate()$/;"	f
_zsh_highlight_highlighter_cursor_paint	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_paint()$/;"	f
_zsh_highlight_highlighter_cursor_predicate	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_predicate()$/;"	f
_zsh_highlight_highlighter_line_paint	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_paint()$/;"	f
_zsh_highlight_highlighter_line_predicate	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_predicate()$/;"	f
_zsh_highlight_highlighter_main_paint	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_paint()$/;"	f
_zsh_highlight_highlighter_main_predicate	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_predicate()$/;"	f
_zsh_highlight_highlighter_pattern_paint	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_paint()$/;"	f
_zsh_highlight_highlighter_pattern_predicate	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_predicate()$/;"	f
_zsh_highlight_highlighter_regexp_paint	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_paint()$/;"	f
_zsh_highlight_highlighter_regexp_predicate	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_predicate()$/;"	f
_zsh_highlight_highlighter_root_paint	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_paint()$/;"	f
_zsh_highlight_highlighter_root_predicate	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_predicate()$/;"	f
_zsh_highlight_load_highlighters	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_load_highlighters()$/;"	f
_zsh_highlight_main__command_type_cache=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^  _zsh_highlight_main__command_type_cache=()$/;"	f
_zsh_highlight_main__is_redirection	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_redirection() {$/;"	f
_zsh_highlight_main__precmd_hook	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__precmd_hook() {$/;"	f
_zsh_highlight_main__resolve_alias	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__resolve_alias() {$/;"	f
_zsh_highlight_main__stack_pop	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__stack_pop() {$/;"	f
_zsh_highlight_main__type	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__type() {$/;"	f
_zsh_highlight_main_add_many_region_highlights	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_many_region_highlights() {$/;"	f
_zsh_highlight_main_add_region_highlight	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_region_highlight() {$/;"	f
_zsh_highlight_main_highlighter_check_assign	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_assign()$/;"	f
_zsh_highlight_main_highlighter_check_path	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_path()$/;"	f
_zsh_highlight_main_highlighter_expand_path	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_expand_path()$/;"	f
_zsh_highlight_main_highlighter_highlight_argument	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_argument()$/;"	f
_zsh_highlight_main_highlighter_highlight_backtick	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_backtick()$/;"	f
_zsh_highlight_main_highlighter_highlight_dollar_quote	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_dollar_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_double_quote	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_double_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_path_separators	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_path_separators()$/;"	f
_zsh_highlight_main_highlighter_highlight_single_quote	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_single_quote()$/;"	f
_zsh_highlight_pattern_highlighter_loop	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_pattern_highlighter_loop()$/;"	f
_zsh_highlight_preexec_hook	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_preexec_hook()$/;"	f
_zsh_highlight_regexp_highlighter_loop	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_regexp_highlighter_loop()$/;"	f
a	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/off-by-one.zsh	/^alias a=A$/;"	a
a displayed suggestion	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/highlight_style_spec.rb	/^describe 'a displayed suggestion' do$/;"	d
a modification to the widget lists	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^describe 'a modification to the widget lists' do$/;"	d
a multi-line suggestion	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/multi_line_spec.rb	/^describe 'a multi-line suggestion' do$/;"	d
a running zpty command	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/client_zpty_spec.rb	/^describe 'a running zpty command' do$/;"	d
a special character in the buffer	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/strategies/special_characters_helper.rb	/^  describe 'a special character in the buffer' do$/;"	d
a suggestion	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/buffer_max_size_spec.rb	/^describe 'a suggestion' do$/;"	d
a suggestion for a given prefix	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/strategy_spec.rb	/^describe 'a suggestion for a given prefix' do$/;"	d
a wrapped widget	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/wrapped_widget_spec.rb	/^describe 'a wrapped widget' do$/;"	d
a zle widget	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^describe 'a zle widget' do$/;"	d
a,	editors/vim/config/plugins/all.vim	/^	omap <silent> a, <Plug>SidewaysArgumentTextobjA$/;"	m
a,	editors/vim/config/plugins/all.vim	/^	xmap <silent> a, <Plug>SidewaysArgumentTextobjA$/;"	m
ab	editors/vim/config/plugins/all.vim	/^	omap <silent> ab <Plug>(textobj-multiblock-a)$/;"	m
ab	editors/vim/config/plugins/all.vim	/^	xmap <silent> ab <Plug>(textobj-multiblock-a)$/;"	m
abs_builddir	src/dev/tmux/Makefile	/^abs_builddir = \/home\/hle\/.dotfiles\/src\/dev\/tmux$/;"	m
abs_builddir	src/dev/tmux/Makefile.in	/^abs_builddir = @abs_builddir@$/;"	m
abs_srcdir	src/dev/tmux/Makefile	/^abs_srcdir = \/home\/hle\/.dotfiles\/src\/dev\/tmux$/;"	m
abs_srcdir	src/dev/tmux/Makefile.in	/^abs_srcdir = @abs_srcdir@$/;"	m
abs_top_builddir	src/dev/tmux/Makefile	/^abs_top_builddir = \/home\/hle\/.dotfiles\/src\/dev\/tmux$/;"	m
abs_top_builddir	src/dev/tmux/Makefile.in	/^abs_top_builddir = @abs_top_builddir@$/;"	m
abs_top_srcdir	src/dev/tmux/Makefile	/^abs_top_srcdir = \/home\/hle\/.dotfiles\/src\/dev\/tmux$/;"	m
abs_top_srcdir	src/dev/tmux/Makefile.in	/^abs_top_srcdir = @abs_top_srcdir@$/;"	m
ac_ct_CC	src/dev/tmux/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/dev/tmux/Makefile.in	/^ac_ct_CC = @ac_ct_CC@$/;"	m
ac_fn_c_check_decl	src/dev/tmux/configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	src/dev/tmux/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	src/dev/tmux/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	src/dev/tmux/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	src/dev/tmux/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	src/dev/tmux/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	src/dev/tmux/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	src/dev/tmux/configure	/^ac_fn_c_try_run ()$/;"	f
acs	src/dev/tmux/tmux.h	/^	char		 acs[UCHAR_MAX + 1][2];$/;"	m	struct:tty_term	typeref:typename:char[][2]
active	src/dev/tmux/tmux.h	/^	struct window_pane *active;$/;"	m	struct:window	typeref:struct:window_pane *
active_point	src/dev/tmux/tmux.h	/^	u_int		 active_point;$/;"	m	struct:window_pane	typeref:typename:u_int
active_style	src/dev/tmux/tmux.h	/^	struct grid_cell active_style;$/;"	m	struct:window	typeref:struct:grid_cell
activity_time	src/dev/tmux/tmux.h	/^	struct timeval	 activity_time;$/;"	m	struct:client	typeref:struct:timeval
activity_time	src/dev/tmux/tmux.h	/^	struct timeval	 activity_time;$/;"	m	struct:session	typeref:struct:timeval
activity_time	src/dev/tmux/tmux.h	/^	struct timeval	 activity_time;$/;"	m	struct:window	typeref:struct:timeval
add	src/dev/tmux/mdoc2man.awk	/^function add(str) {$/;"	f
add_constructor	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def add_constructor(tag, constructor, Loader=Loader):$/;"	f
add_constructor	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    add_constructor = classmethod(add_constructor)$/;"	v	class:BaseConstructor
add_constructor	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def add_constructor(cls, tag, constructor):$/;"	m	class:BaseConstructor
add_constructor	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def add_constructor(tag, constructor, Loader=Loader):$/;"	f
add_constructor	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def add_constructor(cls, tag, constructor):$/;"	m	class:BaseConstructor
add_files_to_gitignore	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^add_files_to_gitignore() {$/;"	f
add_implicit_resolver	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def add_implicit_resolver(tag, regexp, first=None,$/;"	f
add_implicit_resolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    add_implicit_resolver = classmethod(add_implicit_resolver)$/;"	v	class:BaseResolver
add_implicit_resolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    def add_implicit_resolver(cls, tag, regexp, first):$/;"	m	class:BaseResolver
add_implicit_resolver	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def add_implicit_resolver(tag, regexp, first=None,$/;"	f
add_implicit_resolver	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    def add_implicit_resolver(cls, tag, regexp, first):$/;"	m	class:BaseResolver
add_indent	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def add_indent(self, column):$/;"	m	class:Scanner
add_indent	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def add_indent(self, column):$/;"	m	class:Scanner
add_multi_constructor	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def add_multi_constructor(tag_prefix, multi_constructor, Loader=Loader):$/;"	f
add_multi_constructor	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    add_multi_constructor = classmethod(add_multi_constructor)$/;"	v	class:BaseConstructor
add_multi_constructor	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def add_multi_constructor(cls, tag_prefix, multi_constructor):$/;"	m	class:BaseConstructor
add_multi_constructor	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def add_multi_constructor(tag_prefix, multi_constructor, Loader=Loader):$/;"	f
add_multi_constructor	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def add_multi_constructor(cls, tag_prefix, multi_constructor):$/;"	m	class:BaseConstructor
add_multi_representer	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def add_multi_representer(data_type, multi_representer, Dumper=Dumper):$/;"	f
add_multi_representer	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    add_multi_representer = classmethod(add_multi_representer)$/;"	v	class:BaseRepresenter
add_multi_representer	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def add_multi_representer(cls, data_type, representer):$/;"	m	class:BaseRepresenter
add_multi_representer	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def add_multi_representer(data_type, multi_representer, Dumper=Dumper):$/;"	f
add_multi_representer	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def add_multi_representer(cls, data_type, representer):$/;"	m	class:BaseRepresenter
add_options	meta/dotbot/dotbot/cli.py	/^def add_options(parser):$/;"	f
add_path_resolver	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def add_path_resolver(tag, path, kind=None, Loader=Loader, Dumper=Dumper):$/;"	f
add_path_resolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    add_path_resolver = classmethod(add_path_resolver)$/;"	v	class:BaseResolver
add_path_resolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    def add_path_resolver(cls, tag, path, kind=None):$/;"	m	class:BaseResolver
add_path_resolver	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def add_path_resolver(tag, path, kind=None, Loader=Loader, Dumper=Dumper):$/;"	f
add_path_resolver	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    def add_path_resolver(cls, tag, path, kind=None):$/;"	m	class:BaseResolver
add_representer	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def add_representer(data_type, representer, Dumper=Dumper):$/;"	f
add_representer	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    add_representer = classmethod(add_representer)$/;"	v	class:BaseRepresenter
add_representer	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def add_representer(cls, data_type, representer):$/;"	m	class:BaseRepresenter
add_representer	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def add_representer(data_type, representer, Dumper=Dumper):$/;"	f
add_representer	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def add_representer(cls, data_type, representer):$/;"	m	class:BaseRepresenter
af	editors/vim/config/plugins/all.vim	/^	omap <silent> af <Plug>(textobj-function-a)$/;"	m
af	editors/vim/config/plugins/all.vim	/^	xmap <silent> af <Plug>(textobj-function-a)$/;"	m
aix_post_process_depfile	src/dev/tmux/etc/depcomp	/^aix_post_process_depfile ()$/;"	f
alerts_action_applies	src/dev/tmux/alerts.c	/^alerts_action_applies(struct winlink *wl, const char *name)$/;"	f	typeref:typename:int	file:
alerts_callback	src/dev/tmux/alerts.c	/^alerts_callback(__unused int fd, __unused short events, __unused void *arg)$/;"	f	typeref:typename:void	file:
alerts_check_activity	src/dev/tmux/alerts.c	/^alerts_check_activity(struct window *w)$/;"	f	typeref:typename:int	file:
alerts_check_all	src/dev/tmux/alerts.c	/^alerts_check_all(struct window *w)$/;"	f	typeref:typename:int	file:
alerts_check_bell	src/dev/tmux/alerts.c	/^alerts_check_bell(struct window *w)$/;"	f	typeref:typename:int	file:
alerts_check_session	src/dev/tmux/alerts.c	/^alerts_check_session(struct session *s)$/;"	f	typeref:typename:void
alerts_check_silence	src/dev/tmux/alerts.c	/^alerts_check_silence(struct window *w)$/;"	f	typeref:typename:int	file:
alerts_enabled	src/dev/tmux/alerts.c	/^alerts_enabled(struct window *w, int flags)$/;"	f	typeref:typename:int	file:
alerts_fired	src/dev/tmux/alerts.c	/^static int	alerts_fired;$/;"	v	typeref:typename:int	file:
alerts_queue	src/dev/tmux/alerts.c	/^alerts_queue(struct window *w, int flags)$/;"	f	typeref:typename:void
alerts_queued	src/dev/tmux/tmux.h	/^	int		 alerts_queued;$/;"	m	struct:window	typeref:typename:int
alerts_reset	src/dev/tmux/alerts.c	/^alerts_reset(struct window *w)$/;"	f	typeref:typename:void	file:
alerts_reset_all	src/dev/tmux/alerts.c	/^alerts_reset_all(void)$/;"	f	typeref:typename:void
alerts_set_message	src/dev/tmux/alerts.c	/^alerts_set_message(struct winlink *wl, const char *type, const char *option)$/;"	f	typeref:typename:void	file:
alerts_timer	src/dev/tmux/alerts.c	/^alerts_timer(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
alerts_timer	src/dev/tmux/tmux.h	/^	struct event	 alerts_timer;$/;"	m	struct:window	typeref:struct:event
alias	src/dev/tmux/tmux.h	/^	const char		*alias;$/;"	m	struct:cmd_entry	typeref:typename:const char *
alias1	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^alias alias1="unused expansion"$/;"	a
alias1	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^alias1() {} # to check that it's highlighted as an alias, not as a function$/;"	f
aliases	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    aliases = ['yaml']$/;"	v	class:YAMLLexer
all	src/dev/tmux/Makefile	/^all: all-am$/;"	t
all	src/dev/tmux/Makefile.in	/^all: all-am$/;"	t
all	src/dev/tmux/regress/Makefile	/^all: $(TESTS)$/;"	t
all	src/zplug/Makefile	/^all:$/;"	t
all	src/zplug/repos/zplug/zplug/Makefile	/^all:$/;"	t
all	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^all: $(PLUGIN_TARGET)$/;"	t
all	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^all:$/;"	t
all-am	src/dev/tmux/Makefile	/^all-am: Makefile $(PROGRAMS)$/;"	t
all-am	src/dev/tmux/Makefile.in	/^all-am: Makefile $(PROGRAMS)$/;"	t
all_jobs	src/dev/tmux/job.c	/^struct joblist	all_jobs = LIST_HEAD_INITIALIZER(all_jobs);$/;"	v	typeref:struct:joblist
all_targets	src/dev/ninja/configure.py	/^all_targets = []$/;"	v
all_test_files	terminals/tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^all_test_files() {$/;"	f
all_window_panes	src/dev/tmux/window.c	/^struct window_pane_tree all_window_panes;$/;"	v	typeref:struct:window_pane_tree
am--refresh	src/dev/tmux/Makefile	/^am--refresh: Makefile$/;"	t
am--refresh	src/dev/tmux/Makefile.in	/^am--refresh: Makefile$/;"	t
am__CONFIG_DISTCLEAN_FILES	src/dev/tmux/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__CONFIG_DISTCLEAN_FILES	src/dev/tmux/Makefile.in	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DIST_COMMON	src/dev/tmux/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	src/dev/tmux/Makefile.in	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__aclocal_m4_deps	src/dev/tmux/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	src/dev/tmux/Makefile.in	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__append_1	src/dev/tmux/Makefile	/^am__append_1 = -std=gnu99 -O2$/;"	m
am__append_2	src/dev/tmux/Makefile	/^am__append_2 = -g -Wno-long-long -Wall -W \\$/;"	m
am__append_3	src/dev/tmux/Makefile	/^am__append_3 = -DDEBUG$/;"	m
am__append_4	src/dev/tmux/Makefile	/^am__append_4 = -iquote.$/;"	m
am__can_run_installinfo	src/dev/tmux/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/dev/tmux/Makefile.in	/^am__can_run_installinfo = \\$/;"	m
am__cd	src/dev/tmux/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/dev/tmux/Makefile.in	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	src/dev/tmux/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/dev/tmux/Makefile.in	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	src/dev/tmux/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/dev/tmux/Makefile.in	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	src/dev/tmux/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/dev/tmux/Makefile.in	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	src/dev/tmux/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	src/dev/tmux/Makefile.in	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	src/dev/tmux/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__distuninstallcheck_listfiles	src/dev/tmux/Makefile.in	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	src/dev/tmux/Makefile	/^am__include = include$/;"	m
am__include	src/dev/tmux/Makefile.in	/^am__include = @am__include@$/;"	m
am__installdirs	src/dev/tmux/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__installdirs	src/dev/tmux/Makefile.in	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__is_gnu_make	src/dev/tmux/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	src/dev/tmux/Makefile.in	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	src/dev/tmux/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/dev/tmux/Makefile.in	/^am__leading_dot = @am__leading_dot@$/;"	m
am__make_dryrun	src/dev/tmux/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/dev/tmux/Makefile.in	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/dev/tmux/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/dev/tmux/Makefile.in	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	src/dev/tmux/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/dev/tmux/Makefile.in	/^am__make_running_with_option = \\$/;"	m
am__mv	src/dev/tmux/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/dev/tmux/Makefile.in	/^am__mv = mv -f$/;"	m
am__post_remove_distdir	src/dev/tmux/Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__post_remove_distdir	src/dev/tmux/Makefile.in	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	src/dev/tmux/Makefile	/^am__quote = $/;"	m
am__quote	src/dev/tmux/Makefile.in	/^am__quote = @am__quote@$/;"	m
am__remove_distdir	src/dev/tmux/Makefile	/^am__remove_distdir = \\$/;"	m
am__remove_distdir	src/dev/tmux/Makefile.in	/^am__remove_distdir = \\$/;"	m
am__tagged_files	src/dev/tmux/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/dev/tmux/Makefile.in	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	src/dev/tmux/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/dev/tmux/Makefile.in	/^am__tar = @am__tar@$/;"	m
am__uniquify_input	src/dev/tmux/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/dev/tmux/Makefile.in	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	src/dev/tmux/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/dev/tmux/Makefile.in	/^am__untar = @am__untar@$/;"	m
am__v_CCLD_	src/dev/tmux/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/dev/tmux/Makefile.in	/^am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)$/;"	m
am__v_CCLD_0	src/dev/tmux/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/dev/tmux/Makefile.in	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	src/dev/tmux/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/dev/tmux/Makefile.in	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	src/dev/tmux/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/dev/tmux/Makefile.in	/^am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)$/;"	m
am__v_CC_0	src/dev/tmux/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/dev/tmux/Makefile.in	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	src/dev/tmux/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/dev/tmux/Makefile.in	/^am__v_CC_1 = $/;"	m
am__v_GEN_	src/dev/tmux/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/dev/tmux/Makefile.in	/^am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)$/;"	m
am__v_GEN_0	src/dev/tmux/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/dev/tmux/Makefile.in	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	src/dev/tmux/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/dev/tmux/Makefile.in	/^am__v_GEN_1 = $/;"	m
am__v_P_	src/dev/tmux/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/dev/tmux/Makefile.in	/^am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)$/;"	m
am__v_P_0	src/dev/tmux/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/dev/tmux/Makefile.in	/^am__v_P_0 = false$/;"	m
am__v_P_1	src/dev/tmux/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/dev/tmux/Makefile.in	/^am__v_P_1 = :$/;"	m
am__v_at_	src/dev/tmux/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/dev/tmux/Makefile.in	/^am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)$/;"	m
am__v_at_0	src/dev/tmux/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/dev/tmux/Makefile.in	/^am__v_at_0 = @$/;"	m
am__v_at_1	src/dev/tmux/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/dev/tmux/Makefile.in	/^am__v_at_1 = $/;"	m
an original zle widget	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/original_widget_prefix_spec.rb	/^describe 'an original zle widget' do$/;"	d
analyze_scalar	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def analyze_scalar(self, scalar):$/;"	m	class:Emitter
analyze_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def analyze_scalar(self, scalar):$/;"	m	class:Emitter
anchor_node	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    def anchor_node(self, node):$/;"	m	class:Serializer
anchor_node	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    def anchor_node(self, node):$/;"	m	class:Serializer
areshell	src/dev/tmux/tmux.c	/^areshell(const char *shell)$/;"	f	typeref:typename:int
arg	src/dev/tmux/proc.c	/^	void		 *arg;$/;"	m	struct:tmuxpeer	typeref:typename:void *	file:
arg0	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^        alias arg0$/;"	a
arg0	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^        function arg0$/;"	f
argc	src/dev/tmux/tmux.h	/^	int			  argc;$/;"	m	struct:args	typeref:typename:int
argc	src/dev/tmux/tmux.h	/^	int		 argc;$/;"	m	struct:window_pane	typeref:typename:int
argc	src/dev/tmux/tmux.h	/^	int	argc;$/;"	m	struct:msg_command_data	typeref:typename:int
args	src/dev/ninja/src/browse.py	/^args = parser.parse_args()$/;"	v
args	src/dev/tmux/tmux.h	/^	struct args		*args;$/;"	m	struct:cmd	typeref:struct:args *
args	src/dev/tmux/tmux.h	/^	} args;$/;"	m	struct:cmd_entry	typeref:struct:cmd_entry::__anonc903038b0708
args	src/dev/tmux/tmux.h	/^struct args {$/;"	s
args_cmp	src/dev/tmux/arguments.c	/^args_cmp(struct args_entry *a1, struct args_entry *a2)$/;"	f	typeref:typename:int	file:
args_entry	src/dev/tmux/arguments.c	/^struct args_entry {$/;"	s	file:
args_find	src/dev/tmux/arguments.c	/^args_find(struct args *args, u_char ch)$/;"	f	typeref:struct:args_entry *	file:
args_free	src/dev/tmux/arguments.c	/^args_free(struct args *args)$/;"	f	typeref:typename:void
args_get	src/dev/tmux/arguments.c	/^args_get(struct args *args, u_char ch)$/;"	f	typeref:typename:const char *
args_has	src/dev/tmux/arguments.c	/^args_has(struct args *args, u_char ch)$/;"	f	typeref:typename:int
args_parse	src/dev/tmux/arguments.c	/^args_parse(const char *template, int argc, char **argv)$/;"	f	typeref:struct:args *
args_print	src/dev/tmux/arguments.c	/^args_print(struct args *args)$/;"	f	typeref:typename:char *
args_print_add	src/dev/tmux/arguments.c	/^args_print_add(char **buf, size_t *len, const char *fmt, ...)$/;"	f	typeref:typename:void printflike (3,4)	file:
args_set	src/dev/tmux/arguments.c	/^args_set(struct args *args, u_char ch, const char *value)$/;"	f	typeref:typename:void
args_strtonum	src/dev/tmux/arguments.c	/^args_strtonum(struct args *args, u_char ch, long long minval, long long maxval,$/;"	f	typeref:typename:long long
argument_type	src/dev/ninja/src/hash_map.h	/^  typedef StringPiece argument_type;$/;"	t	struct:std::hash	typeref:typename:StringPiece
argv	src/dev/tmux/tmux.h	/^	char			**argv;$/;"	m	struct:args	typeref:typename:char **
argv	src/dev/tmux/tmux.h	/^	char	       **argv;$/;"	m	struct:window_pane	typeref:typename:char **
arrange	src/dev/tmux/layout-set.c	/^	void	      	(*arrange)(struct window *);$/;"	m	struct:__anonbcfe80ef0108	typeref:typename:void (*)(struct window *)	file:
array	src/dev/tmux/options.c	/^			const char		**array;$/;"	m	struct:options_entry::__anone31179a4010a::__anone31179a40208	typeref:typename:const char **	file:
arraysize	src/dev/tmux/options.c	/^			u_int			  arraysize;$/;"	m	struct:options_entry::__anone31179a4010a::__anone31179a40208	typeref:typename:u_int	file:
as_fn_append	src/dev/tmux/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	src/dev/tmux/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	src/dev/tmux/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	src/dev/tmux/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	src/dev/tmux/config.status	/^as_fn_error ()$/;"	f
as_fn_error	src/dev/tmux/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	src/dev/tmux/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	src/dev/tmux/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	src/dev/tmux/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	src/dev/tmux/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	src/dev/tmux/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	src/dev/tmux/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	src/dev/tmux/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	src/dev/tmux/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	src/dev/tmux/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	src/dev/tmux/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	src/dev/tmux/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	src/dev/tmux/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	src/dev/tmux/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	src/dev/tmux/configure	/^as_fn_unset ()$/;"	f
as_list	src/dev/ninja/misc/ninja_syntax.py	/^def as_list(input):$/;"	f
ascend_resolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    def ascend_resolver(self):$/;"	m	class:BaseResolver
ascend_resolver	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    def ascend_resolver(self):$/;"	m	class:BaseResolver
asprintf	src/dev/tmux/compat/asprintf.c	/^asprintf(char **ret, const char *fmt, ...)$/;"	f	typeref:typename:int
assertion_failures_	src/dev/ninja/src/test.h	/^  int assertion_failures_;$/;"	m	class:testing::Test	typeref:typename:int
attached	src/dev/tmux/tmux.h	/^	u_int		 attached;$/;"	m	struct:session	typeref:typename:u_int
attr	src/dev/tmux/tmux.h	/^			u_char	attr;$/;"	m	struct:grid_cell_entry::__anonc903038b020a::__anonc903038b0308	typeref:typename:u_char
attr	src/dev/tmux/tmux.h	/^	u_short			attr;$/;"	m	struct:grid_cell	typeref:typename:u_short
attributes_fromstring	src/dev/tmux/attributes.c	/^attributes_fromstring(const char *str)$/;"	f	typeref:typename:int
attributes_tostring	src/dev/tmux/attributes.c	/^attributes_tostring(int attr)$/;"	f	typeref:typename:const char *
automatic	src/dev/tmux/paste.c	/^	int		 automatic;$/;"	m	struct:paste_buffer	typeref:typename:int	file:
b	editors/vim/config/plugins/all.vim	/^	nmap <silent> b <Plug>CamelCaseMotion_b$/;"	m
b	editors/vim/config/plugins/all.vim	/^	omap <silent> b <Plug>CamelCaseMotion_b$/;"	m
b	editors/vim/config/plugins/all.vim	/^	xmap <silent> b <Plug>CamelCaseMotion_b$/;"	m
b	src/dev/tmux/tmux.h	/^	u_int		b;$/;"	m	struct:mouse_event	typeref:typename:u_int
b64_ntop	src/dev/tmux/compat/base64.c	/^b64_ntop(src, srclength, target, targsize)$/;"	f
b64_pton	src/dev/tmux/compat/base64.c	/^b64_pton(src, target, targsize)$/;"	f
b:current_syntax	src/dev/ninja/misc/ninja.vim	/^let b:current_syntax = "ninja"$/;"	v
b:did_ftplugin	editors/vim/ftplugin/help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	editors/vim/ftplugin/qf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	editors/vim/ftplugin/yaml.vim	/^let b:did_indent = 1$/;"	v
b:qf_isLoc	editors/vim/ftplugin/qf.vim	/^let b:qf_isLoc = ! empty(getloclist(0))$/;"	v
b:undo_ftplugin	editors/vim/ftplugin/help.vim	/^let b:undo_ftplugin = 'setlocal spell<'$/;"	v
b:undo_ftplugin	editors/vim/ftplugin/qf.vim	/^let b:undo_ftplugin = 'setl fo< com< ofu<'$/;"	v
b:undo_ftplugin	editors/vim/ftplugin/vim.vim	/^	let b:undo_ftplugin .= ' | '$/;"	v
b:undo_ftplugin	editors/vim/ftplugin/vim.vim	/^	let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	editors/vim/ftplugin/vim.vim	/^let b:undo_ftplugin .= 'setl modeline<'$/;"	v
background	src/crouton-clipboard/manifest.json	/^  "background": {$/;"	o
backing	src/dev/tmux/window-copy.c	/^	struct screen	*backing;$/;"	m	struct:window_copy_mode_data	typeref:struct:screen *	file:
backing_written	src/dev/tmux/window-copy.c	/^	int		 backing_written; \/* backing display started *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
base	src/dev/tmux/tmux.h	/^	struct screen	 base;$/;"	m	struct:window_pane	typeref:struct:screen
base_directory	meta/dotbot/dotbot/context.py	/^    def base_directory(self):$/;"	m	class:Context
bdist_rpm	meta/dotbot/lib/pyyaml/setup.py	/^class bdist_rpm(_bdist_rpm):$/;"	c
bg	shells/general/env.bash	/^bg(){$/;"	f
bg	src/dev/tmux/tmux.h	/^			u_char	bg;$/;"	m	struct:grid_cell_entry::__anonc903038b020a::__anonc903038b0308	typeref:typename:u_char
bg	src/dev/tmux/tmux.h	/^	int			bg;$/;"	m	struct:grid_cell	typeref:typename:int
bg	src/dev/tmux/tmux.h	/^	u_int			 bg;$/;"	m	struct:screen_write_ctx	typeref:typename:u_int
bg	src/dev/tmux/tmux.h	/^	u_int		 bg;$/;"	m	struct:tty_ctx	typeref:typename:u_int
bin_PROGRAMS	src/dev/tmux/Makefile	/^bin_PROGRAMS = tmux$(EXEEXT)$/;"	m
bin_PROGRAMS	src/dev/tmux/Makefile.am	/^bin_PROGRAMS = tmux$/;"	m
bin_PROGRAMS	src/dev/tmux/Makefile.in	/^bin_PROGRAMS = tmux$(EXEEXT)$/;"	m
binaries=	src/zplug/base/utils/releases.zsh	/^    binaries=()$/;"	f
binaries=	src/zplug/repos/zplug/zplug/base/utils/releases.zsh	/^    binaries=()$/;"	f
binary	src/dev/ninja/configure.py	/^def binary(name):$/;"	f
bind	terminals/tmux/tmux.conf	/^bind = select-layout tiled$/;"	k
bindings_	src/dev/ninja/src/eval_env.h	/^  Bindings bindings_;$/;"	m	struct:Rule	typeref:typename:Bindings
bindings_	src/dev/ninja/src/eval_env.h	/^  map<string, string> bindings_;$/;"	m	struct:BindingEnv	typeref:typename:map<string,string>
bindings_	src/dev/ninja/src/state.h	/^  BindingEnv bindings_;$/;"	m	struct:State	typeref:typename:BindingEnv
bindir	src/dev/tmux/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/dev/tmux/Makefile.in	/^bindir = @bindir@$/;"	m
bit_alloc	src/dev/tmux/compat/bitstring.h	/^#define	bit_alloc(/;"	d
bit_clear	src/dev/tmux/compat/bitstring.h	/^#define	bit_clear(/;"	d
bit_decl	src/dev/tmux/compat/bitstring.h	/^#define	bit_decl(/;"	d
bit_ffc	src/dev/tmux/compat/bitstring.h	/^#define	bit_ffc(/;"	d
bit_ffs	src/dev/tmux/compat/bitstring.h	/^#define	bit_ffs(/;"	d
bit_nclear	src/dev/tmux/compat/bitstring.h	/^#define	bit_nclear(/;"	d
bit_nset	src/dev/tmux/compat/bitstring.h	/^#define	bit_nset(/;"	d
bit_set	src/dev/tmux/compat/bitstring.h	/^#define	bit_set(/;"	d
bit_test	src/dev/tmux/compat/bitstring.h	/^#define	bit_test(/;"	d
bitstr_size	src/dev/tmux/compat/bitstring.h	/^#define	bitstr_size(/;"	d
bitstr_t	src/dev/tmux/compat/bitstring.h	/^typedef	unsigned char bitstr_t;$/;"	t	typeref:typename:unsigned char
body	src/dev/ninja/doc/style.css	/^body {$/;"	s
body.attributes	src/dev/ninja/doc/docbook.xsl	/^  <xsl:template name="body.attributes"><\/xsl:template>$/;"	n
bool_values	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    bool_values = {$/;"	v	class:SafeConstructor
bool_values	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    bool_values = {$/;"	v	class:SafeConstructor
bootstrap_exe	src/dev/ninja/configure.py	/^            bootstrap_exe = 'ninja.bootstrap.exe'$/;"	v
buf	src/dev/tmux/compat/imsg-buffer.c	/^		char		buf[CMSG_SPACE(sizeof(int))];$/;"	m	union:msgbuf_write::__anon0ff79082010a	typeref:typename:char[]	file:
buf	src/dev/tmux/compat/imsg.c	/^		char	buf[CMSG_SPACE(sizeof(int) * 1)];$/;"	m	union:imsg_read::__anon6cf1a97b010a	typeref:typename:char[]	file:
buf	src/dev/tmux/compat/imsg.h	/^	u_char			 buf[IBUF_READ_SIZE];$/;"	m	struct:ibuf_read	typeref:typename:u_char[]
buf	src/dev/tmux/compat/imsg.h	/^	u_char			*buf;$/;"	m	struct:ibuf	typeref:typename:u_char *
buf_	src/dev/ninja/src/build_log.cc	/^  char buf_[256 << 10];$/;"	m	struct:LineReader	typeref:typename:char[]	file:
buf_	src/dev/ninja/src/subprocess.h	/^  string buf_;$/;"	m	struct:Subprocess	typeref:typename:string
buf_end_	src/dev/ninja/src/build_log.cc	/^  char* buf_end_;  \/\/ Points one past the last valid byte in |buf_|.$/;"	m	struct:LineReader	typeref:typename:char *	file:
bufname	src/dev/tmux/cmd-load-buffer.c	/^	char			*bufname;$/;"	m	struct:cmd_load_buffer_data	typeref:typename:char *	file:
build	meta/dotbot/lib/pyyaml/Makefile	/^build:$/;"	t
build	src/dev/ninja/configure.py	/^    def build(self, outputs, rule, inputs=None, **kwargs):$/;"	m	class:Bootstrap
build	src/dev/ninja/misc/ninja_syntax.py	/^    def build(self, outputs, rule, inputs=None, implicit=None, order_only=None,$/;"	m	class:Writer
build	src/dev/tmux/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	src/dev/tmux/Makefile.in	/^build = @build@$/;"	m
build_alias	src/dev/tmux/Makefile	/^build_alias = $/;"	m
build_alias	src/dev/tmux/Makefile.in	/^build_alias = @build_alias@$/;"	m
build_cpu	src/dev/tmux/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/dev/tmux/Makefile.in	/^build_cpu = @build_cpu@$/;"	m
build_dir_	src/dev/ninja/src/ninja.cc	/^  string build_dir_;$/;"	m	struct:__anon193baac40110::NinjaMain	typeref:typename:string	file:
build_ext	meta/dotbot/lib/pyyaml/setup.py	/^class build_ext(_build_ext):$/;"	c
build_extensions	meta/dotbot/lib/pyyaml/setup.py	/^    def build_extensions(self):$/;"	m	class:build_ext
build_lib	meta/dotbot/lib/pyyaml/tests/lib/test_build.py	/^    build_lib = 'build\/lib'$/;"	v
build_lib	meta/dotbot/lib/pyyaml/tests/lib/test_build_ext.py	/^    build_lib = 'build\/lib'$/;"	v
build_lib	meta/dotbot/lib/pyyaml/tests/lib3/test_build.py	/^    build_lib = 'build\/lib'$/;"	v
build_lib	meta/dotbot/lib/pyyaml/tests/lib3/test_build_ext.py	/^    build_lib = 'build\/lib'$/;"	v
build_lib_ext	meta/dotbot/lib/pyyaml/tests/lib/test_build.py	/^    build_lib_ext = os.path.join('build', 'lib.%s-%s' % (distutils.util.get_platform(), sys.vers/;"	v
build_lib_ext	meta/dotbot/lib/pyyaml/tests/lib/test_build_ext.py	/^    build_lib_ext = os.path.join('build', 'lib.%s-%s' % (distutils.util.get_platform(), sys.vers/;"	v
build_lib_ext	meta/dotbot/lib/pyyaml/tests/lib3/test_build.py	/^    build_lib_ext = os.path.join('build', 'lib.%s-%s' % (distutils.util.get_platform(), sys.vers/;"	v
build_lib_ext	meta/dotbot/lib/pyyaml/tests/lib3/test_build_ext.py	/^    build_lib_ext = os.path.join('build', 'lib.%s-%s' % (distutils.util.get_platform(), sys.vers/;"	v
build_log	src/dev/ninja/src/graph.h	/^  BuildLog* build_log() const {$/;"	f	struct:DependencyScan	typeref:typename:BuildLog *
build_log_	src/dev/ninja/src/build_test.cc	/^  BuildLog build_log_;$/;"	m	struct:BuildWithLogTest	typeref:typename:BuildLog	file:
build_log_	src/dev/ninja/src/graph.h	/^  BuildLog* build_log_;$/;"	m	struct:DependencyScan	typeref:typename:BuildLog *
build_log_	src/dev/ninja/src/ninja.cc	/^  BuildLog build_log_;$/;"	m	struct:__anon193baac40110::NinjaMain	typeref:typename:BuildLog	file:
build_os	src/dev/tmux/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/dev/tmux/Makefile.in	/^build_os = @build_os@$/;"	m
build_triplet	src/dev/tmux/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	src/dev/tmux/Makefile.in	/^build_triplet = @build@$/;"	m
build_vendor	src/dev/tmux/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/dev/tmux/Makefile.in	/^build_vendor = @build_vendor@$/;"	m
buildcb	src/dev/tmux/mode-tree.c	/^	void			 (*buildcb)(void *, u_int, uint64_t *,$/;"	m	struct:mode_tree_data	typeref:typename:void (*)(void *,u_int,uint64_t *,const char *)	file:
builddir	src/dev/tmux/Makefile	/^builddir = .$/;"	m
builddir	src/dev/tmux/Makefile.in	/^builddir = @builddir@$/;"	m
builder_	src/dev/ninja/src/build_test.cc	/^  Builder builder_;$/;"	m	struct:BuildTest	typeref:typename:Builder	file:
builder_	src/dev/ninja/src/build_test.cc	/^  void* builder_;$/;"	m	struct:BuildWithDepsLogTest	typeref:typename:void *	file:
buildext	meta/dotbot/lib/pyyaml/Makefile	/^buildext:$/;"	t
built	src/dev/ninja/configure.py	/^def built(filename):$/;"	f
c	src/dev/tmux/window-client.c	/^	struct client	*c;$/;"	m	struct:window_client_itemdata	typeref:struct:client *	file:
cN	editors/vim/config/mappings.vim	/^nnoremap cN *``cgN$/;"	m
cN	editors/vim/config/mappings.vim	/^vnoremap <expr> cN "y\/\\\\V\\<C-r>=escape(@\\", '\/')\\<CR>\\<CR>" . "``cgN"$/;"	m
cache_	src/dev/ninja/src/disk_interface.h	/^  mutable Cache cache_;$/;"	m	struct:RealDiskInterface	typeref:typename:Cache
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:parse_block_scalar_empty_line	file:
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:parse_block_scalar_indent	file:
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:parse_plain_scalar_indent	file:
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:reset_indent	file:
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:save_indent	file:
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:set_block_scalar_indent	file:
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:set_indent	file:
callback	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def callback(lexer, match, context):$/;"	f	function:something	file:
can_handle	meta/dotbot/dotbot/plugin.py	/^    def can_handle(self, directive):$/;"	m	class:Plugin
can_handle	meta/dotbot/plugins/clean.py	/^    def can_handle(self, directive):$/;"	m	class:Clean
can_handle	meta/dotbot/plugins/link.py	/^    def can_handle(self, directive):$/;"	m	class:Link
can_handle	meta/dotbot/plugins/shell.py	/^    def can_handle(self, directive):$/;"	m	class:Shell
can_rebuild_in_place	src/dev/ninja/configure.py	/^    def can_rebuild_in_place(self):$/;"	m	class:Platform
canonical_compose	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^def canonical_compose(stream):$/;"	f
canonical_compose	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^def canonical_compose(stream):$/;"	f
canonical_compose_all	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^def canonical_compose_all(stream):$/;"	f
canonical_compose_all	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^def canonical_compose_all(stream):$/;"	f
canonical_load	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^def canonical_load(stream):$/;"	f
canonical_load	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^def canonical_load(stream):$/;"	f
canonical_load_all	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^def canonical_load_all(stream):$/;"	f
canonical_load_all	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^def canonical_load_all(stream):$/;"	f
canonical_parse	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^def canonical_parse(stream):$/;"	f
canonical_parse	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^def canonical_parse(stream):$/;"	f
canonical_scan	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^def canonical_scan(stream):$/;"	f
canonical_scan	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^def canonical_scan(stream):$/;"	f
cb	src/dev/tmux/format.c	/^	format_cb		 cb;$/;"	m	struct:format_entry	typeref:typename:format_cb	file:
cb	src/dev/tmux/tmux.h	/^	cmdq_cb			 cb;$/;"	m	struct:cmdq_item	typeref:typename:cmdq_cb
cc	src/dev/ninja/configure.py	/^def cc(name, **kwargs):$/;"	f
ccolour	src/dev/tmux/tmux.h	/^	char			*ccolour;	\/* cursor colour string *\/$/;"	m	struct:screen	typeref:typename:char *
ccolour	src/dev/tmux/tmux.h	/^	char		*ccolour;$/;"	m	struct:tty	typeref:typename:char *
cd	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^cd() {$/;"	f
cell	src/dev/tmux/input.c	/^	struct grid_cell	cell;$/;"	m	struct:input_cell	typeref:struct:grid_cell	file:
cell	src/dev/tmux/input.c	/^	struct input_cell	cell;$/;"	m	struct:input_ctx	typeref:struct:input_cell	file:
cell	src/dev/tmux/tmux.h	/^	const struct grid_cell	*cell;$/;"	m	struct:tty_ctx	typeref:typename:const struct grid_cell *
cell	src/dev/tmux/tmux.h	/^	struct grid_cell cell;$/;"	m	struct:screen_sel	typeref:struct:grid_cell
cell	src/dev/tmux/tmux.h	/^	struct grid_cell cell;$/;"	m	struct:tty	typeref:struct:grid_cell
celldata	src/dev/tmux/tmux.h	/^	struct grid_cell_entry	*celldata;$/;"	m	struct:grid_line	typeref:struct:grid_cell_entry *
cells	src/dev/tmux/tmux.h	/^	struct layout_cells cells;$/;"	m	struct:layout_cell	typeref:struct:layout_cells
cells	src/dev/tmux/tmux.h	/^	u_int			 cells;$/;"	m	struct:screen_write_ctx	typeref:typename:u_int
cellsize	src/dev/tmux/tmux.h	/^	u_int			 cellsize;$/;"	m	struct:grid_line	typeref:typename:u_int
cellused	src/dev/tmux/tmux.h	/^	u_int			 cellused;$/;"	m	struct:grid_line	typeref:typename:u_int
cfg_add_cause	src/dev/tmux/cfg.c	/^cfg_add_cause(const char *fmt, ...)$/;"	f	typeref:typename:void
cfg_causes	src/dev/tmux/cfg.c	/^static char		**cfg_causes;$/;"	v	typeref:typename:char **	file:
cfg_client_done	src/dev/tmux/cfg.c	/^cfg_client_done(__unused struct cmdq_item *item, __unused void *data)$/;"	f	typeref:enum:cmd_retval	file:
cfg_done	src/dev/tmux/cfg.c	/^cfg_done(__unused struct cmdq_item *item, __unused void *data)$/;"	f	typeref:enum:cmd_retval	file:
cfg_file	src/dev/tmux/cfg.c	/^static char		 *cfg_file;$/;"	v	typeref:typename:char *	file:
cfg_finished	src/dev/tmux/cfg.c	/^int			  cfg_finished;$/;"	v	typeref:typename:int
cfg_item	src/dev/tmux/cfg.c	/^static struct cmdq_item	 *cfg_item;$/;"	v	typeref:struct:cmdq_item *	file:
cfg_ncauses	src/dev/tmux/cfg.c	/^static u_int		  cfg_ncauses;$/;"	v	typeref:typename:u_int	file:
cfg_print_causes	src/dev/tmux/cfg.c	/^cfg_print_causes(struct cmdq_item *item)$/;"	f	typeref:typename:void
cfg_show_causes	src/dev/tmux/cfg.c	/^cfg_show_causes(struct session *s)$/;"	f	typeref:typename:void
cflags	src/dev/ninja/configure.py	/^    cflags = ['\/showIncludes',$/;"	v
cfmakeraw	src/dev/tmux/compat/cfmakeraw.c	/^cfmakeraw(struct termios *tio)$/;"	f	typeref:typename:void
cgc	editors/vim/config/plugins/all.vim	/^	nmap cgc <Plug>ChangeCommentary$/;"	m
ch	src/dev/tmux/input.c	/^	int			ch;$/;"	m	struct:input_ctx	typeref:typename:int	file:
ch	src/dev/tmux/input.c	/^	int		ch;$/;"	m	struct:input_table_entry	typeref:typename:int	file:
ch	src/dev/tmux/tmux.h	/^	char		 ch;$/;"	m	struct:tty_key	typeref:typename:char
chapter.autolabel	src/dev/ninja/doc/docbook.xsl	/^  <xsl:param name="chapter.autolabel">0<\/xsl:param>$/;"	p
chdir	src/dev/ninja/src/util.h	/^#define chdir /;"	d
check	src/dev/tmux/Makefile	/^check: check-am$/;"	t
check	src/dev/tmux/Makefile.in	/^check: check-am$/;"	t
check-am	src/dev/tmux/Makefile	/^check-am: all-am$/;"	t
check-am	src/dev/tmux/Makefile.in	/^check-am: all-am$/;"	t
check_binding_defined	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_binding_defined() {$/;"	f
check_block_entry	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_block_entry(self):$/;"	m	class:Scanner
check_block_entry	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_block_entry(self):$/;"	m	class:Scanner
check_data	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def check_data(self):$/;"	m	class:BaseConstructor
check_data	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def check_data(self):$/;"	m	class:BaseConstructor
check_dir_exists_helper	terminals/tmux/plugins/tpm/tests/helpers/tpm.sh	/^check_dir_exists_helper() {$/;"	f
check_directive	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_directive(self):$/;"	m	class:Scanner
check_directive	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_directive(self):$/;"	m	class:Scanner
check_document_end	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_document_end(self):$/;"	m	class:Scanner
check_document_end	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_document_end(self):$/;"	m	class:Scanner
check_document_start	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_document_start(self):$/;"	m	class:Scanner
check_document_start	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_document_start(self):$/;"	m	class:Scanner
check_empty_document	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def check_empty_document(self):$/;"	m	class:Emitter
check_empty_document	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def check_empty_document(self):$/;"	m	class:Emitter
check_empty_mapping	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def check_empty_mapping(self):$/;"	m	class:Emitter
check_empty_mapping	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def check_empty_mapping(self):$/;"	m	class:Emitter
check_empty_sequence	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def check_empty_sequence(self):$/;"	m	class:Emitter
check_empty_sequence	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def check_empty_sequence(self):$/;"	m	class:Emitter
check_event	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def check_event(self, *choices):$/;"	m	class:CParser
check_event	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def check_event(self, *choices):$/;"	m	class:Parser
check_event	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def check_event(self, *choices):$/;"	m	class:Parser
check_event	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def check_event(self, *choices):$/;"	m	class:CanonicalParser
check_event	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def check_event(self, *choices):$/;"	m	class:CanonicalParser
check_extension_availability	meta/dotbot/lib/pyyaml/setup.py	/^    def check_extension_availability(self, ext):$/;"	m	class:build_ext
check_key	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_key(self):$/;"	m	class:Scanner
check_key	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_key(self):$/;"	m	class:Scanner
check_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def check_node(self):$/;"	m	class:CParser
check_node	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def check_node(self):$/;"	m	class:Composer
check_node	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def check_node(self):$/;"	m	class:Composer
check_plain	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_plain(self):$/;"	m	class:Scanner
check_plain	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_plain(self):$/;"	m	class:Scanner
check_prereqs	meta/dotbot/test/driver-lib.bash	/^check_prereqs() {$/;"	f
check_printable	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def check_printable(self, data):$/;"	m	class:Reader
check_printable	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def check_printable(self, data):$/;"	m	class:Reader
check_resolver_prefix	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    def check_resolver_prefix(self, depth, path, kind,$/;"	m	class:BaseResolver
check_resolver_prefix	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    def check_resolver_prefix(self, depth, path, kind,$/;"	m	class:BaseResolver
check_simple_key	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def check_simple_key(self):$/;"	m	class:Emitter
check_simple_key	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def check_simple_key(self):$/;"	m	class:Emitter
check_token	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def check_token(self, *choices):$/;"	m	class:CParser
check_token	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_token(self, *choices):$/;"	m	class:Scanner
check_token	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_token(self, *choices):$/;"	m	class:Scanner
check_token	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def check_token(self, *choices):$/;"	m	class:CanonicalScanner
check_token	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def check_token(self, *choices):$/;"	m	class:CanonicalScanner
check_tpm_path	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_tpm_path() {$/;"	f
check_value	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def check_value(self):$/;"	m	class:Scanner
check_value	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def check_value(self):$/;"	m	class:Scanner
check_vm	meta/dotbot/test/test-lib.bash	/^check_vm() {$/;"	f
check_window_name	src/dev/tmux/names.c	/^check_window_name(struct window *w)$/;"	f	typeref:typename:void
checkshell	src/dev/tmux/tmux.c	/^checkshell(const char *shell)$/;"	f	typeref:typename:int	file:
child_	src/dev/ninja/src/subprocess.h	/^  HANDLE child_;$/;"	m	struct:Subprocess	typeref:typename:HANDLE
children	src/dev/tmux/mode-tree.c	/^	struct mode_tree_list		 children;$/;"	m	struct:mode_tree_item	typeref:struct:mode_tree_list	file:
children	src/dev/tmux/mode-tree.c	/^	struct mode_tree_list	  children;$/;"	m	struct:mode_tree_data	typeref:struct:mode_tree_list	file:
choices	src/dev/tmux/tmux.h	/^	const char		**choices;$/;"	m	struct:options_table_entry	typeref:typename:const char **
choose_scalar_style	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def choose_scalar_style(self):$/;"	m	class:Emitter
choose_scalar_style	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def choose_scalar_style(self):$/;"	m	class:Emitter
classobj	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    class classobj: pass$/;"	c	class:Constructor
clean	meta/dotbot/lib/pyyaml/Makefile	/^clean:$/;"	t
clean	src/dev/tmux/Makefile	/^clean: clean-am$/;"	t
clean	src/dev/tmux/Makefile.in	/^clean: clean-am$/;"	t
clean	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^clean:$/;"	t
clean	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^clean:$/;"	t
clean-am	src/dev/tmux/Makefile	/^clean-am: clean-binPROGRAMS clean-generic mostlyclean-am$/;"	t
clean-am	src/dev/tmux/Makefile.in	/^clean-am: clean-binPROGRAMS clean-generic mostlyclean-am$/;"	t
clean-binPROGRAMS	src/dev/tmux/Makefile	/^clean-binPROGRAMS:$/;"	t
clean-binPROGRAMS	src/dev/tmux/Makefile.in	/^clean-binPROGRAMS:$/;"	t
clean-cscope	src/dev/tmux/Makefile	/^clean-cscope:$/;"	t
clean-cscope	src/dev/tmux/Makefile.in	/^clean-cscope:$/;"	t
clean-generic	src/dev/tmux/Makefile	/^clean-generic:$/;"	t
clean-generic	src/dev/tmux/Makefile.in	/^clean-generic:$/;"	t
clean_plugins	terminals/tmux/plugins/tpm/scripts/clean_plugins.sh	/^clean_plugins() {$/;"	f
cleaned_	src/dev/ninja/src/clean.h	/^  set<Node*> cleaned_;$/;"	m	struct:Cleaner	typeref:typename:set<Node * >
cleaned_files_count	src/dev/ninja/src/clean.h	/^  int cleaned_files_count() const {$/;"	f	struct:Cleaner	typeref:typename:int
cleaned_files_count_	src/dev/ninja/src/clean.h	/^  int cleaned_files_count_;$/;"	m	struct:Cleaner	typeref:typename:int
clear_screen	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def clear_screen$/;"	f	class:TerminalSession
click_button	src/dev/tmux/tmux.h	/^	u_int		 click_button;$/;"	m	struct:client	typeref:typename:u_int
click_timer	src/dev/tmux/tmux.h	/^	struct event	 click_timer;$/;"	m	struct:client	typeref:struct:event
client	src/dev/tmux/cmd-if-shell.c	/^	struct client		*client;$/;"	m	struct:cmd_if_shell_data	typeref:struct:client *	file:
client	src/dev/tmux/format.c	/^	struct client		*client;$/;"	m	struct:format_job	typeref:struct:client *	file:
client	src/dev/tmux/format.c	/^	struct client		*client;$/;"	m	struct:format_tree	typeref:struct:client *	file:
client	src/dev/tmux/notify.c	/^	struct client		*client;$/;"	m	struct:notify_entry	typeref:struct:client *	file:
client	src/dev/tmux/tmux.h	/^	struct client		*client;$/;"	m	struct:cmdq_item	typeref:struct:client *
client	src/dev/tmux/tmux.h	/^	struct client	*client;$/;"	m	struct:tty	typeref:struct:client *
client	src/dev/tmux/tmux.h	/^struct client {$/;"	s
client	src/dev/tmux/window-tree.c	/^	struct client			 *client;$/;"	m	struct:window_tree_modedata	typeref:struct:client *	file:
client_attached	src/dev/tmux/client.c	/^static int		 client_attached;$/;"	v	typeref:typename:int	file:
client_connect	src/dev/tmux/client.c	/^client_connect(struct event_base *base, const char *path, int start_server)$/;"	f	typeref:typename:int	file:
client_dispatch	src/dev/tmux/client.c	/^client_dispatch(struct imsg *imsg, __unused void *arg)$/;"	f	typeref:typename:void	file:
client_dispatch_attached	src/dev/tmux/client.c	/^client_dispatch_attached(struct imsg *imsg)$/;"	f	typeref:typename:void	file:
client_dispatch_wait	src/dev/tmux/client.c	/^client_dispatch_wait(struct imsg *imsg)$/;"	f	typeref:typename:void	file:
client_exec	src/dev/tmux/client.c	/^client_exec(const char *shell, const char *shellcmd)$/;"	f	typeref:typename:__dead void	file:
client_execcmd	src/dev/tmux/client.c	/^static const char	*client_execcmd;$/;"	v	typeref:typename:const char *	file:
client_execshell	src/dev/tmux/client.c	/^static const char	*client_execshell;$/;"	v	typeref:typename:const char *	file:
client_exit_message	src/dev/tmux/client.c	/^client_exit_message(void)$/;"	f	typeref:typename:const char *
client_exitreason	src/dev/tmux/client.c	/^} client_exitreason = CLIENT_EXIT_NONE;$/;"	v	typeref:enum:__anonfb464b170103	file:
client_exitsession	src/dev/tmux/client.c	/^static const char	*client_exitsession;$/;"	v	typeref:typename:const char *	file:
client_exittype	src/dev/tmux/client.c	/^static enum msgtype	 client_exittype;$/;"	v	typeref:enum:msgtype	file:
client_exitval	src/dev/tmux/client.c	/^static int		 client_exitval;$/;"	v	typeref:typename:int	file:
client_flags	src/dev/tmux/client.c	/^static int		 client_flags;$/;"	v	typeref:typename:int	file:
client_get_lock	src/dev/tmux/client.c	/^client_get_lock(char *lockfile)$/;"	f	typeref:typename:int	file:
client_main	src/dev/tmux/client.c	/^client_main(struct event_base *base, int argc, char **argv, int flags)$/;"	f	typeref:typename:int
client_peer	src/dev/tmux/client.c	/^static struct tmuxpeer	*client_peer;$/;"	v	typeref:struct:tmuxpeer *	file:
client_proc	src/dev/tmux/client.c	/^static struct tmuxproc	*client_proc;$/;"	v	typeref:struct:tmuxproc *	file:
client_send_identify	src/dev/tmux/client.c	/^client_send_identify(const char *ttynam, const char *cwd)$/;"	f	typeref:typename:void	file:
client_signal	src/dev/tmux/client.c	/^client_signal(int sig)$/;"	f	typeref:typename:void	file:
client_stdin	src/dev/tmux/client.c	/^static struct event	 client_stdin;$/;"	v	typeref:struct:event	file:
client_stdin_callback	src/dev/tmux/client.c	/^client_stdin_callback(__unused int fd, __unused short events,$/;"	f	typeref:typename:void	file:
client_write	src/dev/tmux/client.c	/^client_write(int fd, const char *data, size_t size)$/;"	f	typeref:typename:void	file:
clients	src/dev/tmux/server.c	/^struct clients		 clients;$/;"	v	typeref:struct:clients
clone	terminals/tmux/plugins/tpm/scripts/install_plugins.sh	/^clone() {$/;"	f
clone_plugin	terminals/tmux/plugins/tpm/scripts/install_plugins.sh	/^clone_plugin() {$/;"	f
close	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def close(self):$/;"	m	class:CEmitter
close	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    def close(self):$/;"	m	class:Serializer
close	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    def close(self):$/;"	m	class:Serializer
close	src/dev/ninja/misc/ninja_syntax.py	/^    def close(self):$/;"	m	class:Writer
closefrom	src/dev/tmux/compat/closefrom.c	/^closefrom(int lowfd)$/;"	f	typeref:typename:void
cmd	src/dev/tmux/cmd-confirm-before.c	/^	char	*cmd;$/;"	m	struct:cmd_confirm_before_data	typeref:typename:char *	file:
cmd	src/dev/tmux/cmd-run-shell.c	/^	char			*cmd;$/;"	m	struct:cmd_run_shell_data	typeref:typename:char *	file:
cmd	src/dev/tmux/format.c	/^	const char		*cmd;$/;"	m	struct:format_job	typeref:typename:const char *	file:
cmd	src/dev/tmux/tmux.h	/^	char			*cmd;$/;"	m	struct:job	typeref:typename:char *
cmd	src/dev/tmux/tmux.h	/^	struct cmd		*cmd;$/;"	m	struct:cmdq_item	typeref:struct:cmd *
cmd	src/dev/tmux/tmux.h	/^struct cmd {$/;"	s
cmd_attach_session	src/dev/tmux/cmd-attach-session.c	/^cmd_attach_session(struct cmdq_item *item, const char *tflag, int dflag,$/;"	f	typeref:enum:cmd_retval
cmd_attach_session_entry	src/dev/tmux/cmd-attach-session.c	/^const struct cmd_entry cmd_attach_session_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_attach_session_exec	src/dev/tmux/cmd-attach-session.c	/^cmd_attach_session_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_bind_key_entry	src/dev/tmux/cmd-bind-key.c	/^const struct cmd_entry cmd_bind_key_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_bind_key_exec	src/dev/tmux/cmd-bind-key.c	/^cmd_bind_key_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_break_pane_entry	src/dev/tmux/cmd-break-pane.c	/^const struct cmd_entry cmd_break_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_break_pane_exec	src/dev/tmux/cmd-break-pane.c	/^cmd_break_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_capture_pane_append	src/dev/tmux/cmd-capture-pane.c	/^cmd_capture_pane_append(char *buf, size_t *len, char *line, size_t linelen)$/;"	f	typeref:typename:char *	file:
cmd_capture_pane_entry	src/dev/tmux/cmd-capture-pane.c	/^const struct cmd_entry cmd_capture_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_capture_pane_exec	src/dev/tmux/cmd-capture-pane.c	/^cmd_capture_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_capture_pane_history	src/dev/tmux/cmd-capture-pane.c	/^cmd_capture_pane_history(struct args *args, struct cmdq_item *item,$/;"	f	typeref:typename:char *	file:
cmd_capture_pane_pending	src/dev/tmux/cmd-capture-pane.c	/^cmd_capture_pane_pending(struct args *args, struct window_pane *wp,$/;"	f	typeref:typename:char *	file:
cmd_choose_buffer_entry	src/dev/tmux/cmd-choose-tree.c	/^const struct cmd_entry cmd_choose_buffer_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_choose_client_entry	src/dev/tmux/cmd-choose-tree.c	/^const struct cmd_entry cmd_choose_client_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_choose_tree_entry	src/dev/tmux/cmd-choose-tree.c	/^const struct cmd_entry cmd_choose_tree_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_choose_tree_exec	src/dev/tmux/cmd-choose-tree.c	/^cmd_choose_tree_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_clear_history_entry	src/dev/tmux/cmd-capture-pane.c	/^const struct cmd_entry cmd_clear_history_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_clock_mode_entry	src/dev/tmux/cmd-copy-mode.c	/^const struct cmd_entry cmd_clock_mode_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_command_prompt_callback	src/dev/tmux/cmd-command-prompt.c	/^cmd_command_prompt_callback(struct client *c, void *data, const char *s,$/;"	f	typeref:typename:int	file:
cmd_command_prompt_cdata	src/dev/tmux/cmd-command-prompt.c	/^struct cmd_command_prompt_cdata {$/;"	s	file:
cmd_command_prompt_entry	src/dev/tmux/cmd-command-prompt.c	/^const struct cmd_entry cmd_command_prompt_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_command_prompt_error	src/dev/tmux/cmd-command-prompt.c	/^cmd_command_prompt_error(struct cmdq_item *item, void *data)$/;"	f	typeref:enum:cmd_retval	file:
cmd_command_prompt_exec	src/dev/tmux/cmd-command-prompt.c	/^cmd_command_prompt_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_command_prompt_free	src/dev/tmux/cmd-command-prompt.c	/^cmd_command_prompt_free(void *data)$/;"	f	typeref:typename:void	file:
cmd_confirm_before_callback	src/dev/tmux/cmd-confirm-before.c	/^cmd_confirm_before_callback(struct client *c, void *data, const char *s,$/;"	f	typeref:typename:int	file:
cmd_confirm_before_data	src/dev/tmux/cmd-confirm-before.c	/^struct cmd_confirm_before_data {$/;"	s	file:
cmd_confirm_before_entry	src/dev/tmux/cmd-confirm-before.c	/^const struct cmd_entry cmd_confirm_before_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_confirm_before_error	src/dev/tmux/cmd-confirm-before.c	/^cmd_confirm_before_error(struct cmdq_item *item, void *data)$/;"	f	typeref:enum:cmd_retval	file:
cmd_confirm_before_exec	src/dev/tmux/cmd-confirm-before.c	/^cmd_confirm_before_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_confirm_before_free	src/dev/tmux/cmd-confirm-before.c	/^cmd_confirm_before_free(void *data)$/;"	f	typeref:typename:void	file:
cmd_copy_argv	src/dev/tmux/cmd.c	/^cmd_copy_argv(int argc, char **argv)$/;"	f	typeref:typename:char **
cmd_copy_mode_entry	src/dev/tmux/cmd-copy-mode.c	/^const struct cmd_entry cmd_copy_mode_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_copy_mode_exec	src/dev/tmux/cmd-copy-mode.c	/^cmd_copy_mode_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_delete_buffer_entry	src/dev/tmux/cmd-set-buffer.c	/^const struct cmd_entry cmd_delete_buffer_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_detach_client_entry	src/dev/tmux/cmd-detach-client.c	/^const struct cmd_entry cmd_detach_client_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_detach_client_exec	src/dev/tmux/cmd-detach-client.c	/^cmd_detach_client_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_display_message_entry	src/dev/tmux/cmd-display-message.c	/^const struct cmd_entry cmd_display_message_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_display_message_exec	src/dev/tmux/cmd-display-message.c	/^cmd_display_message_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_display_panes_callback	src/dev/tmux/cmd-display-panes.c	/^cmd_display_panes_callback(struct client *c, struct window_pane *wp)$/;"	f	typeref:typename:void	file:
cmd_display_panes_entry	src/dev/tmux/cmd-display-panes.c	/^const struct cmd_entry cmd_display_panes_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_display_panes_error	src/dev/tmux/cmd-display-panes.c	/^cmd_display_panes_error(struct cmdq_item *item, void *data)$/;"	f	typeref:enum:cmd_retval	file:
cmd_display_panes_exec	src/dev/tmux/cmd-display-panes.c	/^cmd_display_panes_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_else	src/dev/tmux/cmd-if-shell.c	/^	char			*cmd_else;$/;"	m	struct:cmd_if_shell_data	typeref:typename:char *	file:
cmd_entry	src/dev/tmux/tmux.h	/^struct cmd_entry {$/;"	s
cmd_entry_flag	src/dev/tmux/tmux.h	/^struct cmd_entry_flag {$/;"	s
cmd_find_best_client	src/dev/tmux/cmd-find.c	/^cmd_find_best_client(struct session *s)$/;"	f	typeref:struct:client *	file:
cmd_find_best_session	src/dev/tmux/cmd-find.c	/^cmd_find_best_session(struct session **slist, u_int ssize, int flags)$/;"	f	typeref:struct:session *	file:
cmd_find_best_session_with_window	src/dev/tmux/cmd-find.c	/^cmd_find_best_session_with_window(struct cmd_find_state *fs)$/;"	f	typeref:typename:int	file:
cmd_find_best_winlink_with_window	src/dev/tmux/cmd-find.c	/^cmd_find_best_winlink_with_window(struct cmd_find_state *fs)$/;"	f	typeref:typename:int	file:
cmd_find_clear_state	src/dev/tmux/cmd-find.c	/^cmd_find_clear_state(struct cmd_find_state *fs, int flags)$/;"	f	typeref:typename:void
cmd_find_client	src/dev/tmux/cmd-find.c	/^cmd_find_client(struct cmdq_item *item, const char *target, int quiet)$/;"	f	typeref:struct:client *
cmd_find_client_better	src/dev/tmux/cmd-find.c	/^cmd_find_client_better(struct client *c, struct client *than)$/;"	f	typeref:typename:int	file:
cmd_find_copy_state	src/dev/tmux/cmd-find.c	/^cmd_find_copy_state(struct cmd_find_state *dst, struct cmd_find_state *src)$/;"	f	typeref:typename:void
cmd_find_current_client	src/dev/tmux/cmd-find.c	/^cmd_find_current_client(struct cmdq_item *item, int quiet)$/;"	f	typeref:struct:client *	file:
cmd_find_empty_state	src/dev/tmux/cmd-find.c	/^cmd_find_empty_state(struct cmd_find_state *fs)$/;"	f	typeref:typename:int
cmd_find_from_client	src/dev/tmux/cmd-find.c	/^cmd_find_from_client(struct cmd_find_state *fs, struct client *c, int flags)$/;"	f	typeref:typename:int
cmd_find_from_mouse	src/dev/tmux/cmd-find.c	/^cmd_find_from_mouse(struct cmd_find_state *fs, struct mouse_event *m, int flags)$/;"	f	typeref:typename:int
cmd_find_from_nothing	src/dev/tmux/cmd-find.c	/^cmd_find_from_nothing(struct cmd_find_state *fs, int flags)$/;"	f	typeref:typename:int
cmd_find_from_pane	src/dev/tmux/cmd-find.c	/^cmd_find_from_pane(struct cmd_find_state *fs, struct window_pane *wp, int flags)$/;"	f	typeref:typename:int
cmd_find_from_session	src/dev/tmux/cmd-find.c	/^cmd_find_from_session(struct cmd_find_state *fs, struct session *s, int flags)$/;"	f	typeref:typename:void
cmd_find_from_session_window	src/dev/tmux/cmd-find.c	/^cmd_find_from_session_window(struct cmd_find_state *fs, struct session *s,$/;"	f	typeref:typename:int
cmd_find_from_window	src/dev/tmux/cmd-find.c	/^cmd_find_from_window(struct cmd_find_state *fs, struct window *w, int flags)$/;"	f	typeref:typename:int
cmd_find_from_winlink	src/dev/tmux/cmd-find.c	/^cmd_find_from_winlink(struct cmd_find_state *fs, struct winlink *wl, int flags)$/;"	f	typeref:typename:void
cmd_find_from_winlink_pane	src/dev/tmux/cmd-find.c	/^cmd_find_from_winlink_pane(struct cmd_find_state *fs, struct winlink *wl,$/;"	f	typeref:typename:void
cmd_find_get_pane	src/dev/tmux/cmd-find.c	/^cmd_find_get_pane(struct cmd_find_state *fs, const char *pane, int only)$/;"	f	typeref:typename:int	file:
cmd_find_get_pane_with_session	src/dev/tmux/cmd-find.c	/^cmd_find_get_pane_with_session(struct cmd_find_state *fs, const char *pane)$/;"	f	typeref:typename:int	file:
cmd_find_get_pane_with_window	src/dev/tmux/cmd-find.c	/^cmd_find_get_pane_with_window(struct cmd_find_state *fs, const char *pane)$/;"	f	typeref:typename:int	file:
cmd_find_get_session	src/dev/tmux/cmd-find.c	/^cmd_find_get_session(struct cmd_find_state *fs, const char *session)$/;"	f	typeref:typename:int	file:
cmd_find_get_window	src/dev/tmux/cmd-find.c	/^cmd_find_get_window(struct cmd_find_state *fs, const char *window, int only)$/;"	f	typeref:typename:int	file:
cmd_find_get_window_with_session	src/dev/tmux/cmd-find.c	/^cmd_find_get_window_with_session(struct cmd_find_state *fs, const char *window)$/;"	f	typeref:typename:int	file:
cmd_find_inside_pane	src/dev/tmux/cmd-find.c	/^cmd_find_inside_pane(struct client *c)$/;"	f	typeref:struct:window_pane *	file:
cmd_find_log_state	src/dev/tmux/cmd-find.c	/^cmd_find_log_state(const char *prefix, struct cmd_find_state *fs)$/;"	f	typeref:typename:void
cmd_find_map_table	src/dev/tmux/cmd-find.c	/^cmd_find_map_table(const char *table[][2], const char *s)$/;"	f	typeref:typename:const char *	file:
cmd_find_pane_table	src/dev/tmux/cmd-find.c	/^static const char *cmd_find_pane_table[][2] = {$/;"	v	typeref:typename:const char * [][2]	file:
cmd_find_session_better	src/dev/tmux/cmd-find.c	/^cmd_find_session_better(struct session *s, struct session *than, int flags)$/;"	f	typeref:typename:int	file:
cmd_find_session_table	src/dev/tmux/cmd-find.c	/^static const char *cmd_find_session_table[][2] = {$/;"	v	typeref:typename:const char * [][2]	file:
cmd_find_state	src/dev/tmux/tmux.h	/^struct cmd_find_state {$/;"	s
cmd_find_target	src/dev/tmux/cmd-find.c	/^cmd_find_target(struct cmd_find_state *fs, struct cmdq_item *item,$/;"	f	typeref:typename:int
cmd_find_try_TMUX	src/dev/tmux/cmd-find.c	/^cmd_find_try_TMUX(struct client *c)$/;"	f	typeref:struct:session *	file:
cmd_find_type	src/dev/tmux/tmux.h	/^enum cmd_find_type {$/;"	g
cmd_find_valid_state	src/dev/tmux/cmd-find.c	/^cmd_find_valid_state(struct cmd_find_state *fs)$/;"	f	typeref:typename:int
cmd_find_window_entry	src/dev/tmux/cmd-find-window.c	/^const struct cmd_entry cmd_find_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_find_window_exec	src/dev/tmux/cmd-find-window.c	/^cmd_find_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_find_window_table	src/dev/tmux/cmd-find.c	/^static const char *cmd_find_window_table[][2] = {$/;"	v	typeref:typename:const char * [][2]	file:
cmd_free_argv	src/dev/tmux/cmd.c	/^cmd_free_argv(int argc, char **argv)$/;"	f	typeref:typename:void
cmd_has_session_entry	src/dev/tmux/cmd-new-session.c	/^const struct cmd_entry cmd_has_session_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_if	src/dev/tmux/cmd-if-shell.c	/^	char			*cmd_if;$/;"	m	struct:cmd_if_shell_data	typeref:typename:char *	file:
cmd_if_shell_callback	src/dev/tmux/cmd-if-shell.c	/^cmd_if_shell_callback(struct job *job)$/;"	f	typeref:typename:void	file:
cmd_if_shell_data	src/dev/tmux/cmd-if-shell.c	/^struct cmd_if_shell_data {$/;"	s	file:
cmd_if_shell_entry	src/dev/tmux/cmd-if-shell.c	/^const struct cmd_entry cmd_if_shell_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_if_shell_exec	src/dev/tmux/cmd-if-shell.c	/^cmd_if_shell_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_if_shell_free	src/dev/tmux/cmd-if-shell.c	/^cmd_if_shell_free(void *data)$/;"	f	typeref:typename:void	file:
cmd_join_pane_entry	src/dev/tmux/cmd-join-pane.c	/^const struct cmd_entry cmd_join_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_join_pane_exec	src/dev/tmux/cmd-join-pane.c	/^cmd_join_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_kill_pane_entry	src/dev/tmux/cmd-kill-pane.c	/^const struct cmd_entry cmd_kill_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_kill_pane_exec	src/dev/tmux/cmd-kill-pane.c	/^cmd_kill_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_kill_server_entry	src/dev/tmux/cmd-kill-server.c	/^const struct cmd_entry cmd_kill_server_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_kill_server_exec	src/dev/tmux/cmd-kill-server.c	/^cmd_kill_server_exec(struct cmd *self, __unused struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_kill_session_entry	src/dev/tmux/cmd-kill-session.c	/^const struct cmd_entry cmd_kill_session_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_kill_session_exec	src/dev/tmux/cmd-kill-session.c	/^cmd_kill_session_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_kill_window_entry	src/dev/tmux/cmd-kill-window.c	/^const struct cmd_entry cmd_kill_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_kill_window_exec	src/dev/tmux/cmd-kill-window.c	/^cmd_kill_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_last_pane_entry	src/dev/tmux/cmd-select-pane.c	/^const struct cmd_entry cmd_last_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_last_window_entry	src/dev/tmux/cmd-select-window.c	/^const struct cmd_entry cmd_last_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_link_window_entry	src/dev/tmux/cmd-move-window.c	/^const struct cmd_entry cmd_link_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list	src/dev/tmux/tmux.h	/^struct cmd_list {$/;"	s
cmd_list_buffers_entry	src/dev/tmux/cmd-list-buffers.c	/^const struct cmd_entry cmd_list_buffers_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list_buffers_exec	src/dev/tmux/cmd-list-buffers.c	/^cmd_list_buffers_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_list_clients_entry	src/dev/tmux/cmd-list-clients.c	/^const struct cmd_entry cmd_list_clients_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list_clients_exec	src/dev/tmux/cmd-list-clients.c	/^cmd_list_clients_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_list_commands_entry	src/dev/tmux/cmd-list-keys.c	/^const struct cmd_entry cmd_list_commands_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list_free	src/dev/tmux/cmd-list.c	/^cmd_list_free(struct cmd_list *cmdlist)$/;"	f	typeref:typename:void
cmd_list_keys_commands	src/dev/tmux/cmd-list-keys.c	/^cmd_list_keys_commands(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_list_keys_entry	src/dev/tmux/cmd-list-keys.c	/^const struct cmd_entry cmd_list_keys_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list_keys_exec	src/dev/tmux/cmd-list-keys.c	/^cmd_list_keys_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_list_panes_entry	src/dev/tmux/cmd-list-panes.c	/^const struct cmd_entry cmd_list_panes_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list_panes_exec	src/dev/tmux/cmd-list-panes.c	/^cmd_list_panes_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_list_panes_server	src/dev/tmux/cmd-list-panes.c	/^cmd_list_panes_server(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:typename:void	file:
cmd_list_panes_session	src/dev/tmux/cmd-list-panes.c	/^cmd_list_panes_session(struct cmd *self, struct session *s,$/;"	f	typeref:typename:void	file:
cmd_list_panes_window	src/dev/tmux/cmd-list-panes.c	/^cmd_list_panes_window(struct cmd *self, struct session *s, struct winlink *wl,$/;"	f	typeref:typename:void	file:
cmd_list_parse	src/dev/tmux/cmd-list.c	/^cmd_list_parse(int argc, char **argv, const char *file, u_int line,$/;"	f	typeref:struct:cmd_list *
cmd_list_print	src/dev/tmux/cmd-list.c	/^cmd_list_print(struct cmd_list *cmdlist)$/;"	f	typeref:typename:char *
cmd_list_sessions_entry	src/dev/tmux/cmd-list-sessions.c	/^const struct cmd_entry cmd_list_sessions_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list_sessions_exec	src/dev/tmux/cmd-list-sessions.c	/^cmd_list_sessions_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_list_windows_entry	src/dev/tmux/cmd-list-windows.c	/^const struct cmd_entry cmd_list_windows_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_list_windows_exec	src/dev/tmux/cmd-list-windows.c	/^cmd_list_windows_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_list_windows_server	src/dev/tmux/cmd-list-windows.c	/^cmd_list_windows_server(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:typename:void	file:
cmd_list_windows_session	src/dev/tmux/cmd-list-windows.c	/^cmd_list_windows_session(struct cmd *self, struct session *s,$/;"	f	typeref:typename:void	file:
cmd_load_buffer_callback	src/dev/tmux/cmd-load-buffer.c	/^cmd_load_buffer_callback(struct client *c, int closed, void *data)$/;"	f	typeref:typename:void	file:
cmd_load_buffer_data	src/dev/tmux/cmd-load-buffer.c	/^struct cmd_load_buffer_data {$/;"	s	file:
cmd_load_buffer_entry	src/dev/tmux/cmd-load-buffer.c	/^const struct cmd_entry cmd_load_buffer_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_load_buffer_exec	src/dev/tmux/cmd-load-buffer.c	/^cmd_load_buffer_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_lock_client_entry	src/dev/tmux/cmd-lock-server.c	/^const struct cmd_entry cmd_lock_client_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_lock_server_entry	src/dev/tmux/cmd-lock-server.c	/^const struct cmd_entry cmd_lock_server_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_lock_server_exec	src/dev/tmux/cmd-lock-server.c	/^cmd_lock_server_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_lock_session_entry	src/dev/tmux/cmd-lock-server.c	/^const struct cmd_entry cmd_lock_session_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_mouse_at	src/dev/tmux/cmd.c	/^cmd_mouse_at(struct window_pane *wp, struct mouse_event *m, u_int *xp,$/;"	f	typeref:typename:int
cmd_mouse_pane	src/dev/tmux/cmd.c	/^cmd_mouse_pane(struct mouse_event *m, struct session **sp,$/;"	f	typeref:struct:window_pane *
cmd_mouse_window	src/dev/tmux/cmd.c	/^cmd_mouse_window(struct mouse_event *m, struct session **sp)$/;"	f	typeref:struct:winlink *
cmd_move_pane_entry	src/dev/tmux/cmd-join-pane.c	/^const struct cmd_entry cmd_move_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_move_window_entry	src/dev/tmux/cmd-move-window.c	/^const struct cmd_entry cmd_move_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_move_window_exec	src/dev/tmux/cmd-move-window.c	/^cmd_move_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_new_session_entry	src/dev/tmux/cmd-new-session.c	/^const struct cmd_entry cmd_new_session_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_new_session_exec	src/dev/tmux/cmd-new-session.c	/^cmd_new_session_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_new_window_entry	src/dev/tmux/cmd-new-window.c	/^const struct cmd_entry cmd_new_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_new_window_exec	src/dev/tmux/cmd-new-window.c	/^cmd_new_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_next_layout_entry	src/dev/tmux/cmd-select-layout.c	/^const struct cmd_entry cmd_next_layout_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_next_window_entry	src/dev/tmux/cmd-select-window.c	/^const struct cmd_entry cmd_next_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_pack_argv	src/dev/tmux/cmd.c	/^cmd_pack_argv(int argc, char **argv, char *buf, size_t len)$/;"	f	typeref:typename:int
cmd_parse	src/dev/tmux/cmd.c	/^cmd_parse(int argc, char **argv, const char *file, u_int line, char **cause)$/;"	f	typeref:struct:cmd *
cmd_paste_buffer_entry	src/dev/tmux/cmd-paste-buffer.c	/^const struct cmd_entry cmd_paste_buffer_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_paste_buffer_exec	src/dev/tmux/cmd-paste-buffer.c	/^cmd_paste_buffer_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_pipe_pane_entry	src/dev/tmux/cmd-pipe-pane.c	/^const struct cmd_entry cmd_pipe_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_pipe_pane_error_callback	src/dev/tmux/cmd-pipe-pane.c	/^cmd_pipe_pane_error_callback(__unused struct bufferevent *bufev,$/;"	f	typeref:typename:void	file:
cmd_pipe_pane_exec	src/dev/tmux/cmd-pipe-pane.c	/^cmd_pipe_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_pipe_pane_write_callback	src/dev/tmux/cmd-pipe-pane.c	/^cmd_pipe_pane_write_callback(__unused struct bufferevent *bufev, void *data)$/;"	f	typeref:typename:void	file:
cmd_previous_layout_entry	src/dev/tmux/cmd-select-layout.c	/^const struct cmd_entry cmd_previous_layout_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_previous_window_entry	src/dev/tmux/cmd-select-window.c	/^const struct cmd_entry cmd_previous_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_print	src/dev/tmux/cmd.c	/^cmd_print(struct cmd *cmd)$/;"	f	typeref:typename:char *
cmd_refresh_client_entry	src/dev/tmux/cmd-refresh-client.c	/^const struct cmd_entry cmd_refresh_client_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_refresh_client_exec	src/dev/tmux/cmd-refresh-client.c	/^cmd_refresh_client_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_rename_session_entry	src/dev/tmux/cmd-rename-session.c	/^const struct cmd_entry cmd_rename_session_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_rename_session_exec	src/dev/tmux/cmd-rename-session.c	/^cmd_rename_session_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_rename_window_entry	src/dev/tmux/cmd-rename-window.c	/^const struct cmd_entry cmd_rename_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_rename_window_exec	src/dev/tmux/cmd-rename-window.c	/^cmd_rename_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_resize_pane_entry	src/dev/tmux/cmd-resize-pane.c	/^const struct cmd_entry cmd_resize_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_resize_pane_exec	src/dev/tmux/cmd-resize-pane.c	/^cmd_resize_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_resize_pane_mouse_update	src/dev/tmux/cmd-resize-pane.c	/^cmd_resize_pane_mouse_update(struct client *c, struct mouse_event *m)$/;"	f	typeref:typename:void	file:
cmd_respawn_pane_entry	src/dev/tmux/cmd-respawn-pane.c	/^const struct cmd_entry cmd_respawn_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_respawn_pane_exec	src/dev/tmux/cmd-respawn-pane.c	/^cmd_respawn_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_respawn_window_entry	src/dev/tmux/cmd-respawn-window.c	/^const struct cmd_entry cmd_respawn_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_respawn_window_exec	src/dev/tmux/cmd-respawn-window.c	/^cmd_respawn_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_retval	src/dev/tmux/tmux.h	/^enum cmd_retval {$/;"	g
cmd_rotate_window_entry	src/dev/tmux/cmd-rotate-window.c	/^const struct cmd_entry cmd_rotate_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_rotate_window_exec	src/dev/tmux/cmd-rotate-window.c	/^cmd_rotate_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_run_shell_callback	src/dev/tmux/cmd-run-shell.c	/^cmd_run_shell_callback(struct job *job)$/;"	f	typeref:typename:void	file:
cmd_run_shell_data	src/dev/tmux/cmd-run-shell.c	/^struct cmd_run_shell_data {$/;"	s	file:
cmd_run_shell_entry	src/dev/tmux/cmd-run-shell.c	/^const struct cmd_entry cmd_run_shell_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_run_shell_exec	src/dev/tmux/cmd-run-shell.c	/^cmd_run_shell_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_run_shell_free	src/dev/tmux/cmd-run-shell.c	/^cmd_run_shell_free(void *data)$/;"	f	typeref:typename:void	file:
cmd_run_shell_print	src/dev/tmux/cmd-run-shell.c	/^cmd_run_shell_print(struct job *job, const char *msg)$/;"	f	typeref:typename:void	file:
cmd_save_buffer_entry	src/dev/tmux/cmd-save-buffer.c	/^const struct cmd_entry cmd_save_buffer_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_save_buffer_exec	src/dev/tmux/cmd-save-buffer.c	/^cmd_save_buffer_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_select_layout_entry	src/dev/tmux/cmd-select-layout.c	/^const struct cmd_entry cmd_select_layout_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_select_layout_exec	src/dev/tmux/cmd-select-layout.c	/^cmd_select_layout_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_select_pane_entry	src/dev/tmux/cmd-select-pane.c	/^const struct cmd_entry cmd_select_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_select_pane_exec	src/dev/tmux/cmd-select-pane.c	/^cmd_select_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_select_window_entry	src/dev/tmux/cmd-select-window.c	/^const struct cmd_entry cmd_select_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_select_window_exec	src/dev/tmux/cmd-select-window.c	/^cmd_select_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_send_keys_entry	src/dev/tmux/cmd-send-keys.c	/^const struct cmd_entry cmd_send_keys_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_send_keys_exec	src/dev/tmux/cmd-send-keys.c	/^cmd_send_keys_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_send_keys_inject	src/dev/tmux/cmd-send-keys.c	/^cmd_send_keys_inject(struct client *c, struct cmdq_item *item, key_code key)$/;"	f	typeref:typename:void	file:
cmd_send_prefix_entry	src/dev/tmux/cmd-send-keys.c	/^const struct cmd_entry cmd_send_prefix_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_set_buffer_entry	src/dev/tmux/cmd-set-buffer.c	/^const struct cmd_entry cmd_set_buffer_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_set_buffer_exec	src/dev/tmux/cmd-set-buffer.c	/^cmd_set_buffer_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_set_environment_entry	src/dev/tmux/cmd-set-environment.c	/^const struct cmd_entry cmd_set_environment_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_set_environment_exec	src/dev/tmux/cmd-set-environment.c	/^cmd_set_environment_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_set_hook_entry	src/dev/tmux/cmd-set-hook.c	/^const struct cmd_entry cmd_set_hook_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_set_hook_exec	src/dev/tmux/cmd-set-hook.c	/^cmd_set_hook_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_set_option_choice	src/dev/tmux/cmd-set-option.c	/^cmd_set_option_choice(struct cmdq_item *item,$/;"	f	typeref:typename:int	file:
cmd_set_option_entry	src/dev/tmux/cmd-set-option.c	/^const struct cmd_entry cmd_set_option_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_set_option_exec	src/dev/tmux/cmd-set-option.c	/^cmd_set_option_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_set_option_flag	src/dev/tmux/cmd-set-option.c	/^cmd_set_option_flag(struct cmdq_item *item,$/;"	f	typeref:typename:int	file:
cmd_set_option_set	src/dev/tmux/cmd-set-option.c	/^cmd_set_option_set(struct cmd *self, struct cmdq_item *item, struct options *oo,$/;"	f	typeref:typename:int	file:
cmd_set_window_option_entry	src/dev/tmux/cmd-set-option.c	/^const struct cmd_entry cmd_set_window_option_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_show_buffer_entry	src/dev/tmux/cmd-save-buffer.c	/^const struct cmd_entry cmd_show_buffer_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_show_environment_entry	src/dev/tmux/cmd-show-environment.c	/^const struct cmd_entry cmd_show_environment_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_show_environment_escape	src/dev/tmux/cmd-show-environment.c	/^cmd_show_environment_escape(struct environ_entry *envent)$/;"	f	typeref:typename:char *	file:
cmd_show_environment_exec	src/dev/tmux/cmd-show-environment.c	/^cmd_show_environment_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_show_environment_print	src/dev/tmux/cmd-show-environment.c	/^cmd_show_environment_print(struct cmd *self, struct cmdq_item *item,$/;"	f	typeref:typename:void	file:
cmd_show_hooks_entry	src/dev/tmux/cmd-set-hook.c	/^const struct cmd_entry cmd_show_hooks_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_show_messages_entry	src/dev/tmux/cmd-show-messages.c	/^const struct cmd_entry cmd_show_messages_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_show_messages_exec	src/dev/tmux/cmd-show-messages.c	/^cmd_show_messages_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_show_messages_jobs	src/dev/tmux/cmd-show-messages.c	/^cmd_show_messages_jobs(struct cmdq_item *item, int blank)$/;"	f	typeref:typename:int	file:
cmd_show_messages_terminals	src/dev/tmux/cmd-show-messages.c	/^cmd_show_messages_terminals(struct cmdq_item *item, int blank)$/;"	f	typeref:typename:int	file:
cmd_show_options_all	src/dev/tmux/cmd-show-options.c	/^cmd_show_options_all(struct cmd *self, struct cmdq_item *item,$/;"	f	typeref:enum:cmd_retval	file:
cmd_show_options_entry	src/dev/tmux/cmd-show-options.c	/^const struct cmd_entry cmd_show_options_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_show_options_exec	src/dev/tmux/cmd-show-options.c	/^cmd_show_options_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_show_options_one	src/dev/tmux/cmd-show-options.c	/^cmd_show_options_one(struct cmd *self, struct cmdq_item *item,$/;"	f	typeref:enum:cmd_retval	file:
cmd_show_options_print	src/dev/tmux/cmd-show-options.c	/^cmd_show_options_print(struct cmd *self, struct cmdq_item *item,$/;"	f	typeref:typename:void	file:
cmd_show_window_options_entry	src/dev/tmux/cmd-show-options.c	/^const struct cmd_entry cmd_show_window_options_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_source_file_done	src/dev/tmux/cmd-source-file.c	/^cmd_source_file_done(struct cmdq_item *item, __unused void *data)$/;"	f	typeref:enum:cmd_retval	file:
cmd_source_file_entry	src/dev/tmux/cmd-source-file.c	/^const struct cmd_entry cmd_source_file_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_source_file_exec	src/dev/tmux/cmd-source-file.c	/^cmd_source_file_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_split_window_entry	src/dev/tmux/cmd-split-window.c	/^const struct cmd_entry cmd_split_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_split_window_exec	src/dev/tmux/cmd-split-window.c	/^cmd_split_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_start_server_entry	src/dev/tmux/cmd-kill-server.c	/^const struct cmd_entry cmd_start_server_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_string_copy	src/dev/tmux/cmd-string.c	/^cmd_string_copy(char **dst, char *src, size_t *len)$/;"	f	typeref:typename:void	file:
cmd_string_expand_tilde	src/dev/tmux/cmd-string.c	/^cmd_string_expand_tilde(const char *s, size_t *p)$/;"	f	typeref:typename:char *	file:
cmd_string_first	src/dev/tmux/cmd-string.c	/^#define cmd_string_first(/;"	d	file:
cmd_string_getc	src/dev/tmux/cmd-string.c	/^cmd_string_getc(const char *s, size_t *p)$/;"	f	typeref:typename:int	file:
cmd_string_other	src/dev/tmux/cmd-string.c	/^#define cmd_string_other(/;"	d	file:
cmd_string_parse	src/dev/tmux/cmd-string.c	/^cmd_string_parse(const char *s, const char *file, u_int line, char **cause)$/;"	f	typeref:struct:cmd_list *
cmd_string_split	src/dev/tmux/cmd-string.c	/^cmd_string_split(const char *s, int *rargc, char ***rargv)$/;"	f	typeref:typename:int
cmd_string_string	src/dev/tmux/cmd-string.c	/^cmd_string_string(const char *s, size_t *p, char endch, int esc)$/;"	f	typeref:typename:char *	file:
cmd_string_ungetc	src/dev/tmux/cmd-string.c	/^cmd_string_ungetc(size_t *p)$/;"	f	typeref:typename:void	file:
cmd_string_variable	src/dev/tmux/cmd-string.c	/^cmd_string_variable(const char *s, size_t *p)$/;"	f	typeref:typename:char *	file:
cmd_stringify_argv	src/dev/tmux/cmd.c	/^cmd_stringify_argv(int argc, char **argv)$/;"	f	typeref:typename:char *
cmd_suspend_client_entry	src/dev/tmux/cmd-detach-client.c	/^const struct cmd_entry cmd_suspend_client_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_swap_pane_entry	src/dev/tmux/cmd-swap-pane.c	/^const struct cmd_entry cmd_swap_pane_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_swap_pane_exec	src/dev/tmux/cmd-swap-pane.c	/^cmd_swap_pane_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_swap_window_entry	src/dev/tmux/cmd-swap-window.c	/^const struct cmd_entry cmd_swap_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_swap_window_exec	src/dev/tmux/cmd-swap-window.c	/^cmd_swap_window_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_switch_client_entry	src/dev/tmux/cmd-switch-client.c	/^const struct cmd_entry cmd_switch_client_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_switch_client_exec	src/dev/tmux/cmd-switch-client.c	/^cmd_switch_client_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_table	src/dev/tmux/cmd.c	/^const struct cmd_entry *cmd_table[] = {$/;"	v	typeref:typename:const struct cmd_entry * []
cmd_template_replace	src/dev/tmux/cmd.c	/^cmd_template_replace(const char *template, const char *s, int idx)$/;"	f	typeref:typename:char *
cmd_try_alias	src/dev/tmux/cmd.c	/^cmd_try_alias(int *argc, char ***argv)$/;"	f	typeref:typename:int	file:
cmd_unbind_key_entry	src/dev/tmux/cmd-unbind-key.c	/^const struct cmd_entry cmd_unbind_key_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_unbind_key_exec	src/dev/tmux/cmd-unbind-key.c	/^cmd_unbind_key_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_unlink_window_entry	src/dev/tmux/cmd-kill-window.c	/^const struct cmd_entry cmd_unlink_window_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_unpack_argv	src/dev/tmux/cmd.c	/^cmd_unpack_argv(char *buf, size_t len, int argc, char ***argv)$/;"	f	typeref:typename:int
cmd_wait_for_add	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_add(const char *name)$/;"	f	typeref:struct:wait_channel *	file:
cmd_wait_for_entry	src/dev/tmux/cmd-wait-for.c	/^const struct cmd_entry cmd_wait_for_entry = {$/;"	v	typeref:typename:const struct cmd_entry
cmd_wait_for_exec	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_exec(struct cmd *self, struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmd_wait_for_flush	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_flush(void)$/;"	f	typeref:typename:void
cmd_wait_for_lock	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_lock(struct cmdq_item *item, const char *name,$/;"	f	typeref:enum:cmd_retval	file:
cmd_wait_for_remove	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_remove(struct wait_channel *wc)$/;"	f	typeref:typename:void	file:
cmd_wait_for_signal	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_signal(__unused struct cmdq_item *item, const char *name,$/;"	f	typeref:enum:cmd_retval	file:
cmd_wait_for_unlock	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_unlock(struct cmdq_item *item, const char *name,$/;"	f	typeref:enum:cmd_retval	file:
cmd_wait_for_wait	src/dev/tmux/cmd-wait-for.c	/^cmd_wait_for_wait(struct cmdq_item *item, const char *name,$/;"	f	typeref:enum:cmd_retval	file:
cmdlist	src/dev/tmux/tmux.h	/^	struct cmd_list		*cmdlist;$/;"	m	struct:cmdq_item	typeref:struct:cmd_list *
cmdlist	src/dev/tmux/tmux.h	/^	struct cmd_list		*cmdlist;$/;"	m	struct:key_binding	typeref:struct:cmd_list *
cmdlist	src/dev/tmux/tmux.h	/^	struct cmd_list	*cmdlist;$/;"	m	struct:hook	typeref:struct:cmd_list *
cmdq_append	src/dev/tmux/cmd-queue.c	/^cmdq_append(struct client *c, struct cmdq_item *item)$/;"	f	typeref:typename:void
cmdq_cb	src/dev/tmux/tmux.h	/^typedef enum cmd_retval (*cmdq_cb) (struct cmdq_item *, void *);$/;"	t	typeref:enum:cmd_retval (*)(struct cmdq_item *,void *)
cmdq_error	src/dev/tmux/cmd-queue.c	/^cmdq_error(struct cmdq_item *item, const char *fmt, ...)$/;"	f	typeref:typename:void
cmdq_find_flag	src/dev/tmux/cmd-queue.c	/^cmdq_find_flag(struct cmdq_item *item, struct cmd_find_state *fs,$/;"	f	typeref:enum:cmd_retval	file:
cmdq_fire_callback	src/dev/tmux/cmd-queue.c	/^cmdq_fire_callback(struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmdq_fire_command	src/dev/tmux/cmd-queue.c	/^cmdq_fire_command(struct cmdq_item *item)$/;"	f	typeref:enum:cmd_retval	file:
cmdq_format	src/dev/tmux/cmd-queue.c	/^cmdq_format(struct cmdq_item *item, const char *key, const char *fmt, ...)$/;"	f	typeref:typename:void
cmdq_get	src/dev/tmux/cmd-queue.c	/^cmdq_get(struct client *c)$/;"	f	typeref:struct:cmdq_list *	file:
cmdq_get_callback	src/dev/tmux/tmux.h	/^#define cmdq_get_callback(/;"	d
cmdq_get_callback1	src/dev/tmux/cmd-queue.c	/^cmdq_get_callback1(const char *name, cmdq_cb cb, void *data)$/;"	f	typeref:struct:cmdq_item *
cmdq_get_command	src/dev/tmux/cmd-queue.c	/^cmdq_get_command(struct cmd_list *cmdlist, struct cmd_find_state *current,$/;"	f	typeref:struct:cmdq_item *
cmdq_guard	src/dev/tmux/cmd-queue.c	/^cmdq_guard(struct cmdq_item *item, const char *guard, int flags)$/;"	f	typeref:typename:void
cmdq_insert_after	src/dev/tmux/cmd-queue.c	/^cmdq_insert_after(struct cmdq_item *after, struct cmdq_item *item)$/;"	f	typeref:typename:void
cmdq_item	src/dev/tmux/tmux.h	/^struct cmdq_item {$/;"	s
cmdq_name	src/dev/tmux/cmd-queue.c	/^cmdq_name(struct client *c)$/;"	f	typeref:typename:const char *	file:
cmdq_next	src/dev/tmux/cmd-queue.c	/^cmdq_next(struct client *c)$/;"	f	typeref:typename:u_int
cmdq_next_group	src/dev/tmux/cmd-queue.c	/^cmdq_next_group(void)$/;"	f	typeref:typename:u_int	file:
cmdq_print	src/dev/tmux/cmd-queue.c	/^cmdq_print(struct cmdq_item *item, const char *fmt, ...)$/;"	f	typeref:typename:void
cmdq_remove	src/dev/tmux/cmd-queue.c	/^cmdq_remove(struct cmdq_item *item)$/;"	f	typeref:typename:void	file:
cmdq_remove_group	src/dev/tmux/cmd-queue.c	/^cmdq_remove_group(struct cmdq_item *item)$/;"	f	typeref:typename:void	file:
cmdq_shared	src/dev/tmux/tmux.h	/^struct cmdq_shared {$/;"	s
cmdq_type	src/dev/tmux/tmux.h	/^enum cmdq_type {$/;"	g
cmp	src/dev/ninja/src/build_test.cc	/^      static bool cmp(const Edge* a, const Edge* b) {$/;"	f	struct:PlanTest::FindWorkSorted::CompareEdgesByOutput	typeref:typename:bool	file:
cmp_procs	src/dev/tmux/osdep-dragonfly.c	/^cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2)$/;"	f	typeref:struct:kinfo_proc *
cmp_procs	src/dev/tmux/osdep-freebsd.c	/^cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2)$/;"	f	typeref:struct:kinfo_proc *
cmp_procs	src/dev/tmux/osdep-netbsd.c	/^cmp_procs(struct kinfo_proc2 *p1, struct kinfo_proc2 *p2)$/;"	f	typeref:struct:kinfo_proc2 *
cmp_procs	src/dev/tmux/osdep-openbsd.c	/^cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2)$/;"	f	typeref:struct:kinfo_proc *	file:
cn	editors/vim/config/mappings.vim	/^nnoremap cn *``cgn$/;"	m
cn	editors/vim/config/mappings.vim	/^vnoremap <expr> cn "y\/\\\\V\\<C-r>=escape(@\\", '\/')\\<CR>\\<CR>" . "``cgn"$/;"	m
code	src/dev/ninja/doc/style.css	/^code {$/;"	s
code	src/dev/ninja/doc/style.css	/^pre, code {$/;"	s
code	src/dev/tmux/grid.c	/^		u_int	code;$/;"	m	struct:grid_string_cells_code::__anonab03843e0108	typeref:typename:u_int	file:
code	src/dev/tmux/tty-keys.c	/^	enum tty_code_code	code;$/;"	m	struct:tty_default_key_code	typeref:enum:tty_code_code	file:
codes	src/dev/tmux/tmux.h	/^	struct tty_code	*codes;$/;"	m	struct:tty_term	typeref:struct:tty_code *
colgc	src/dev/tmux/tmux.h	/^	struct grid_cell colgc;$/;"	m	struct:window_pane	typeref:struct:grid_cell
color	editors/vim/themes/one.vim	/^  fun <SID>color(r, g, b)$/;"	f
colour_256to16	src/dev/tmux/colour.c	/^colour_256to16(u_char c)$/;"	f	typeref:typename:u_char
colour_dist_sq	src/dev/tmux/colour.c	/^colour_dist_sq(int R, int G, int B, int r, int g, int b)$/;"	f	typeref:typename:int	file:
colour_find_rgb	src/dev/tmux/colour.c	/^colour_find_rgb(u_char r, u_char g, u_char b)$/;"	f	typeref:typename:int
colour_fromstring	src/dev/tmux/colour.c	/^colour_fromstring(const char *s)$/;"	f	typeref:typename:int
colour_join_rgb	src/dev/tmux/colour.c	/^colour_join_rgb(u_char r, u_char g, u_char b)$/;"	f	typeref:typename:int
colour_split_rgb	src/dev/tmux/colour.c	/^colour_split_rgb(int c, u_char *r, u_char *g, u_char *b)$/;"	f	typeref:typename:void
colour_to_6cube	src/dev/tmux/colour.c	/^colour_to_6cube(int v)$/;"	f	typeref:typename:int	file:
colour_tostring	src/dev/tmux/colour.c	/^colour_tostring(int c)$/;"	f	typeref:typename:const char *
colours	shells/general/functions.bash	/^function colours() {$/;"	f
colours	shells/zsh/functions.zsh	/^function colours() {$/;"	f
command	src/dev/tmux/tmux.h	/^	char			*command;$/;"	m	struct:window_choose_data	typeref:typename:char *
command	src/dev/tmux/tmux.h	/^	void		 (*command)(struct window_pane *, struct client *,$/;"	m	struct:window_mode	typeref:typename:void (*)(struct window_pane *,struct client *,struct session *,struct args *,struct mouse_event *)
command	src/dev/tmux/window-buffer.c	/^	char				 *command;$/;"	m	struct:window_buffer_modedata	typeref:typename:char *	file:
command	src/dev/tmux/window-client.c	/^	char				 *command;$/;"	m	struct:window_client_modedata	typeref:typename:char *	file:
command	src/dev/tmux/window-tree.c	/^	char				 *command;$/;"	m	struct:window_tree_modedata	typeref:typename:char *	file:
command_edge_count	src/dev/ninja/src/build.h	/^  int command_edge_count() const { return command_edges_; }$/;"	f	struct:Plan	typeref:typename:int
command_edges_	src/dev/ninja/src/build.h	/^  int command_edges_;$/;"	m	struct:Plan	typeref:typename:int
command_hash	src/dev/ninja/src/build_log.h	/^    uint64_t command_hash;$/;"	m	struct:BuildLog::LogEntry	typeref:typename:uint64_t
command_runner_	src/dev/ninja/src/build.h	/^  auto_ptr<CommandRunner> command_runner_;$/;"	m	struct:Builder	typeref:typename:auto_ptr<CommandRunner>
command_runner_	src/dev/ninja/src/build_test.cc	/^  FakeCommandRunner command_runner_;$/;"	m	struct:BuildTest	typeref:typename:FakeCommandRunner	file:
commands_ran_	src/dev/ninja/src/build_test.cc	/^  vector<string> commands_ran_;$/;"	m	struct:FakeCommandRunner	typeref:typename:vector<string>	file:
comment	src/dev/ninja/configure.py	/^    def comment(self, text):$/;"	m	class:Bootstrap
comment	src/dev/ninja/misc/ninja_syntax.py	/^    def comment(self, text, has_path=False):$/;"	m	class:Writer
common	shells/general/z.bash	/^            function common(matches) {$/;"	f
common	shells/zsh/z.zsh	/^            function common(matches) {$/;"	f
compat/$(DEPDIR)/$(am__dirstamp)	src/dev/tmux/Makefile	/^compat\/$(DEPDIR)\/$(am__dirstamp):$/;"	t
compat/$(DEPDIR)/$(am__dirstamp)	src/dev/tmux/Makefile.in	/^compat\/$(DEPDIR)\/$(am__dirstamp):$/;"	t
compat/$(am__dirstamp)	src/dev/tmux/Makefile	/^compat\/$(am__dirstamp):$/;"	t
compat/$(am__dirstamp)	src/dev/tmux/Makefile.in	/^compat\/$(am__dirstamp):$/;"	t
compat/forkpty-linux.$(OBJEXT)	src/dev/tmux/Makefile	/^compat\/forkpty-linux.$(OBJEXT): compat\/$(am__dirstamp) \\$/;"	t
compat/utf8proc.$(OBJEXT)	src/dev/tmux/Makefile	/^compat\/utf8proc.$(OBJEXT): compat\/$(am__dirstamp) \\$/;"	t
compat/utf8proc.$(OBJEXT)	src/dev/tmux/Makefile.in	/^compat\/utf8proc.$(OBJEXT): compat\/$(am__dirstamp) \\$/;"	t
completecb	src/dev/tmux/tmux.h	/^	job_complete_cb		 completecb;$/;"	m	struct:job	typeref:typename:job_complete_cb
compose	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def compose(stream, Loader=Loader):$/;"	f
compose	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def compose(stream, Loader=Loader):$/;"	f
compose_all	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def compose_all(stream, Loader=Loader):$/;"	f
compose_all	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def compose_all(stream, Loader=Loader):$/;"	f
compose_document	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def compose_document(self):$/;"	m	class:Composer
compose_document	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def compose_document(self):$/;"	m	class:Composer
compose_mapping_node	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def compose_mapping_node(self, anchor):$/;"	m	class:Composer
compose_mapping_node	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def compose_mapping_node(self, anchor):$/;"	m	class:Composer
compose_node	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def compose_node(self, parent, index):$/;"	m	class:Composer
compose_node	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def compose_node(self, parent, index):$/;"	m	class:Composer
compose_scalar_node	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def compose_scalar_node(self, anchor):$/;"	m	class:Composer
compose_scalar_node	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def compose_scalar_node(self, anchor):$/;"	m	class:Composer
compose_sequence_node	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def compose_sequence_node(self, anchor):$/;"	m	class:Composer
compose_sequence_node	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def compose_sequence_node(self, anchor):$/;"	m	class:Composer
config_	src/dev/ninja/src/build.cc	/^  const BuildConfig& config_;$/;"	m	struct:RealCommandRunner	typeref:typename:const BuildConfig &	file:
config_	src/dev/ninja/src/build.h	/^  const BuildConfig& config_;$/;"	m	struct:BuildStatus	typeref:typename:const BuildConfig &
config_	src/dev/ninja/src/build.h	/^  const BuildConfig& config_;$/;"	m	struct:Builder	typeref:typename:const BuildConfig &
config_	src/dev/ninja/src/build_test.cc	/^  BuildConfig config_;$/;"	m	struct:BuildTest	typeref:typename:BuildConfig	file:
config_	src/dev/ninja/src/clean.h	/^  const BuildConfig& config_;$/;"	m	struct:Cleaner	typeref:typename:const BuildConfig &
config_	src/dev/ninja/src/clean_test.cc	/^  BuildConfig config_;$/;"	m	struct:CleanTest	typeref:typename:BuildConfig	file:
config_	src/dev/ninja/src/ninja.cc	/^  const BuildConfig& config_;$/;"	m	struct:__anon193baac40110::NinjaMain	typeref:typename:const BuildConfig &	file:
config_str	src/dev/ninja/configure.py	/^    config_str = ' '.join([k + '=' + pipes.quote(configure_env[k])$/;"	v
configure_args	src/dev/ninja/configure.py	/^configure_args = sys.argv[1:]$/;"	v
configure_env	src/dev/ninja/configure.py	/^configure_env = dict((k, os.environ[k]) for k in os.environ if k in env_keys)$/;"	v
console_	src/dev/ninja/src/line_printer.h	/^  void* console_;$/;"	m	struct:LinePrinter	typeref:typename:void *
console_locked_	src/dev/ninja/src/line_printer.h	/^  bool console_locked_;$/;"	m	struct:LinePrinter	typeref:typename:bool
construct1	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    def construct1(constructor, node):$/;"	f	function:_make_objects	file:
construct1	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    def construct1(constructor, node):$/;"	f	function:_make_objects	file:
construct_document	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_document(self, node):$/;"	m	class:BaseConstructor
construct_document	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_document(self, node):$/;"	m	class:BaseConstructor
construct_event	meta/dotbot/lib/pyyaml/tests/lib/test_emitter.py	/^    def construct_event(self, node):$/;"	m	class:EventsLoader
construct_event	meta/dotbot/lib/pyyaml/tests/lib3/test_emitter.py	/^    def construct_event(self, node):$/;"	m	class:EventsLoader
construct_mapping	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_mapping(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_mapping	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_mapping(self, node, deep=False):$/;"	m	class:SafeConstructor
construct_mapping	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_mapping(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_mapping	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_mapping(self, node, deep=False):$/;"	m	class:SafeConstructor
construct_mapping	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^        def construct_mapping(self, node):$/;"	m	class:_make_canonical_loader.MyCanonicalLoader
construct_mapping	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^        def construct_mapping(self, node):$/;"	m	class:_make_loader.MyLoader
construct_mapping	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^        def construct_mapping(self, node):$/;"	m	class:_make_canonical_loader.MyCanonicalLoader
construct_mapping	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^        def construct_mapping(self, node):$/;"	m	class:_make_loader.MyLoader
construct_object	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_object(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_object	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_object(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_pairs	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_pairs(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_pairs	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_pairs(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_python_bytes	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_bytes(self, node):$/;"	m	class:Constructor
construct_python_complex	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_complex(self, node):$/;"	m	class:Constructor
construct_python_complex	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_complex(self, node):$/;"	m	class:Constructor
construct_python_long	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_long(self, node):$/;"	m	class:Constructor
construct_python_long	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_long(self, node):$/;"	m	class:Constructor
construct_python_module	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_module(self, suffix, node):$/;"	m	class:Constructor
construct_python_module	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_module(self, suffix, node):$/;"	m	class:Constructor
construct_python_name	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_name(self, suffix, node):$/;"	m	class:Constructor
construct_python_name	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_name(self, suffix, node):$/;"	m	class:Constructor
construct_python_object	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_object(self, suffix, node):$/;"	m	class:Constructor
construct_python_object	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_object(self, suffix, node):$/;"	m	class:Constructor
construct_python_object_apply	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_object_apply(self, suffix, node, newobj=False):$/;"	m	class:Constructor
construct_python_object_apply	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_object_apply(self, suffix, node, newobj=False):$/;"	m	class:Constructor
construct_python_object_new	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_object_new(self, suffix, node):$/;"	m	class:Constructor
construct_python_object_new	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_object_new(self, suffix, node):$/;"	m	class:Constructor
construct_python_str	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_str(self, node):$/;"	m	class:Constructor
construct_python_str	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_str(self, node):$/;"	m	class:Constructor
construct_python_tuple	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_tuple(self, node):$/;"	m	class:Constructor
construct_python_tuple	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_tuple(self, node):$/;"	m	class:Constructor
construct_python_unicode	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_python_unicode(self, node):$/;"	m	class:Constructor
construct_python_unicode	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_python_unicode(self, node):$/;"	m	class:Constructor
construct_scalar	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_scalar(self, node):$/;"	m	class:BaseConstructor
construct_scalar	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_scalar(self, node):$/;"	m	class:SafeConstructor
construct_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_scalar(self, node):$/;"	m	class:BaseConstructor
construct_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_scalar(self, node):$/;"	m	class:SafeConstructor
construct_sequence	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_sequence(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_sequence	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_sequence(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_sequence	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^        def construct_sequence(self, node):$/;"	m	class:_make_canonical_loader.MyCanonicalLoader
construct_sequence	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^        def construct_sequence(self, node):$/;"	m	class:_make_loader.MyLoader
construct_sequence	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^        def construct_sequence(self, node):$/;"	m	class:_make_canonical_loader.MyCanonicalLoader
construct_sequence	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^        def construct_sequence(self, node):$/;"	m	class:_make_loader.MyLoader
construct_undefined	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_undefined(self, node):$/;"	m	class:SafeConstructor
construct_undefined	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_undefined(self, node):$/;"	m	class:SafeConstructor
construct_undefined	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^        def construct_undefined(self, node):$/;"	m	class:_make_canonical_loader.MyCanonicalLoader
construct_undefined	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^        def construct_undefined(self, node):$/;"	m	class:_make_loader.MyLoader
construct_undefined	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^        def construct_undefined(self, node):$/;"	m	class:_make_canonical_loader.MyCanonicalLoader
construct_undefined	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^        def construct_undefined(self, node):$/;"	m	class:_make_loader.MyLoader
construct_yaml_binary	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_binary(self, node):$/;"	m	class:SafeConstructor
construct_yaml_binary	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_binary(self, node):$/;"	m	class:SafeConstructor
construct_yaml_bool	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_bool(self, node):$/;"	m	class:SafeConstructor
construct_yaml_bool	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_bool(self, node):$/;"	m	class:SafeConstructor
construct_yaml_float	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_float(self, node):$/;"	m	class:SafeConstructor
construct_yaml_float	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_float(self, node):$/;"	m	class:SafeConstructor
construct_yaml_int	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_int(self, node):$/;"	m	class:SafeConstructor
construct_yaml_int	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_int(self, node):$/;"	m	class:SafeConstructor
construct_yaml_map	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_map(self, node):$/;"	m	class:SafeConstructor
construct_yaml_map	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_map(self, node):$/;"	m	class:SafeConstructor
construct_yaml_null	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_null(self, node):$/;"	m	class:SafeConstructor
construct_yaml_null	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_null(self, node):$/;"	m	class:SafeConstructor
construct_yaml_object	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_object(self, node, cls):$/;"	m	class:SafeConstructor
construct_yaml_object	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_object(self, node, cls):$/;"	m	class:SafeConstructor
construct_yaml_omap	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_omap(self, node):$/;"	m	class:SafeConstructor
construct_yaml_omap	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_omap(self, node):$/;"	m	class:SafeConstructor
construct_yaml_pairs	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_pairs(self, node):$/;"	m	class:SafeConstructor
construct_yaml_pairs	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_pairs(self, node):$/;"	m	class:SafeConstructor
construct_yaml_seq	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_seq(self, node):$/;"	m	class:SafeConstructor
construct_yaml_seq	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_seq(self, node):$/;"	m	class:SafeConstructor
construct_yaml_set	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_set(self, node):$/;"	m	class:SafeConstructor
construct_yaml_set	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_set(self, node):$/;"	m	class:SafeConstructor
construct_yaml_str	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_str(self, node):$/;"	m	class:SafeConstructor
construct_yaml_str	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_str(self, node):$/;"	m	class:SafeConstructor
construct_yaml_timestamp	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def construct_yaml_timestamp(self, node):$/;"	m	class:SafeConstructor
construct_yaml_timestamp	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def construct_yaml_timestamp(self, node):$/;"	m	class:SafeConstructor
content	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def content(esc_seqs: false)$/;"	f	class:TerminalSession
content_scripts	src/crouton-clipboard/manifest.json	/^  "content_scripts": [{$/;"	a
contents	src/dev/ninja/src/test.h	/^    string contents;$/;"	m	struct:VirtualFileSystem::Entry	typeref:typename:string
control_callback	src/dev/tmux/control.c	/^control_callback(struct client *c, int closed, __unused void *data)$/;"	f	typeref:typename:void
control_error	src/dev/tmux/control.c	/^control_error(struct cmdq_item *item, void *data)$/;"	f	typeref:enum:cmd_retval	file:
control_notify_client_session_changed	src/dev/tmux/control-notify.c	/^control_notify_client_session_changed(struct client *cc)$/;"	f	typeref:typename:void
control_notify_input	src/dev/tmux/control-notify.c	/^control_notify_input(struct client *c, struct window_pane *wp,$/;"	f	typeref:typename:void
control_notify_pane_mode_changed	src/dev/tmux/control-notify.c	/^control_notify_pane_mode_changed(int pane)$/;"	f	typeref:typename:void
control_notify_session_closed	src/dev/tmux/control-notify.c	/^control_notify_session_closed(__unused struct session *s)$/;"	f	typeref:typename:void
control_notify_session_created	src/dev/tmux/control-notify.c	/^control_notify_session_created(__unused struct session *s)$/;"	f	typeref:typename:void
control_notify_session_renamed	src/dev/tmux/control-notify.c	/^control_notify_session_renamed(struct session *s)$/;"	f	typeref:typename:void
control_notify_session_window_changed	src/dev/tmux/control-notify.c	/^control_notify_session_window_changed(struct session *s)$/;"	f	typeref:typename:void
control_notify_window_layout_changed	src/dev/tmux/control-notify.c	/^control_notify_window_layout_changed(struct window *w)$/;"	f	typeref:typename:void
control_notify_window_linked	src/dev/tmux/control-notify.c	/^control_notify_window_linked(__unused struct session *s, struct window *w)$/;"	f	typeref:typename:void
control_notify_window_pane_changed	src/dev/tmux/control-notify.c	/^control_notify_window_pane_changed(struct window *w)$/;"	f	typeref:typename:void
control_notify_window_renamed	src/dev/tmux/control-notify.c	/^control_notify_window_renamed(struct window *w)$/;"	f	typeref:typename:void
control_notify_window_unlinked	src/dev/tmux/control-notify.c	/^control_notify_window_unlinked(__unused struct session *s, struct window *w)$/;"	f	typeref:typename:void
control_write	src/dev/tmux/control.c	/^control_write(struct client *c, const char *fmt, ...)$/;"	f	typeref:typename:void
control_write_buffer	src/dev/tmux/control.c	/^control_write_buffer(struct client *c, struct evbuffer *buffer)$/;"	f	typeref:typename:void
copyTextToClipboard	src/crouton-clipboard/background.js	/^function copyTextToClipboard(text) {$/;"	f
copy_travis_yml	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^copy_travis_yml() {$/;"	f
count	src/dev/ninja/src/metrics.h	/^  int count;$/;"	m	struct:Metric	typeref:typename:int
cp	editors/vim/config/mappings.vim	/^nnoremap cp yap<S-}>p$/;"	m
cpbr	shells/zsh/git.zsh	/^alias cpbr="git rev-parse --abbrev-ref HEAD | pbcopy"$/;"	a
createListener	src/crouton-clipboard/background.js	/^function createListener(ws) {$/;"	f
create_directory_for_tests	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^create_directory_for_tests() {$/;"	f
create_page	src/dev/ninja/src/browse.py	/^def create_page(body):$/;"	f
create_test_plugin_helper	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^create_test_plugin_helper() {$/;"	f
created	src/dev/tmux/paste.c	/^	time_t		 created;$/;"	m	struct:paste_buffer	typeref:typename:time_t	file:
creation_time	src/dev/tmux/tmux.h	/^	struct timeval	 creation_time;$/;"	m	struct:client	typeref:struct:timeval
creation_time	src/dev/tmux/tmux.h	/^	struct timeval	 creation_time;$/;"	m	struct:session	typeref:struct:timeval
cscope	src/dev/tmux/Makefile	/^cscope: cscope.files$/;"	t
cscope	src/dev/tmux/Makefile.in	/^cscope: cscope.files$/;"	t
cscope.files	src/dev/tmux/Makefile	/^cscope.files: clean-cscope cscopelist$/;"	t
cscope.files	src/dev/tmux/Makefile.in	/^cscope.files: clean-cscope cscopelist$/;"	t
cscopelist	src/dev/tmux/Makefile	/^cscopelist: cscopelist-am$/;"	t
cscopelist	src/dev/tmux/Makefile.in	/^cscopelist: cscopelist-am$/;"	t
cscopelist-am	src/dev/tmux/Makefile	/^cscopelist-am: $(am__tagged_files)$/;"	t
cscopelist-am	src/dev/tmux/Makefile.in	/^cscopelist-am: $(am__tagged_files)$/;"	t
csf	editors/vim/config/plugins/all.vim	/^	nmap csf <Plug>DsfChange$/;"	m
cstyle	src/dev/tmux/tmux.h	/^	u_int			 cstyle;	\/* cursor style *\/$/;"	m	struct:screen	typeref:typename:u_int
cstyle	src/dev/tmux/tmux.h	/^	u_int		 cstyle;$/;"	m	struct:tty	typeref:typename:u_int
ctags	src/dev/tmux/Makefile	/^ctags: ctags-am$/;"	t
ctags	src/dev/tmux/Makefile.in	/^ctags: ctags-am$/;"	t
ctags-am	src/dev/tmux/Makefile	/^ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)$/;"	t
ctags-am	src/dev/tmux/Makefile.in	/^ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)$/;"	t
ctx	src/dev/tmux/input.c	/^	struct screen_write_ctx ctx;$/;"	m	struct:input_ctx	typeref:struct:screen_write_ctx	file:
cur_widget	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^                            _zsh_highlight_widget_$cur_widget() { builtin zle orig-$cur_widget -/;"	f
cur_widget	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^                      _zsh_highlight_widget_$cur_widget() { builtin zle orig-$cur_widget -- \\"\\/;"	f
current	src/dev/tmux/mode-tree.c	/^	u_int			  current;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
current	src/dev/tmux/tmux.h	/^	struct cmd_find_state	 current;$/;"	m	struct:cmdq_shared	typeref:struct:cmd_find_state
current	src/dev/tmux/tmux.h	/^	struct cmd_find_state	*current;$/;"	m	struct:cmd_find_state	typeref:struct:cmd_find_state *
current_line_color	languages/python/pdbrc.py	/^    current_line_color = 40  # black$/;"	v	class:Config
current_rate_	src/dev/ninja/src/build.h	/^  mutable SlidingRateInfo current_rate_;$/;"	m	struct:BuildStatus	typeref:typename:SlidingRateInfo
current_use	src/dev/ninja/src/state.h	/^  int current_use() const { return current_use_; }$/;"	f	struct:Pool	typeref:typename:int
current_use_	src/dev/ninja/src/state.h	/^  int current_use_;$/;"	m	struct:Pool	typeref:typename:int
cursor	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def cursor$/;"	f	class:TerminalSession
cursordrag	src/dev/tmux/window-copy.c	/^	} cursordrag;$/;"	m	struct:window_copy_mode_data	typeref:enum:window_copy_mode_data::__anon4b4b36d80303	file:
curw	src/dev/tmux/tmux.h	/^	struct winlink	*curw;$/;"	m	struct:session	typeref:struct:winlink *
cwd	src/dev/tmux/tmux.h	/^	const char	*cwd;$/;"	m	struct:client	typeref:typename:const char *
cwd	src/dev/tmux/tmux.h	/^	const char	*cwd;$/;"	m	struct:session	typeref:typename:const char *
cwd	src/dev/tmux/tmux.h	/^	const char	*cwd;$/;"	m	struct:window_pane	typeref:typename:const char *
cx	src/dev/tmux/tmux.h	/^	u_int			 cx;		\/* cursor x *\/$/;"	m	struct:screen	typeref:typename:u_int
cx	src/dev/tmux/tmux.h	/^	u_int		 cx;$/;"	m	struct:tty	typeref:typename:u_int
cx	src/dev/tmux/window-copy.c	/^	u_int		 cx;$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
cxx	src/dev/ninja/configure.py	/^def cxx(name, **kwargs):$/;"	f
cy	src/dev/tmux/tmux.h	/^	u_int			 cy;		\/* cursor y *\/$/;"	m	struct:screen	typeref:typename:u_int
cy	src/dev/tmux/tmux.h	/^	u_int		 cy;$/;"	m	struct:tty	typeref:typename:u_int
cy	src/dev/tmux/window-copy.c	/^	u_int		 cy;$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
daemon	src/dev/tmux/compat/daemon.c	/^daemon(int nochdir, int noclose)$/;"	f	typeref:typename:int
daemon_darwin	src/dev/tmux/compat/daemon-darwin.c	/^daemon_darwin(void)$/;"	f	typeref:typename:void
data	src/dev/tmux/compat/imsg.h	/^	void		*data;$/;"	m	struct:imsg	typeref:typename:void *
data	src/dev/tmux/input-keys.c	/^	const char	*data;$/;"	m	struct:input_key_ent	typeref:typename:const char *	file:
data	src/dev/tmux/paste.c	/^	char		*data;$/;"	m	struct:paste_buffer	typeref:typename:char *	file:
data	src/dev/tmux/screen-write.c	/^	char			 data[256];$/;"	m	struct:screen_write_collect_item	typeref:typename:char[256]	file:
data	src/dev/tmux/tmux.h	/^			u_char	data;$/;"	m	struct:grid_cell_entry::__anonc903038b020a::__anonc903038b0308	typeref:typename:u_char
data	src/dev/tmux/tmux.h	/^		} data;$/;"	m	union:grid_cell_entry::__anonc903038b020a	typeref:struct:grid_cell_entry::__anonc903038b020a::__anonc903038b0308
data	src/dev/tmux/tmux.h	/^	char	data[BUFSIZ];$/;"	m	struct:msg_stderr_data	typeref:typename:char[]
data	src/dev/tmux/tmux.h	/^	char	data[BUFSIZ];$/;"	m	struct:msg_stdin_data	typeref:typename:char[]
data	src/dev/tmux/tmux.h	/^	char	data[BUFSIZ];$/;"	m	struct:msg_stdout_data	typeref:typename:char[]
data	src/dev/tmux/tmux.h	/^	struct utf8_data	data;$/;"	m	struct:grid_cell	typeref:struct:utf8_data
data	src/dev/tmux/tmux.h	/^	u_char	data[UTF8_SIZE];$/;"	m	struct:utf8_data	typeref:typename:u_char[]
data	src/dev/tmux/tmux.h	/^	void			*data;$/;"	m	struct:cmdq_item	typeref:typename:void *
data	src/dev/tmux/tmux.h	/^	void			*data;$/;"	m	struct:job	typeref:typename:void *
data	src/dev/tmux/window-buffer.c	/^	struct mode_tree_data		 *data;$/;"	m	struct:window_buffer_modedata	typeref:struct:mode_tree_data *	file:
data	src/dev/tmux/window-client.c	/^	struct mode_tree_data		 *data;$/;"	m	struct:window_client_modedata	typeref:struct:mode_tree_data *	file:
data	src/dev/tmux/window-tree.c	/^	struct mode_tree_data		 *data;$/;"	m	struct:window_tree_modedata	typeref:struct:mode_tree_data *	file:
dataFile	src/crouton-clipboard/server.js	/^  var dataFile = os.homedir() + '\/.crouton-clipboard\/data.txt'$/;"	v
datadir	src/dev/tmux/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/dev/tmux/Makefile.in	/^datadir = @datadir@$/;"	m
datarootdir	src/dev/tmux/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/dev/tmux/Makefile.in	/^datarootdir = @datarootdir@$/;"	m
dead	src/dev/tmux/mode-tree.c	/^	int			  dead;$/;"	m	struct:mode_tree_data	typeref:typename:int	file:
dead	src/dev/tmux/window-tree.c	/^	int				  dead;$/;"	m	struct:window_tree_modedata	typeref:typename:int	file:
debug	meta/dotbot/dotbot/messenger/messenger.py	/^    def debug(self, message):$/;"	m	class:Messenger
debug	src/dev/tmux/configure.ac	/^	debug,$/;"	e
default	editors/vim/Makefile	/^default: install$/;"	t
default	src/dev/ninja/configure.py	/^    def default(self, paths):$/;"	m	class:Bootstrap
default	src/dev/ninja/misc/ninja_syntax.py	/^    def default(self, paths):$/;"	m	class:Writer
default_num	src/dev/tmux/tmux.h	/^	long long		  default_num;$/;"	m	struct:options_table_entry	typeref:typename:long long
default_str	src/dev/tmux/tmux.h	/^	const char		 *default_str;$/;"	m	struct:options_table_entry	typeref:typename:const char *
default_window_name	src/dev/tmux/names.c	/^default_window_name(struct window *w)$/;"	f	typeref:typename:char *
defaults	meta/dotbot/dotbot/context.py	/^    def defaults(self):$/;"	m	class:Context
defaults_	src/dev/ninja/src/state.h	/^  vector<Node*> defaults_;$/;"	m	struct:State	typeref:typename:vector<Node * >
defer_1_plugins=	src/zplug/base/sources/oh-my-zsh.zsh	/^    defer_1_plugins=()$/;"	f
defer_1_plugins=	src/zplug/base/sources/prezto.zsh	/^    defer_1_plugins=()$/;"	f
defer_1_plugins=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    defer_1_plugins=()$/;"	f
defer_1_plugins=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    defer_1_plugins=()$/;"	f
defer_2_plugins=	src/zplug/base/sources/oh-my-zsh.zsh	/^    defer_2_plugins=()$/;"	f
defer_2_plugins=	src/zplug/base/sources/prezto.zsh	/^    defer_2_plugins=()$/;"	f
defer_2_plugins=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    defer_2_plugins=()$/;"	f
defer_2_plugins=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    defer_2_plugins=()$/;"	f
defer_3_plugins=	src/zplug/base/sources/oh-my-zsh.zsh	/^    defer_3_plugins=()$/;"	f
defer_3_plugins=	src/zplug/base/sources/prezto.zsh	/^    defer_3_plugins=()$/;"	f
defer_3_plugins=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    defer_3_plugins=()$/;"	f
defer_3_plugins=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    defer_3_plugins=()$/;"	f
defines	src/dev/ninja/misc/write_fake_manifests.py	/^    def defines(self):$/;"	m	class:GenRandom
delayed_	src/dev/ninja/src/state.h	/^  DelayedEdges delayed_;$/;"	m	struct:Pool	typeref:typename:DelayedEdges
dep_loader_	src/dev/ninja/src/graph.h	/^  ImplicitDepLoader dep_loader_;$/;"	m	struct:DependencyScan	typeref:typename:ImplicitDepLoader
depcomp	src/dev/tmux/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/etc\/depcomp$/;"	m
depcomp	src/dev/tmux/Makefile.in	/^depcomp = $(SHELL) $(top_srcdir)\/etc\/depcomp$/;"	m
dependencies=	src/zplug/base/utils/prezto.zsh	/^    dependencies=()$/;"	f
dependencies=	src/zplug/repos/zplug/zplug/base/utils/prezto.zsh	/^    dependencies=()$/;"	f
deps	src/dev/ninja/src/deps_log.h	/^  const vector<Deps*>& deps() const { return deps_; }$/;"	f	struct:DepsLog	typeref:typename:const vector<Deps * > &
deps_	src/dev/ninja/src/deps_log.h	/^  vector<Deps*> deps_;$/;"	m	struct:DepsLog	typeref:typename:vector<Deps * >
deps_log	src/dev/ninja/src/graph.h	/^  DepsLog* deps_log() const {$/;"	f	struct:DependencyScan	typeref:typename:DepsLog *
deps_log	src/dev/ninja/src/graph.h	/^  DepsLog* deps_log() const {$/;"	f	struct:ImplicitDepLoader	typeref:typename:DepsLog *
deps_log_	src/dev/ninja/src/graph.h	/^  DepsLog* deps_log_;$/;"	m	struct:ImplicitDepLoader	typeref:typename:DepsLog *
deps_log_	src/dev/ninja/src/ninja.cc	/^  DepsLog deps_log_;$/;"	m	struct:__anon193baac40110::NinjaMain	typeref:typename:DepsLog	file:
deps_missing_	src/dev/ninja/src/graph.h	/^  bool deps_missing_;$/;"	m	struct:Edge	typeref:typename:bool
depth	src/dev/ninja/src/state.h	/^  int depth() const { return depth_; }$/;"	f	struct:Pool	typeref:typename:int
depth	src/dev/tmux/mode-tree.c	/^	u_int				 depth;$/;"	m	struct:mode_tree_line	typeref:typename:u_int	file:
depth	src/dev/tmux/mode-tree.c	/^	u_int			  depth;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
depth_	src/dev/ninja/src/state.h	/^  int depth_;$/;"	m	struct:Pool	typeref:typename:int
desc	src/dev/ninja/src/ninja.cc	/^  const char* desc;$/;"	m	struct:__anon193baac40110::Tool	typeref:typename:const char *	file:
descend_resolver	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    def descend_resolver(self, current_node, current_index):$/;"	m	class:BaseResolver
descend_resolver	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    def descend_resolver(self, current_node, current_index):$/;"	m	class:BaseResolver
description	src/crouton-clipboard/manifest.json	/^  "description": "Link between crouton clipboard and Chrome OS",$/;"	s
destroy	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def destroy$/;"	f	class:TerminalSession
determine_block_hints	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def determine_block_hints(self, text):$/;"	m	class:Emitter
determine_block_hints	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def determine_block_hints(self, text):$/;"	m	class:Emitter
determine_encoding	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def determine_encoding(self):$/;"	m	class:Reader
determine_encoding	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def determine_encoding(self):$/;"	m	class:Reader
devinfo	shells/zsh/aliases.zsh	/^function devinfo() {$/;"	f
devnull	src/dev/ninja/misc/measure.py	/^devnull = open('\/dev\/null', 'w')$/;"	v
df	shells/general/aliases.bash	/^alias df='df -h' # disk free, in Gigabytes, not bytes$/;"	a
df	shells/zsh/aliases.zsh	/^alias df='df -h' # disk free, in Gigabytes, not bytes$/;"	a
die	meta/dotbot/test/driver-lib.bash	/^die() {$/;"	f
die	src/dev/tmux/autogen.sh	/^die()$/;"	f
digga	shells/general/functions.bash	/^function digga() {$/;"	f
digga	shells/zsh/functions.zsh	/^function digga() {$/;"	f
directories_made_	src/dev/ninja/src/test.h	/^  vector<string> directories_made_;$/;"	m	struct:VirtualFileSystem	typeref:typename:vector<string>
dirent	src/dev/tmux/compat/closefrom.c	/^# define dirent /;"	d	file:
dirty	src/dev/ninja/src/graph.h	/^  bool dirty() const { return dirty_; }$/;"	f	struct:Node	typeref:typename:bool
dirty_	src/dev/ninja/src/graph.h	/^  bool dirty_;$/;"	m	struct:Node	typeref:typename:bool
discarded	src/dev/tmux/tmux.h	/^	size_t		 discarded;$/;"	m	struct:client	typeref:typename:size_t
discarded	src/dev/tmux/tmux.h	/^	size_t		 discarded;$/;"	m	struct:tty	typeref:typename:size_t
disk_	src/dev/ninja/src/disk_interface_test.cc	/^  RealDiskInterface disk_;$/;"	m	struct:__anonebbddeae0110::DiskInterfaceTest	typeref:typename:RealDiskInterface	file:
disk_interface_	src/dev/ninja/src/build.h	/^  DiskInterface* disk_interface_;$/;"	m	struct:Builder	typeref:typename:DiskInterface *
disk_interface_	src/dev/ninja/src/clean.h	/^  DiskInterface* disk_interface_;$/;"	m	struct:Cleaner	typeref:typename:DiskInterface *
disk_interface_	src/dev/ninja/src/graph.h	/^  DiskInterface* disk_interface_;$/;"	m	struct:DependencyScan	typeref:typename:DiskInterface *
disk_interface_	src/dev/ninja/src/graph.h	/^  DiskInterface* disk_interface_;$/;"	m	struct:ImplicitDepLoader	typeref:typename:DiskInterface *
disk_interface_	src/dev/ninja/src/ninja.cc	/^  RealDiskInterface disk_interface_;$/;"	m	struct:__anon193baac40110::NinjaMain	typeref:typename:RealDiskInterface	file:
dispatch	meta/dotbot/dotbot/dispatcher.py	/^    def dispatch(self, tasks):$/;"	m	class:Dispatcher
dispatchcb	src/dev/tmux/proc.c	/^	void		(*dispatchcb)(struct imsg *, void *);$/;"	m	struct:tmuxpeer	typeref:typename:void (*)(struct imsg *,void *)	file:
display	meta/dotbot/lib/pyyaml/tests/lib/test_appliance.py	/^def display(results, verbose):$/;"	f
display	meta/dotbot/lib/pyyaml/tests/lib3/test_appliance.py	/^def display(results, verbose):$/;"	f
display_help	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^display_help() {$/;"	f
display_message	terminals/tmux/plugins/tpm/scripts/check_tmux_version.sh	/^display_message() {$/;"	f
display_plugin_update_list	terminals/tmux/plugins/tpm/bindings/update_plugins	/^display_plugin_update_list() {$/;"	f
dispose	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def dispose(self):$/;"	m	class:CEmitter
dispose	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def dispose(self):$/;"	m	class:CParser
dispose	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def dispose(self):$/;"	m	class:Emitter
dispose	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def dispose(self):$/;"	m	class:Parser
dispose	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def dispose(self):$/;"	m	class:Emitter
dispose	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def dispose(self):$/;"	m	class:Parser
dispose	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def dispose(self):$/;"	m	class:CanonicalParser
dispose	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def dispose(self):$/;"	m	class:CanonicalParser
dist	meta/dotbot/lib/pyyaml/Makefile	/^dist:$/;"	t
dist	src/dev/tmux/Makefile	/^dist dist-all:$/;"	t
dist	src/dev/tmux/Makefile.in	/^dist dist-all:$/;"	t
dist-all	src/dev/tmux/Makefile	/^dist dist-all:$/;"	t
dist-all	src/dev/tmux/Makefile.in	/^dist dist-all:$/;"	t
dist-bzip2	src/dev/tmux/Makefile	/^dist-bzip2: distdir$/;"	t
dist-bzip2	src/dev/tmux/Makefile.in	/^dist-bzip2: distdir$/;"	t
dist-gzip	src/dev/tmux/Makefile	/^dist-gzip: distdir$/;"	t
dist-gzip	src/dev/tmux/Makefile.in	/^dist-gzip: distdir$/;"	t
dist-lzip	src/dev/tmux/Makefile	/^dist-lzip: distdir$/;"	t
dist-lzip	src/dev/tmux/Makefile.in	/^dist-lzip: distdir$/;"	t
dist-shar	src/dev/tmux/Makefile	/^dist-shar: distdir$/;"	t
dist-shar	src/dev/tmux/Makefile.in	/^dist-shar: distdir$/;"	t
dist-tarZ	src/dev/tmux/Makefile	/^dist-tarZ: distdir$/;"	t
dist-tarZ	src/dev/tmux/Makefile.in	/^dist-tarZ: distdir$/;"	t
dist-xz	src/dev/tmux/Makefile	/^dist-xz: distdir$/;"	t
dist-xz	src/dev/tmux/Makefile.in	/^dist-xz: distdir$/;"	t
dist-zip	src/dev/tmux/Makefile	/^dist-zip: distdir$/;"	t
dist-zip	src/dev/tmux/Makefile.in	/^dist-zip: distdir$/;"	t
dist_tmux_OBJECTS	src/dev/tmux/Makefile	/^dist_tmux_OBJECTS = alerts.$(OBJEXT) arguments.$(OBJEXT) \\$/;"	m
dist_tmux_OBJECTS	src/dev/tmux/Makefile.in	/^dist_tmux_OBJECTS = alerts.$(OBJEXT) arguments.$(OBJEXT) \\$/;"	m
dist_tmux_SOURCES	src/dev/tmux/Makefile	/^dist_tmux_SOURCES = \\$/;"	m
dist_tmux_SOURCES	src/dev/tmux/Makefile.am	/^dist_tmux_SOURCES = \\$/;"	m
dist_tmux_SOURCES	src/dev/tmux/Makefile.in	/^dist_tmux_SOURCES = \\$/;"	m
distcheck	src/dev/tmux/Makefile	/^distcheck: dist$/;"	t
distcheck	src/dev/tmux/Makefile.in	/^distcheck: dist$/;"	t
distclean	src/dev/tmux/Makefile	/^distclean: distclean-am$/;"	t
distclean	src/dev/tmux/Makefile.in	/^distclean: distclean-am$/;"	t
distclean-am	src/dev/tmux/Makefile	/^distclean-am: clean-am distclean-compile distclean-generic \\$/;"	t
distclean-am	src/dev/tmux/Makefile.in	/^distclean-am: clean-am distclean-compile distclean-generic \\$/;"	t
distclean-compile	src/dev/tmux/Makefile	/^distclean-compile:$/;"	t
distclean-compile	src/dev/tmux/Makefile.in	/^distclean-compile:$/;"	t
distclean-generic	src/dev/tmux/Makefile	/^distclean-generic:$/;"	t
distclean-generic	src/dev/tmux/Makefile.in	/^distclean-generic:$/;"	t
distclean-tags	src/dev/tmux/Makefile	/^distclean-tags:$/;"	t
distclean-tags	src/dev/tmux/Makefile.in	/^distclean-tags:$/;"	t
distcleancheck	src/dev/tmux/Makefile	/^distcleancheck: distclean$/;"	t
distcleancheck	src/dev/tmux/Makefile.in	/^distcleancheck: distclean$/;"	t
distcleancheck_listfiles	src/dev/tmux/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distcleancheck_listfiles	src/dev/tmux/Makefile.in	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	src/dev/tmux/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	src/dev/tmux/Makefile	/^distdir: $(DISTFILES)$/;"	t
distdir	src/dev/tmux/Makefile.in	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	src/dev/tmux/Makefile.in	/^distdir: $(DISTFILES)$/;"	t
distuninstallcheck	src/dev/tmux/Makefile	/^distuninstallcheck:$/;"	t
distuninstallcheck	src/dev/tmux/Makefile.in	/^distuninstallcheck:$/;"	t
distuninstallcheck_listfiles	src/dev/tmux/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
distuninstallcheck_listfiles	src/dev/tmux/Makefile.in	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
div.chapter	src/dev/ninja/doc/style.css	/^div.chapter {$/;"	c
dns-restart	shells/general/functions.bash	/^function dns-restart() {$/;"	f
dns-restart	shells/zsh/functions.zsh	/^function dns-restart() {$/;"	f
do_GET	src/dev/ninja/src/browse.py	/^    def do_GET(self):$/;"	m	class:RequestHandler
doc	src/dev/ninja/configure.py	/^def doc(filename):$/;"	f
doc.collab.show	src/dev/ninja/doc/dblatex.xsl	/^  <xsl:param name='doc.collab.show'>0<\/xsl:param>$/;"	p
docbookxml	src/dev/ninja/configure.py	/^docbookxml = n.build(built('manual.xml'), 'asciidoc', doc('manual.asciidoc'))$/;"	v
docdir	src/dev/tmux/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/dev/tmux/Makefile.in	/^docdir = @docdir@$/;"	m
dot	src/dev/ninja/configure.py	/^dot = n.build(built('graph.dot'), 'gendot', ['ninja', 'build.ninja'])$/;"	v
dotbot.cli.main	meta/dotbot/bin/dotbot	/^    dotbot.cli.main()$/;"	f
drawcb	src/dev/tmux/mode-tree.c	/^	struct screen		*(*drawcb)(void *, void *, u_int, u_int);$/;"	m	struct:mode_tree_data	typeref:struct:screen * (*)(void *,void *,u_int,u_int)	file:
dry_run	src/dev/ninja/src/build.h	/^  bool dry_run;$/;"	m	struct:BuildConfig	typeref:typename:bool
dsf	editors/vim/config/plugins/all.vim	/^	nmap dsf <Plug>DsfDelete$/;"	m
dst	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def dst(self, dt):$/;"	m	class:_make_objects.FixedOffset
dst	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def dst(self, dt):$/;"	m	class:_make_objects.FixedOffset
du	shells/general/aliases.bash	/^alias du='du -h -c' # calculate disk usage for a folder$/;"	a
du	shells/zsh/aliases.zsh	/^alias du='du -h -c' # calculate disk usage for a folder$/;"	a
dump	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def dump(data, stream=None, Dumper=Dumper, **kwds):$/;"	f
dump	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def dump(data, stream=None, Dumper=Dumper, **kwds):$/;"	f
dump_all	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def dump_all(documents, stream=None, Dumper=Dumper,$/;"	f
dump_all	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def dump_all(documents, stream=None, Dumper=Dumper,$/;"	f
dupe_edge_action_	src/dev/ninja/src/manifest_parser.h	/^  DupeEdgeAction dupe_edge_action_;$/;"	m	struct:ManifestParser	typeref:typename:DupeEdgeAction
dupe_edges_should_err	src/dev/ninja/src/ninja.cc	/^  bool dupe_edges_should_err;$/;"	m	struct:__anon193baac40110::Options	typeref:typename:bool	file:
dvi	src/dev/tmux/Makefile	/^dvi: dvi-am$/;"	t
dvi	src/dev/tmux/Makefile.in	/^dvi: dvi-am$/;"	t
dvi-am	src/dev/tmux/Makefile	/^dvi-am:$/;"	t
dvi-am	src/dev/tmux/Makefile.in	/^dvi-am:$/;"	t
dvidir	src/dev/tmux/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/dev/tmux/Makefile.in	/^dvidir = @dvidir@$/;"	m
e	editors/vim/config/plugins/all.vim	/^	nmap <silent> e <Plug>CamelCaseMotion_e$/;"	m
e	editors/vim/config/plugins/all.vim	/^	omap <silent> e <Plug>CamelCaseMotion_e$/;"	m
e	editors/vim/config/plugins/all.vim	/^	xmap <silent> e <Plug>CamelCaseMotion_e$/;"	m
echo_err	terminals/tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_err() {$/;"	f
echo_err	terminals/tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_err() {$/;"	f
echo_ok	terminals/tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_ok() {$/;"	f
echo_ok	terminals/tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_ok() {$/;"	f
edge	src/dev/ninja/src/build.h	/^    Edge* edge;$/;"	m	struct:CommandRunner::Result	typeref:typename:Edge *
edge_	src/dev/ninja/src/graph.cc	/^  Edge* edge_;$/;"	m	struct:EdgeEnv	typeref:typename:Edge *	file:
edges_	src/dev/ninja/src/state.h	/^  vector<Edge*> edges_;$/;"	m	struct:State	typeref:typename:vector<Edge * >
editor	languages/python/pdbrc.py	/^    editor = 'e'$/;"	v	class:Config
emit	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def emit(self, event_object):$/;"	m	class:CEmitter
emit	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def emit(events, stream=None, Dumper=Dumper,$/;"	f
emit	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def emit(self, event):$/;"	m	class:Emitter
emit	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def emit(events, stream=None, Dumper=Dumper,$/;"	f
emit	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def emit(self, event):$/;"	m	class:Emitter
empty	src/dev/ninja/src/eval_env.h	/^  bool empty() const { return parsed_.empty(); }$/;"	f	struct:EvalString	typeref:typename:bool
end_message	terminals/tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^end_message() {$/;"	f
end_time	src/dev/ninja/src/build_log.h	/^    int end_time;$/;"	m	struct:BuildLog::LogEntry	typeref:typename:int
endselx	src/dev/tmux/window-copy.c	/^	u_int		 endselx; \/* end of selection *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
endsely	src/dev/tmux/window-copy.c	/^	u_int		 endsely;$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
ensure_tpm_path_exists	terminals/tmux/plugins/tpm/scripts/helpers/utility.sh	/^ensure_tpm_path_exists() {$/;"	f
enter	src/dev/tmux/input.c	/^	void				(*enter)(struct input_ctx *);$/;"	m	struct:input_state	typeref:typename:void (*)(struct input_ctx *)	file:
entered	src/dev/tmux/window-tree.c	/^	const char			 *entered;$/;"	m	struct:window_tree_modedata	typeref:typename:const char *	file:
entries	src/dev/ninja/src/build_log.h	/^  const Entries& entries() const { return entries_; }$/;"	f	struct:BuildLog	typeref:typename:const Entries &
entries_	src/dev/ninja/src/build_log.h	/^  Entries entries_;$/;"	m	struct:BuildLog	typeref:typename:Entries
entry	src/dev/tmux/tmux.h	/^	const struct cmd_entry	*entry;$/;"	m	struct:cmd	typeref:typename:const struct cmd_entry *
env_	src/dev/ninja/src/graph.h	/^  BindingEnv* env_;$/;"	m	struct:Edge	typeref:typename:BindingEnv *
env_	src/dev/ninja/src/manifest_parser.h	/^  BindingEnv* env_;$/;"	m	struct:ManifestParser	typeref:typename:BindingEnv *
env_block_	src/dev/ninja/src/msvc_helper.h	/^  void* env_block_;$/;"	m	struct:CLWrapper	typeref:typename:void *
env_keys	src/dev/ninja/configure.py	/^env_keys = set(['CXX', 'AR', 'CFLAGS', 'LDFLAGS'])$/;"	v
environ	src/dev/tmux/tmux.h	/^	struct environ	*environ;$/;"	m	struct:client	typeref:struct:environ *
environ	src/dev/tmux/tmux.h	/^	struct environ	*environ;$/;"	m	struct:session	typeref:struct:environ *
environ_clear	src/dev/tmux/environ.c	/^environ_clear(struct environ *env, const char *name)$/;"	f	typeref:typename:void
environ_cmp	src/dev/tmux/environ.c	/^environ_cmp(struct environ_entry *envent1, struct environ_entry *envent2)$/;"	f	typeref:typename:int	file:
environ_copy	src/dev/tmux/environ.c	/^environ_copy(struct environ *srcenv, struct environ *dstenv)$/;"	f	typeref:typename:void
environ_create	src/dev/tmux/environ.c	/^environ_create(void)$/;"	f	typeref:struct:environ *
environ_entry	src/dev/tmux/tmux.h	/^struct environ_entry {$/;"	s
environ_find	src/dev/tmux/environ.c	/^environ_find(struct environ *env, const char *name)$/;"	f	typeref:struct:environ_entry *
environ_first	src/dev/tmux/environ.c	/^environ_first(struct environ *env)$/;"	f	typeref:struct:environ_entry *
environ_for_session	src/dev/tmux/environ.c	/^environ_for_session(struct session *s, int no_TERM)$/;"	f	typeref:struct:environ *
environ_free	src/dev/tmux/environ.c	/^environ_free(struct environ *env)$/;"	f	typeref:typename:void
environ_log	src/dev/tmux/environ.c	/^environ_log(struct environ *env, const char *fmt, ...)$/;"	f	typeref:typename:void
environ_next	src/dev/tmux/environ.c	/^environ_next(struct environ_entry *envent)$/;"	f	typeref:struct:environ_entry *
environ_push	src/dev/tmux/environ.c	/^environ_push(struct environ *env)$/;"	f	typeref:typename:void
environ_put	src/dev/tmux/environ.c	/^environ_put(struct environ *env, const char *var)$/;"	f	typeref:typename:void
environ_set	src/dev/tmux/environ.c	/^environ_set(struct environ *env, const char *name, const char *fmt, ...)$/;"	f	typeref:typename:void
environ_unset	src/dev/tmux/environ.c	/^environ_unset(struct environ *env, const char *name)$/;"	f	typeref:typename:void
environ_update	src/dev/tmux/environ.c	/^environ_update(struct options *oo, struct environ *src, struct environ *dst)$/;"	f	typeref:typename:void
err	src/dev/tmux/compat/err.c	/^err(int eval, const char *fmt, ...)$/;"	f	typeref:typename:void
err	src/dev/tmux/compat/strtonum.c	/^		int err;$/;"	m	struct:strtonum::errval	typeref:typename:int	file:
error	meta/dotbot/dotbot/messenger/messenger.py	/^    def error(self, message):$/;"	m	class:Messenger
error	src/dev/ninja/src/gen_doxygen_mainpage.sh	/^error()$/;"	f
errstr	src/dev/tmux/compat/strtonum.c	/^		const char *errstr;$/;"	m	struct:strtonum::errval	typeref:typename:const char *	file:
errval	src/dev/tmux/compat/strtonum.c	/^	struct errval {$/;"	s	function:strtonum	file:
errx	src/dev/tmux/compat/err.c	/^errx(int eval, const char *fmt, ...)$/;"	f	typeref:typename:void
escape	shells/general/functions.bash	/^function escape() {$/;"	f
escape	shells/zsh/functions.zsh	/^function escape() {$/;"	f
escape	src/dev/ninja/misc/ninja_syntax.py	/^def escape(string):$/;"	f
escape_in_out_	src/dev/ninja/src/graph.cc	/^  EscapeKind escape_in_out_;$/;"	m	struct:EdgeEnv	typeref:typename:EscapeKind	file:
escape_path	src/dev/ninja/misc/ninja_syntax.py	/^def escape_path(word):$/;"	f
ev_sigchld	src/dev/tmux/proc.c	/^	struct event	  ev_sigchld;$/;"	m	struct:tmuxproc	typeref:struct:event	file:
ev_sigcont	src/dev/tmux/proc.c	/^	struct event	  ev_sigcont;$/;"	m	struct:tmuxproc	typeref:struct:event	file:
ev_sighup	src/dev/tmux/proc.c	/^	struct event	  ev_sighup;$/;"	m	struct:tmuxproc	typeref:struct:event	file:
ev_sigterm	src/dev/tmux/proc.c	/^	struct event	  ev_sigterm;$/;"	m	struct:tmuxproc	typeref:struct:event	file:
ev_sigusr1	src/dev/tmux/proc.c	/^	struct event	  ev_sigusr1;$/;"	m	struct:tmuxproc	typeref:struct:event	file:
ev_sigusr2	src/dev/tmux/proc.c	/^	struct event	  ev_sigusr2;$/;"	m	struct:tmuxproc	typeref:struct:event	file:
ev_sigwinch	src/dev/tmux/proc.c	/^	struct event	  ev_sigwinch;$/;"	m	struct:tmuxproc	typeref:struct:event	file:
event	src/dev/tmux/proc.c	/^	struct event	 event;$/;"	m	struct:tmuxpeer	typeref:struct:event	file:
event	src/dev/tmux/tmux.h	/^	struct bufferevent	*event;$/;"	m	struct:job	typeref:struct:bufferevent *
event	src/dev/tmux/tmux.h	/^	struct bufferevent *event;$/;"	m	struct:window_pane	typeref:struct:bufferevent *
event	src/dev/tmux/tmux.h	/^	struct event	 event;$/;"	m	struct:client	typeref:struct:event
event_in	src/dev/tmux/tmux.h	/^	struct event	 event_in;$/;"	m	struct:tty	typeref:struct:event
event_out	src/dev/tmux/tmux.h	/^	struct event	 event_out;$/;"	m	struct:tty	typeref:struct:event
ex	src/dev/tmux/tmux.h	/^	u_int		 ex;$/;"	m	struct:screen_sel	typeref:typename:u_int
exec	src/dev/tmux/tmux.h	/^	enum cmd_retval	 (*exec)(struct cmd *, struct cmdq_item *);$/;"	m	struct:cmd_entry	typeref:enum:cmd_retval (*)(struct cmd *,struct cmdq_item *)
exec_prefix	src/dev/tmux/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/dev/tmux/Makefile.in	/^exec_prefix = @exec_prefix@$/;"	m
execute	meta/dotbot/lib/pyyaml/tests/lib/test_appliance.py	/^def execute(function, filenames, verbose):$/;"	f
execute	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^def execute(code):$/;"	f
execute	meta/dotbot/lib/pyyaml/tests/lib3/test_appliance.py	/^def execute(function, filenames, verbose):$/;"	f
execute	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^def execute(code):$/;"	f
exists	src/dev/ninja/src/graph.h	/^  bool exists() const {$/;"	f	struct:Node	typeref:typename:bool
exit	src/dev/tmux/input.c	/^	void				(*exit)(struct input_ctx *);$/;"	m	struct:input_state	typeref:typename:void (*)(struct input_ctx *)	file:
exit	src/dev/tmux/proc.c	/^	int		  exit;$/;"	m	struct:tmuxproc	typeref:typename:int	file:
exit_helper	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^exit_helper() {$/;"	f
exit_if_unsupported_version	terminals/tmux/plugins/tpm/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_message	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^exit_message() {$/;"	f
exit_value_helper	terminals/tmux/plugins/tpm/scripts/helpers/utility.sh	/^exit_value_helper() {$/;"	f
exp	src/dev/ninja/misc/ninja_syntax.py	/^    def exp(m):$/;"	f	function:expand	file:
expand	src/dev/ninja/misc/ninja_syntax.py	/^def expand(string, vars, local_vars={}):$/;"	f
expanded	src/dev/tmux/format.c	/^	const char		*expanded;$/;"	m	struct:format_job	typeref:typename:const char *	file:
expanded	src/dev/tmux/mode-tree.c	/^	int				 expanded;$/;"	m	struct:mode_tree_item	typeref:typename:int	file:
expect_alias	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_alias(self):$/;"	m	class:Emitter
expect_alias	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_alias(self):$/;"	m	class:Emitter
expect_block_mapping	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_block_mapping(self):$/;"	m	class:Emitter
expect_block_mapping	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_block_mapping(self):$/;"	m	class:Emitter
expect_block_mapping_key	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_block_mapping_key(self, first=False):$/;"	m	class:Emitter
expect_block_mapping_key	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_block_mapping_key(self, first=False):$/;"	m	class:Emitter
expect_block_mapping_simple_value	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_block_mapping_simple_value(self):$/;"	m	class:Emitter
expect_block_mapping_simple_value	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_block_mapping_simple_value(self):$/;"	m	class:Emitter
expect_block_mapping_value	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_block_mapping_value(self):$/;"	m	class:Emitter
expect_block_mapping_value	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_block_mapping_value(self):$/;"	m	class:Emitter
expect_block_sequence	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_block_sequence(self):$/;"	m	class:Emitter
expect_block_sequence	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_block_sequence(self):$/;"	m	class:Emitter
expect_block_sequence_item	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_block_sequence_item(self, first=False):$/;"	m	class:Emitter
expect_block_sequence_item	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_block_sequence_item(self, first=False):$/;"	m	class:Emitter
expect_document_end	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_document_end(self):$/;"	m	class:Emitter
expect_document_end	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_document_end(self):$/;"	m	class:Emitter
expect_document_root	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_document_root(self):$/;"	m	class:Emitter
expect_document_root	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_document_root(self):$/;"	m	class:Emitter
expect_document_start	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_document_start(self, first=False):$/;"	m	class:Emitter
expect_document_start	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_document_start(self, first=False):$/;"	m	class:Emitter
expect_first_block_mapping_key	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_first_block_mapping_key(self):$/;"	m	class:Emitter
expect_first_block_mapping_key	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_first_block_mapping_key(self):$/;"	m	class:Emitter
expect_first_block_sequence_item	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_first_block_sequence_item(self):$/;"	m	class:Emitter
expect_first_block_sequence_item	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_first_block_sequence_item(self):$/;"	m	class:Emitter
expect_first_document_start	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_first_document_start(self):$/;"	m	class:Emitter
expect_first_document_start	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_first_document_start(self):$/;"	m	class:Emitter
expect_first_flow_mapping_key	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_first_flow_mapping_key(self):$/;"	m	class:Emitter
expect_first_flow_mapping_key	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_first_flow_mapping_key(self):$/;"	m	class:Emitter
expect_first_flow_sequence_item	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_first_flow_sequence_item(self):$/;"	m	class:Emitter
expect_first_flow_sequence_item	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_first_flow_sequence_item(self):$/;"	m	class:Emitter
expect_flow_mapping	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_flow_mapping(self):$/;"	m	class:Emitter
expect_flow_mapping	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_flow_mapping(self):$/;"	m	class:Emitter
expect_flow_mapping_key	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_flow_mapping_key(self):$/;"	m	class:Emitter
expect_flow_mapping_key	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_flow_mapping_key(self):$/;"	m	class:Emitter
expect_flow_mapping_simple_value	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_flow_mapping_simple_value(self):$/;"	m	class:Emitter
expect_flow_mapping_simple_value	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_flow_mapping_simple_value(self):$/;"	m	class:Emitter
expect_flow_mapping_value	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_flow_mapping_value(self):$/;"	m	class:Emitter
expect_flow_mapping_value	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_flow_mapping_value(self):$/;"	m	class:Emitter
expect_flow_sequence	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_flow_sequence(self):$/;"	m	class:Emitter
expect_flow_sequence	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_flow_sequence(self):$/;"	m	class:Emitter
expect_flow_sequence_item	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_flow_sequence_item(self):$/;"	m	class:Emitter
expect_flow_sequence_item	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_flow_sequence_item(self):$/;"	m	class:Emitter
expect_node	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_node(self, root=False, sequence=False, mapping=False,$/;"	m	class:Emitter
expect_node	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_node(self, root=False, sequence=False, mapping=False,$/;"	m	class:Emitter
expect_nothing	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_nothing(self):$/;"	m	class:Emitter
expect_nothing	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_nothing(self):$/;"	m	class:Emitter
expect_scalar	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_scalar(self):$/;"	m	class:Emitter
expect_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_scalar(self):$/;"	m	class:Emitter
expect_stream_start	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def expect_stream_start(self):$/;"	m	class:Emitter
expect_stream_start	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def expect_stream_start(self):$/;"	m	class:Emitter
expected_region_highlight=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^expected_region_highlight=()$/;"	f
explicit_bzero	src/dev/tmux/compat/explicit_bzero.c	/^explicit_bzero(void *buf, size_t len)$/;"	f	typeref:typename:void
ext_status	meta/dotbot/lib/pyyaml/setup.py	/^    def ext_status(self, ext):$/;"	m	class:Distribution
extddata	src/dev/tmux/tmux.h	/^	struct grid_cell	*extddata;$/;"	m	struct:grid_line	typeref:struct:grid_cell *
extdsize	src/dev/tmux/tmux.h	/^	u_int			 extdsize;$/;"	m	struct:grid_line	typeref:typename:u_int
extract	shells/general/functions.bash	/^function extract() {$/;"	f
extract	shells/zsh/functions.zsh	/^function extract() {$/;"	f
ey	src/dev/tmux/tmux.h	/^	u_int		 ey;$/;"	m	struct:screen_sel	typeref:typename:u_int
f	shells/general/functions.bash	/^function f() {$/;"	f
f	shells/zsh/functions.zsh	/^function f() {$/;"	f
f	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/off-by-one.zsh	/^f() {}$/;"	f
factory	src/dev/ninja/src/ninja_test.cc	/^  testing::Test* (*factory)();$/;"	m	struct:RegisteredTest	typeref:typename:testing::Test * (*)()	file:
fail	meta/dotbot/test/driver-lib.bash	/^fail() {$/;"	f
fail_helper	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^fail_helper() {$/;"	f
fail_helper	terminals/tmux/plugins/tpm/scripts/helpers/utility.sh	/^fail_helper() {$/;"	f
failed_	src/dev/ninja/src/test.h	/^  bool failed_;$/;"	m	class:testing::Test	typeref:typename:bool
failures_allowed	src/dev/ninja/src/build.h	/^  int failures_allowed;$/;"	m	struct:BuildConfig	typeref:typename:int
fatal	src/dev/tmux/log.c	/^fatal(const char *msg, ...)$/;"	f	typeref:typename:__dead void
fatalx	src/dev/tmux/log.c	/^fatalx(const char *msg, ...)$/;"	f	typeref:typename:__dead void
fd	src/dev/tmux/compat/imsg.h	/^	int			 fd;$/;"	m	struct:ibuf	typeref:typename:int
fd	src/dev/tmux/compat/imsg.h	/^	int			 fd;$/;"	m	struct:imsgbuf	typeref:typename:int
fd	src/dev/tmux/compat/imsg.h	/^	int			 fd;$/;"	m	struct:msgbuf	typeref:typename:int
fd	src/dev/tmux/compat/imsg.h	/^	int			fd;$/;"	m	struct:imsg_fd	typeref:typename:int
fd	src/dev/tmux/compat/imsg.h	/^	int		 fd;$/;"	m	struct:imsg	typeref:typename:int
fd	src/dev/tmux/tmux.h	/^	int			 fd;$/;"	m	struct:job	typeref:typename:int
fd	src/dev/tmux/tmux.h	/^	int		 fd;$/;"	m	struct:client	typeref:typename:int
fd	src/dev/tmux/tmux.h	/^	int		 fd;$/;"	m	struct:tty	typeref:typename:int
fd	src/dev/tmux/tmux.h	/^	int		 fd;$/;"	m	struct:window_pane	typeref:typename:int
fd_	src/dev/ninja/src/subprocess.h	/^  int fd_;$/;"	m	struct:Subprocess	typeref:typename:int
fdforkpty	src/dev/tmux/compat/fdforkpty.c	/^fdforkpty(__unused int ptmfd, int *master, char *name, struct termios *tio,$/;"	f	typeref:typename:pid_t
fetch_alias	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_alias(self):$/;"	m	class:Scanner
fetch_alias	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_alias(self):$/;"	m	class:Scanner
fetch_anchor	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_anchor(self):$/;"	m	class:Scanner
fetch_anchor	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_anchor(self):$/;"	m	class:Scanner
fetch_block_entry	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_block_entry(self):$/;"	m	class:Scanner
fetch_block_entry	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_block_entry(self):$/;"	m	class:Scanner
fetch_block_scalar	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_block_scalar(self, style):$/;"	m	class:Scanner
fetch_block_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_block_scalar(self, style):$/;"	m	class:Scanner
fetch_directive	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_directive(self):$/;"	m	class:Scanner
fetch_directive	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_directive(self):$/;"	m	class:Scanner
fetch_document_end	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_document_end(self):$/;"	m	class:Scanner
fetch_document_end	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_document_end(self):$/;"	m	class:Scanner
fetch_document_indicator	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_document_indicator(self, TokenClass):$/;"	m	class:Scanner
fetch_document_indicator	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_document_indicator(self, TokenClass):$/;"	m	class:Scanner
fetch_document_start	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_document_start(self):$/;"	m	class:Scanner
fetch_document_start	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_document_start(self):$/;"	m	class:Scanner
fetch_double	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_double(self):$/;"	m	class:Scanner
fetch_double	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_double(self):$/;"	m	class:Scanner
fetch_flow_collection_end	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_collection_end(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_collection_end	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_collection_end(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_collection_start	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_collection_start(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_collection_start	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_collection_start(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_entry	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_entry(self):$/;"	m	class:Scanner
fetch_flow_entry	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_entry(self):$/;"	m	class:Scanner
fetch_flow_mapping_end	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_mapping_end(self):$/;"	m	class:Scanner
fetch_flow_mapping_end	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_mapping_end(self):$/;"	m	class:Scanner
fetch_flow_mapping_start	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_mapping_start(self):$/;"	m	class:Scanner
fetch_flow_mapping_start	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_mapping_start(self):$/;"	m	class:Scanner
fetch_flow_scalar	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_scalar(self, style):$/;"	m	class:Scanner
fetch_flow_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_scalar(self, style):$/;"	m	class:Scanner
fetch_flow_sequence_end	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_sequence_end(self):$/;"	m	class:Scanner
fetch_flow_sequence_end	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_sequence_end(self):$/;"	m	class:Scanner
fetch_flow_sequence_start	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_flow_sequence_start(self):$/;"	m	class:Scanner
fetch_flow_sequence_start	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_flow_sequence_start(self):$/;"	m	class:Scanner
fetch_folded	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_folded(self):$/;"	m	class:Scanner
fetch_folded	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_folded(self):$/;"	m	class:Scanner
fetch_key	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_key(self):$/;"	m	class:Scanner
fetch_key	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_key(self):$/;"	m	class:Scanner
fetch_literal	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_literal(self):$/;"	m	class:Scanner
fetch_literal	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_literal(self):$/;"	m	class:Scanner
fetch_more_tokens	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_more_tokens(self):$/;"	m	class:Scanner
fetch_more_tokens	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_more_tokens(self):$/;"	m	class:Scanner
fetch_plain	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_plain(self):$/;"	m	class:Scanner
fetch_plain	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_plain(self):$/;"	m	class:Scanner
fetch_single	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_single(self):$/;"	m	class:Scanner
fetch_single	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_single(self):$/;"	m	class:Scanner
fetch_stream_end	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_stream_end(self):$/;"	m	class:Scanner
fetch_stream_end	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_stream_end(self):$/;"	m	class:Scanner
fetch_stream_start	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_stream_start(self):$/;"	m	class:Scanner
fetch_stream_start	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_stream_start(self):$/;"	m	class:Scanner
fetch_tag	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_tag(self):$/;"	m	class:Scanner
fetch_tag	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_tag(self):$/;"	m	class:Scanner
fetch_value	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def fetch_value(self):$/;"	m	class:Scanner
fetch_value	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def fetch_value(self):$/;"	m	class:Scanner
fg	src/dev/tmux/tmux.h	/^			u_char	fg;$/;"	m	struct:grid_cell_entry::__anonc903038b020a::__anonc903038b0308	typeref:typename:u_char
fg	src/dev/tmux/tmux.h	/^	int			fg;$/;"	m	struct:grid_cell	typeref:typename:int
fgetln	src/dev/tmux/compat/fgetln.c	/^fgetln(FILE *fp, size_t *len)$/;"	f	typeref:typename:char *
file	src/dev/tmux/cmd-if-shell.c	/^	char			*file;$/;"	m	struct:cmd_if_shell_data	typeref:typename:char *	file:
file	src/dev/tmux/tmux.h	/^	char			*file;$/;"	m	struct:cmd	typeref:typename:char *
file_	src/dev/ninja/src/build_log.cc	/^  FILE* file_;$/;"	m	struct:LineReader	typeref:typename:FILE *	file:
file_	src/dev/ninja/src/deps_log.h	/^  FILE* file_;$/;"	m	struct:DepsLog	typeref:typename:FILE *
file_reader_	src/dev/ninja/src/manifest_parser.h	/^  FileReader* file_reader_;$/;"	m	struct:ManifestParser	typeref:typename:FileReader *
filename_	src/dev/ninja/src/lexer.h	/^  StringPiece filename_;$/;"	m	struct:Lexer	typeref:typename:StringPiece
filenames	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    filenames = ['*.yaml', '*.yml']$/;"	v	class:YAMLLexer
fileno	src/dev/ninja/src/util.h	/^#define fileno /;"	d
files_	src/dev/ninja/src/test.h	/^  FileMap files_;$/;"	m	struct:VirtualFileSystem	typeref:typename:FileMap
files_created_	src/dev/ninja/src/test.h	/^  set<string> files_created_;$/;"	m	struct:VirtualFileSystem	typeref:typename:set<string>
files_read_	src/dev/ninja/src/test.h	/^  vector<string> files_read_;$/;"	m	struct:VirtualFileSystem	typeref:typename:vector<string>
files_removed_	src/dev/ninja/src/test.h	/^  set<string> files_removed_;$/;"	m	struct:VirtualFileSystem	typeref:typename:set<string>
filetypedetect	editors/vim/filetype.vim	/^augroup filetypedetect$/;"	a
filter	src/dev/tmux/mode-tree.c	/^	char			 *filter;$/;"	m	struct:mode_tree_data	typeref:typename:char *	file:
final_exe	src/dev/ninja/configure.py	/^            final_exe = '.\/ninja'$/;"	v
final_exe	src/dev/ninja/configure.py	/^            final_exe = 'ninja.exe'$/;"	v
finalize_options	meta/dotbot/lib/pyyaml/setup.py	/^    def finalize_options(self):$/;"	m	class:test
find_home	src/dev/tmux/tmux.c	/^find_home(void)$/;"	f	typeref:typename:const char *
find_python_module	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def find_python_module(self, name, mark):$/;"	m	class:Constructor
find_python_module	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def find_python_module(self, name, mark):$/;"	m	class:Constructor
find_python_name	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def find_python_name(self, name, mark):$/;"	m	class:Constructor
find_python_name	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def find_python_name(self, name, mark):$/;"	m	class:Constructor
find_test_filenames	meta/dotbot/lib/pyyaml/tests/lib/test_appliance.py	/^def find_test_filenames(directory):$/;"	f
find_test_filenames	meta/dotbot/lib/pyyaml/tests/lib3/test_appliance.py	/^def find_test_filenames(directory):$/;"	f
find_test_functions	meta/dotbot/lib/pyyaml/tests/lib/test_appliance.py	/^def find_test_functions(collections):$/;"	f
find_test_functions	meta/dotbot/lib/pyyaml/tests/lib3/test_appliance.py	/^def find_test_functions(collections):$/;"	f
find_token	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def find_token(self):$/;"	m	class:CanonicalScanner
find_token	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def find_token(self):$/;"	m	class:CanonicalScanner
finished_	src/dev/ninja/src/build.cc	/^  queue<Edge*> finished_;$/;"	m	struct:__anon965c94440110::DryRunCommandRunner	typeref:typename:queue<Edge * >	file:
finished_	src/dev/ninja/src/subprocess.h	/^  queue<Subprocess*> finished_;$/;"	m	struct:SubprocessSet	typeref:typename:queue<Subprocess * >
finished_edges_	src/dev/ninja/src/build.h	/^  int started_edges_, finished_edges_, total_edges_;$/;"	m	struct:BuildStatus	typeref:typename:int
first	src/dev/tmux/input.c	/^	int				first;$/;"	m	struct:input_transition	typeref:typename:int	file:
flag	src/dev/ninja/src/getopt.h	/^  int *flag;                    \/* determines if getopt_long() returns a$/;"	m	struct:GETOPT_LONG_OPTION_T	typeref:typename:int *
flag	src/dev/tmux/arguments.c	/^	u_char			 flag;$/;"	m	struct:args_entry	typeref:typename:u_char	file:
flag	src/dev/tmux/tmux.h	/^	char			 flag;$/;"	m	struct:cmd_entry_flag	typeref:typename:char
flag	src/dev/tmux/tmux.h	/^	int		 flag;$/;"	m	struct:screen_sel	typeref:typename:int
flag	src/dev/tmux/tty-term.c	/^		int		flag;$/;"	m	union:tty_code::__anonc9119abe010a	typeref:typename:int	file:
flags	src/dev/tmux/cmd-command-prompt.c	/^	int	 flags;$/;"	m	struct:cmd_command_prompt_cdata	typeref:typename:int	file:
flags	src/dev/tmux/compat/imsg.h	/^	uint16_t	 flags;$/;"	m	struct:imsg_hdr	typeref:typename:uint16_t
flags	src/dev/tmux/format.c	/^	int			 flags;$/;"	m	struct:format_tree	typeref:typename:int	file:
flags	src/dev/tmux/input-keys.c	/^	int		 flags;$/;"	m	struct:input_key_ent	typeref:typename:int	file:
flags	src/dev/tmux/input.c	/^	int			flags;$/;"	m	struct:input_ctx	typeref:typename:int	file:
flags	src/dev/tmux/proc.c	/^	int		 flags;$/;"	m	struct:tmuxpeer	typeref:typename:int	file:
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:cmd	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:cmd_entry_flag	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:cmd_find_state	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:cmdq_item	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:cmdq_shared	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:grid	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:grid_line	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int			 flags;$/;"	m	struct:key_binding	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:client	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:cmd_entry	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:session	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:tty	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:tty_term	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:window	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:window_pane	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	int		 flags;$/;"	m	struct:winlink	typeref:typename:int
flags	src/dev/tmux/tmux.h	/^	u_char			flags;$/;"	m	struct:grid_cell	typeref:typename:u_char
flags	src/dev/tmux/tmux.h	/^	u_char			flags;$/;"	m	struct:grid_cell_entry	typeref:typename:u_char
flat	src/dev/tmux/mode-tree.c	/^	int				 flat;$/;"	m	struct:mode_tree_line	typeref:typename:int	file:
flatten_mapping	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def flatten_mapping(self, node):$/;"	m	class:SafeConstructor
flatten_mapping	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def flatten_mapping(self, node):$/;"	m	class:SafeConstructor
flock	src/dev/tmux/compat.h	/^#define flock(/;"	d
flush_stream	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def flush_stream(self):$/;"	m	class:Emitter
flush_stream	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def flush_stream(self):$/;"	m	class:Emitter
force	meta/dotbot/lib/pyyaml/Makefile	/^force:$/;"	t
forceext	meta/dotbot/lib/pyyaml/Makefile	/^forceext:$/;"	t
forkpty	src/dev/tmux/compat/forkpty-aix.c	/^forkpty(int *master, __unused char *name, struct termios *tio,$/;"	f	typeref:typename:pid_t
forkpty	src/dev/tmux/compat/forkpty-hpux.c	/^forkpty(int *master, char *name, struct termios *tio, struct winsize *ws)$/;"	f	typeref:typename:pid_t
forkpty	src/dev/tmux/compat/forkpty-sunos.c	/^forkpty(int *master, char *name, struct termios *tio, struct winsize *ws)$/;"	f	typeref:typename:pid_t
format	src/dev/tmux/window-buffer.c	/^	char				 *format;$/;"	m	struct:window_buffer_modedata	typeref:typename:char *	file:
format	src/dev/tmux/window-client.c	/^	char				 *format;$/;"	m	struct:window_client_modedata	typeref:typename:char *	file:
format	src/dev/tmux/window-tree.c	/^	char				 *format;$/;"	m	struct:window_tree_modedata	typeref:typename:char *	file:
format_add	src/dev/tmux/format.c	/^format_add(struct format_tree *ft, const char *key, const char *fmt, ...)$/;"	f	typeref:typename:void
format_add_cb	src/dev/tmux/format.c	/^format_add_cb(struct format_tree *ft, const char *key, format_cb cb)$/;"	f	typeref:typename:void	file:
format_add_tv	src/dev/tmux/format.c	/^format_add_tv(struct format_tree *ft, const char *key, struct timeval *tv)$/;"	f	typeref:typename:void	file:
format_cb	src/dev/tmux/format.c	/^typedef void (*format_cb)(struct format_tree *, struct format_entry *);$/;"	t	typeref:typename:void (*)(struct format_tree *,struct format_entry *)	file:
format_cb_current_command	src/dev/tmux/format.c	/^format_cb_current_command(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_current_path	src/dev/tmux/format.c	/^format_cb_current_path(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_history_bytes	src/dev/tmux/format.c	/^format_cb_history_bytes(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_host	src/dev/tmux/format.c	/^format_cb_host(__unused struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_host_short	src/dev/tmux/format.c	/^format_cb_host_short(__unused struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_pane_tabs	src/dev/tmux/format.c	/^format_cb_pane_tabs(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_pid	src/dev/tmux/format.c	/^format_cb_pid(__unused struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_session_alerts	src/dev/tmux/format.c	/^format_cb_session_alerts(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_session_stack	src/dev/tmux/format.c	/^format_cb_session_stack(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_start_command	src/dev/tmux/format.c	/^format_cb_start_command(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_window_layout	src/dev/tmux/format.c	/^format_cb_window_layout(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_window_stack_index	src/dev/tmux/format.c	/^format_cb_window_stack_index(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_cb_window_visible_layout	src/dev/tmux/format.c	/^format_cb_window_visible_layout(struct format_tree *ft, struct format_entry *fe)$/;"	f	typeref:typename:void	file:
format_choose	src/dev/tmux/format.c	/^format_choose(char *s, char **left, char **right)$/;"	f	typeref:typename:int	file:
format_create	src/dev/tmux/format.c	/^format_create(struct client *c, struct cmdq_item *item, int tag, int flags)$/;"	f	typeref:struct:format_tree *
format_defaults	src/dev/tmux/format.c	/^format_defaults(struct format_tree *ft, struct client *c, struct session *s,$/;"	f	typeref:typename:void
format_defaults_client	src/dev/tmux/format.c	/^format_defaults_client(struct format_tree *ft, struct client *c)$/;"	f	typeref:typename:void	file:
format_defaults_pane	src/dev/tmux/format.c	/^format_defaults_pane(struct format_tree *ft, struct window_pane *wp)$/;"	f	typeref:typename:void
format_defaults_paste_buffer	src/dev/tmux/format.c	/^format_defaults_paste_buffer(struct format_tree *ft, struct paste_buffer *pb)$/;"	f	typeref:typename:void
format_defaults_session	src/dev/tmux/format.c	/^format_defaults_session(struct format_tree *ft, struct session *s)$/;"	f	typeref:typename:void	file:
format_defaults_window	src/dev/tmux/format.c	/^format_defaults_window(struct format_tree *ft, struct window *w)$/;"	f	typeref:typename:void
format_defaults_winlink	src/dev/tmux/format.c	/^format_defaults_winlink(struct format_tree *ft, struct winlink *wl)$/;"	f	typeref:typename:void	file:
format_entry	src/dev/tmux/format.c	/^struct format_entry {$/;"	s	file:
format_entry_cmp	src/dev/tmux/format.c	/^format_entry_cmp(struct format_entry *fe1, struct format_entry *fe2)$/;"	f	typeref:typename:int	file:
format_expand	src/dev/tmux/format.c	/^format_expand(struct format_tree *ft, const char *fmt)$/;"	f	typeref:typename:char *
format_expand_time	src/dev/tmux/format.c	/^format_expand_time(struct format_tree *ft, const char *fmt, time_t t)$/;"	f	typeref:typename:char *
format_find	src/dev/tmux/format.c	/^format_find(struct format_tree *ft, const char *key, int modifiers)$/;"	f	typeref:typename:char *	file:
format_free	src/dev/tmux/format.c	/^format_free(struct format_tree *ft)$/;"	f	typeref:typename:void
format_job	src/dev/tmux/format.c	/^struct format_job {$/;"	s	file:
format_job_cmp	src/dev/tmux/format.c	/^format_job_cmp(struct format_job *fj1, struct format_job *fj2)$/;"	f	typeref:typename:int	file:
format_job_complete	src/dev/tmux/format.c	/^format_job_complete(struct job *job)$/;"	f	typeref:typename:void	file:
format_job_event	src/dev/tmux/format.c	/^static struct event format_job_event;$/;"	v	typeref:struct:event	file:
format_job_get	src/dev/tmux/format.c	/^format_job_get(struct format_tree *ft, const char *cmd)$/;"	f	typeref:typename:char *	file:
format_job_tidy	src/dev/tmux/format.c	/^format_job_tidy(struct format_job_tree *jobs, int force)$/;"	f	typeref:typename:void	file:
format_job_timer	src/dev/tmux/format.c	/^format_job_timer(__unused int fd, __unused short events, __unused void *arg)$/;"	f	typeref:typename:void	file:
format_job_update	src/dev/tmux/format.c	/^format_job_update(struct job *job)$/;"	f	typeref:typename:void	file:
format_lost_client	src/dev/tmux/format.c	/^format_lost_client(struct client *c)$/;"	f	typeref:typename:void
format_lower	src/dev/tmux/format.c	/^static const char *format_lower[] = {$/;"	v	typeref:typename:const char * []	file:
format_merge	src/dev/tmux/format.c	/^format_merge(struct format_tree *ft, struct format_tree *from)$/;"	f	typeref:typename:void	file:
format_replace	src/dev/tmux/format.c	/^format_replace(struct format_tree *ft, const char *key, size_t keylen,$/;"	f	typeref:typename:int	file:
format_single	src/dev/tmux/format.c	/^format_single(struct cmdq_item *item, const char *fmt, struct client *c,$/;"	f	typeref:typename:char *
format_skip	src/dev/tmux/format.c	/^format_skip(char *s)$/;"	f	typeref:typename:char *	file:
format_tree	src/dev/tmux/format.c	/^struct format_tree {$/;"	s	file:
format_true	src/dev/tmux/format.c	/^format_true(const char *s)$/;"	f	typeref:typename:int
format_upper	src/dev/tmux/format.c	/^static const char *format_upper[] = {$/;"	v	typeref:typename:const char * []	file:
format_window_name	src/dev/tmux/names.c	/^format_window_name(struct window *w)$/;"	f	typeref:typename:char *	file:
formats	src/dev/tmux/tmux.h	/^	struct format_tree	*formats;$/;"	m	struct:cmdq_shared	typeref:struct:format_tree *
forward	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def forward(self, length=1):$/;"	m	class:Reader
forward	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def forward(self, length=1):$/;"	m	class:Reader
fparseln	src/dev/tmux/compat/fparseln.c	/^fparseln(FILE *fp, size_t *size, size_t *lineno, const char str[3],$/;"	f	typeref:typename:char *
frecent	shells/general/z.bash	/^            function frecent(rank, time) {$/;"	f
frecent	shells/zsh/z.zsh	/^            function frecent(rank, time) {$/;"	f
free	src/dev/tmux/tmux.h	/^	void		 (*free)(struct window_pane *);$/;"	m	struct:window_mode	typeref:typename:void (*)(struct window_pane *)
freecb	src/dev/tmux/tmux.h	/^	job_free_cb		 freecb;$/;"	m	struct:job	typeref:typename:job_free_cb
freezero	src/dev/tmux/compat/freezero.c	/^freezero(void *ptr, size_t size)$/;"	f	typeref:typename:void
from_yaml	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    def from_yaml(cls, loader, node):$/;"	m	class:YAMLObject
from_yaml	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    from_yaml = classmethod(from_yaml)$/;"	v	class:YAMLObject
from_yaml	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    def from_yaml(cls, loader, node):$/;"	m	class:YAMLObject
from_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def from_yaml(cls, constructor, node):$/;"	m	class:_make_objects.MyTestClass2
from_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def from_yaml(cls, constructor, node):$/;"	m	class:_make_objects.MyTestClass3
from_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        from_yaml = classmethod(from_yaml)$/;"	v	class:_make_objects.MyTestClass2
from_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        from_yaml = classmethod(from_yaml)$/;"	v	class:_make_objects.MyTestClass3
from_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def from_yaml(cls, constructor, node):$/;"	m	class:_make_objects.MyTestClass2
from_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def from_yaml(cls, constructor, node):$/;"	m	class:_make_objects.MyTestClass3
from_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        from_yaml = classmethod(from_yaml)$/;"	v	class:_make_objects.MyTestClass2
from_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        from_yaml = classmethod(from_yaml)$/;"	v	class:_make_objects.MyTestClass3
fs	shells/general/aliases.bash	/^alias fs="stat -f \\"%z bytes\\""$/;"	a
fs	shells/zsh/aliases.zsh	/^alias fs="stat -f \\"%z bytes\\""$/;"	a
fs	src/crouton-clipboard/server.js	/^  , fs = require('fs')$/;"	v
fs	src/dev/tmux/notify.c	/^	struct cmd_find_state	 fs;$/;"	m	struct:notify_entry	typeref:struct:cmd_find_state	file:
fs	src/dev/tmux/window-tree.c	/^	struct cmd_find_state		  fs;$/;"	m	struct:window_tree_modedata	typeref:struct:cmd_find_state	file:
fs_	src/dev/ninja/src/build_test.cc	/^  VirtualFileSystem fs_;$/;"	m	struct:BuildTest	typeref:typename:VirtualFileSystem	file:
fs_	src/dev/ninja/src/build_test.cc	/^  VirtualFileSystem* fs_;$/;"	m	struct:FakeCommandRunner	typeref:typename:VirtualFileSystem *	file:
fs_	src/dev/ninja/src/clean_test.cc	/^  VirtualFileSystem fs_;$/;"	m	struct:CleanTest	typeref:typename:VirtualFileSystem	file:
fs_	src/dev/ninja/src/graph_test.cc	/^  VirtualFileSystem fs_;$/;"	m	struct:GraphTest	typeref:typename:VirtualFileSystem	file:
fs_	src/dev/ninja/src/manifest_parser_test.cc	/^  VirtualFileSystem fs_;$/;"	m	struct:ParserTest	typeref:typename:VirtualFileSystem	file:
ft	src/dev/tmux/tmux.h	/^	struct format_tree	*ft;$/;"	m	struct:window_choose_data	typeref:struct:format_tree *
ft_template	src/dev/tmux/tmux.h	/^	char			*ft_template;$/;"	m	struct:window_choose_data	typeref:typename:char *
func	src/dev/ninja/src/ninja.cc	/^  NinjaMain::ToolFunc func;$/;"	m	struct:__anon193baac40110::Tool	typeref:typename:NinjaMain::ToolFunc	file:
func_cl_dashL	src/dev/tmux/etc/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	src/dev/tmux/etc/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	src/dev/tmux/etc/compile	/^func_cl_wrapper ()$/;"	f
func_file_conv	src/dev/tmux/etc/compile	/^func_file_conv ()$/;"	f
g	shells/zsh/git.zsh	/^function g() {$/;"	f
g#	editors/vim/config/plugins/all.vim	/^	map g#  <Plug>(asterisk-#)$/;"	m
g*	editors/vim/config/plugins/all.vim	/^	map g*  <Plug>(asterisk-*)$/;"	m
g0set	src/dev/tmux/input.c	/^	int			g0set;	\/* 1 if ACS *\/$/;"	m	struct:input_cell	typeref:typename:int	file:
g1set	src/dev/tmux/input.c	/^	int			g1set;	\/* 1 if ACS *\/$/;"	m	struct:input_cell	typeref:typename:int	file:
g:NERDTreeAutoDeleteBuffer	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmarksFile	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeBookmarksFile = $VARPATH.'\/treemarks'$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = 1$/;"	v
g:NERDTreeCascadeSingleChildDir	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeCascadeSingleChildDir = 0$/;"	v
g:NERDTreeDirArrowCollapsible	editors/vim/themes/rafi-2016.vim	/^let g:NERDTreeDirArrowCollapsible = '▼'$/;"	v
g:NERDTreeDirArrowCollapsible	editors/vim/themes/rafi-2017.vim	/^let g:NERDTreeDirArrowCollapsible = '▼'$/;"	v
g:NERDTreeDirArrowExpandable	editors/vim/themes/rafi-2016.vim	/^let g:NERDTreeDirArrowExpandable = '▷'$/;"	v
g:NERDTreeDirArrowExpandable	editors/vim/themes/rafi-2017.vim	/^let g:NERDTreeDirArrowExpandable = '▷'$/;"	v
g:NERDTreeHijackNetrw	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeHijackNetrw = 1$/;"	v
g:NERDTreeIndicatorMapCustom	editors/vim/themes/rafi-2016.vim	/^let g:NERDTreeIndicatorMapCustom = {$/;"	v
g:NERDTreeIndicatorMapCustom	editors/vim/themes/rafi-2017.vim	/^let g:NERDTreeIndicatorMapCustom = {$/;"	v
g:NERDTreeMapCloseChildren	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapCloseChildren = 'T'$/;"	v
g:NERDTreeMapOpenInTab	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapOpenInTab = 'st'$/;"	v
g:NERDTreeMapOpenInTabSilent	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapOpenInTabSilent = 'sT'$/;"	v
g:NERDTreeMapOpenRecursively	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapOpenRecursively = 't'$/;"	v
g:NERDTreeMapOpenSplit	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapOpenSplit = 'sg'$/;"	v
g:NERDTreeMapOpenVSplit	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapOpenVSplit = 'sv'$/;"	v
g:NERDTreeMapToggleHidden	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapToggleHidden = '.'$/;"	v
g:NERDTreeMapUpdirKeepOpen	editors/vim/config/plugins/all.vim	/^	let g:NERDTreeMapUpdirKeepOpen = '<BS>'$/;"	v
g:NERDTreeMinimalUI	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeMinimalUI = 1$/;"	v
g:NERDTreeQuitOnOpen	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeQuitOnOpen = 1$/;"	v
g:NERDTreeRespectWildIgnore	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeRespectWildIgnore = 1$/;"	v
g:NERDTreeShowHidden	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeShowHidden = 1$/;"	v
g:NERDTreeWinSize	editors/vim/config/plugins/nerdtree.vim	/^let g:NERDTreeWinSize = 25$/;"	v
g:PHP_removeCRwhenUnix	editors/vim/config/filetype.vim	/^let g:PHP_removeCRwhenUnix = 0$/;"	v
g:SimpleJsIndenter_BriefMode	editors/vim/config/filetype.vim	/^let g:SimpleJsIndenter_BriefMode = 1$/;"	v
g:SimpleJsIndenter_CaseIndentLevel	editors/vim/config/filetype.vim	/^let g:SimpleJsIndenter_CaseIndentLevel = -1$/;"	v
g:airline#extensions#neomake#enabled	editors/vim/config/plugins/neomake.vim	/^let g:airline#extensions#neomake#enabled = 0$/;"	v
g:bookmark_sign	editors/vim/themes/rafi-2016.vim	/^let g:bookmark_sign = '⚐'$/;"	v
g:bookmark_sign	editors/vim/themes/rafi-2017.vim	/^let g:bookmark_sign = '⚐'$/;"	v
g:choosewin_blink_on_land	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_blink_on_land = 0$/;"	v
g:choosewin_blink_on_land	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_blink_on_land = 0$/;"	v
g:choosewin_color_label	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_color_label = {$/;"	v
g:choosewin_color_label	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_color_label = {$/;"	v
g:choosewin_color_label_current	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_color_label_current = {$/;"	v
g:choosewin_color_label_current	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_color_label_current = {$/;"	v
g:choosewin_color_other	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_color_other = {$/;"	v
g:choosewin_color_other	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_color_other = {$/;"	v
g:choosewin_color_overlay	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_color_overlay = {$/;"	v
g:choosewin_color_overlay	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_color_overlay = {$/;"	v
g:choosewin_color_overlay_current	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_color_overlay_current = {$/;"	v
g:choosewin_color_overlay_current	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_color_overlay_current = {$/;"	v
g:choosewin_label	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_label = 'SDFJKLZXCV'$/;"	v
g:choosewin_label	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_label = 'SDFJKLZXCV'$/;"	v
g:choosewin_overlay_clear_multibyte	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_overlay_clear_multibyte = 0$/;"	v
g:choosewin_overlay_clear_multibyte	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_overlay_clear_multibyte = 0$/;"	v
g:choosewin_overlay_enable	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_overlay_enable = 1$/;"	v
g:choosewin_overlay_enable	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_overlay_enable = 1$/;"	v
g:choosewin_statusline_replace	editors/vim/themes/rafi-2016.vim	/^let g:choosewin_statusline_replace = 1$/;"	v
g:choosewin_statusline_replace	editors/vim/themes/rafi-2017.vim	/^let g:choosewin_statusline_replace = 1$/;"	v
g:colors_name	editors/vim/themes/one.vim	/^let g:colors_name = 'one'$/;"	v
g:committia_hooks	editors/vim/config/plugins/all.vim	/^	let g:committia_hooks = {}$/;"	v
g:dein#enable_notification	editors/vim/config/fullrc.vim	/^let g:dein#enable_notification = 0$/;"	v
g:dein#install_log_filename	editors/vim/config/fullrc.vim	/^let g:dein#install_log_filename = $VARPATH.'\/dein.log'$/;"	v
g:dein#install_max_processes	editors/vim/config/fullrc.vim	/^let g:dein#install_max_processes = 16$/;"	v
g:dein#install_progress_type	editors/vim/config/fullrc.vim	/^let g:dein#install_progress_type = 'echo'$/;"	v
g:denite_plugins	editors/vim/config/fullrc.vim	/^		let g:denite_plugins = json_decode($/;"	v
g:deoplete#auto_complete_delay	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#auto_complete_delay = 200 " Default is 50$/;"	v
g:deoplete#auto_refresh_delay	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#auto_refresh_delay = 500  " Default is 500$/;"	v
g:deoplete#enable_camel_case	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#enable_camel_case = 1$/;"	v
g:deoplete#enable_refresh_always	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#enable_refresh_always = 0$/;"	v
g:deoplete#file#enable_buffer_path	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#file#enable_buffer_path = 1$/;"	v
g:deoplete#ignore_sources	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#ignore_sources = get(g:, 'deoplete#ignore_sources', {})$/;"	v
g:deoplete#max_abbr_width	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#max_abbr_width = 35$/;"	v
g:deoplete#max_menu_width	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#max_menu_width = 20$/;"	v
g:deoplete#omni#functions	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#functions = get(g:, 'deoplete#omni#functions', {})$/;"	v
g:deoplete#omni#functions	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#functions.css = 'csscomplete#CompleteCSS'$/;"	v
g:deoplete#omni#functions	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#functions.html = 'htmlcomplete#CompleteTags'$/;"	v
g:deoplete#omni#functions	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#functions.markdown = 'htmlcomplete#CompleteTags'$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns = get(g:, 'deoplete#omni#input_patterns', {})$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns.css  = '^\\s\\+\\w\\+\\|\\w\\+[):;]\\?\\s\\+\\w*\\|[@!]'$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns.javascript = ''$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns.md = '<[^>]*'$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns.python = ''$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns.sass = '^\\s\\+\\w\\+\\|\\w\\+[):;]\\?\\s\\+\\w*\\|[@!]'$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns.scss = '^\\s\\+\\w\\+\\|\\w\\+[):;]\\?\\s\\+\\w*\\|[@!]'$/;"	v
g:deoplete#omni#input_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni#input_patterns.xml = '<[^>]*'$/;"	v
g:deoplete#omni_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni_patterns = get(g:, 'deoplete#omni_patterns', {})$/;"	v
g:deoplete#omni_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni_patterns.html = '<[^>]*'$/;"	v
g:deoplete#omni_patterns	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#omni_patterns.php =$/;"	v
g:deoplete#skip_chars	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#skip_chars = ['(', ')', '<', '>']$/;"	v
g:deoplete#sources	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources = get(g:, 'deoplete#sources', {})$/;"	v
g:deoplete#sources	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources.go = ['vim-go']$/;"	v
g:deoplete#sources#jedi#short_types	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources#jedi#short_types = 1$/;"	v
g:deoplete#sources#jedi#show_docstring	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources#jedi#show_docstring = 1$/;"	v
g:deoplete#sources#jedi#statement_length	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources#jedi#statement_length = 30$/;"	v
g:deoplete#sources#ternjs#docs	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources#ternjs#docs = 1$/;"	v
g:deoplete#sources#ternjs#filetypes	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources#ternjs#filetypes = [$/;"	v
g:deoplete#sources#ternjs#timeout	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources#ternjs#timeout = 3$/;"	v
g:deoplete#sources#ternjs#types	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#sources#ternjs#types = 1$/;"	v
g:deoplete#tag#cache_limit_size	editors/vim/config/plugins/deoplete.vim	/^let g:deoplete#tag#cache_limit_size = 800000$/;"	v
g:gitgutter_sign_added	editors/vim/themes/rafi-2015.vim	/^let g:gitgutter_sign_added = '▎'$/;"	v
g:gitgutter_sign_added	editors/vim/themes/rafi-2016.vim	/^let g:gitgutter_sign_added = '▎'$/;"	v
g:gitgutter_sign_added	editors/vim/themes/rafi-2017.vim	/^let g:gitgutter_sign_added = '▎'$/;"	v
g:gitgutter_sign_modified	editors/vim/themes/rafi-2015.vim	/^let g:gitgutter_sign_modified = '▎'$/;"	v
g:gitgutter_sign_modified	editors/vim/themes/rafi-2016.vim	/^let g:gitgutter_sign_modified = '▎'$/;"	v
g:gitgutter_sign_modified	editors/vim/themes/rafi-2017.vim	/^let g:gitgutter_sign_modified = '▎'$/;"	v
g:gitgutter_sign_modified_removed	editors/vim/themes/rafi-2015.vim	/^let g:gitgutter_sign_modified_removed = '▋'$/;"	v
g:gitgutter_sign_modified_removed	editors/vim/themes/rafi-2016.vim	/^let g:gitgutter_sign_modified_removed = '▋'$/;"	v
g:gitgutter_sign_modified_removed	editors/vim/themes/rafi-2017.vim	/^let g:gitgutter_sign_modified_removed = '▋'$/;"	v
g:gitgutter_sign_removed	editors/vim/themes/rafi-2015.vim	/^let g:gitgutter_sign_removed = '▏'$/;"	v
g:gitgutter_sign_removed	editors/vim/themes/rafi-2016.vim	/^let g:gitgutter_sign_removed = '▏'$/;"	v
g:gitgutter_sign_removed	editors/vim/themes/rafi-2017.vim	/^let g:gitgutter_sign_removed = '▏'$/;"	v
g:gitgutter_sign_removed_first_line	editors/vim/themes/rafi-2015.vim	/^let g:gitgutter_sign_removed_first_line = '▔'$/;"	v
g:gitgutter_sign_removed_first_line	editors/vim/themes/rafi-2016.vim	/^let g:gitgutter_sign_removed_first_line = '▔'$/;"	v
g:gitgutter_sign_removed_first_line	editors/vim/themes/rafi-2017.vim	/^let g:gitgutter_sign_removed_first_line = '▔'$/;"	v
g:indent_guides_auto_colors	editors/vim/themes/rafi-2015.vim	/^let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	editors/vim/themes/rafi-2016.vim	/^let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_guide_size	editors/vim/themes/rafi-2015.vim	/^let g:indent_guides_guide_size = 1$/;"	v
g:indent_guides_guide_size	editors/vim/themes/rafi-2016.vim	/^let g:indent_guides_guide_size = 1$/;"	v
g:indent_guides_start_level	editors/vim/themes/rafi-2015.vim	/^let g:indent_guides_start_level = 1$/;"	v
g:indent_guides_start_level	editors/vim/themes/rafi-2016.vim	/^let g:indent_guides_start_level = 1$/;"	v
g:is_bash	editors/vim/config/filetype.vim	/^let g:is_bash = 1$/;"	v
g:java_allow_cpp_keywords	editors/vim/config/filetype.vim	/^let g:java_allow_cpp_keywords = 1$/;"	v
g:java_highlight_all	editors/vim/config/filetype.vim	/^let g:java_highlight_all = 1$/;"	v
g:java_highlight_debug	editors/vim/config/filetype.vim	/^let g:java_highlight_debug = 1$/;"	v
g:java_highlight_functions	editors/vim/config/filetype.vim	/^let g:java_highlight_functions = 'style'$/;"	v
g:java_highlight_functions	editors/vim/config/filetype.vim	/^let g:java_highlight_functions = 1$/;"	v
g:java_space_errors	editors/vim/config/filetype.vim	/^let g:java_space_errors = 1$/;"	v
g:jedi#completions_command	editors/vim/config/plugins/all.vim	/^	let g:jedi#completions_command = ''$/;"	v
g:jedi#documentation_command	editors/vim/config/plugins/all.vim	/^	let g:jedi#documentation_command = 'K'$/;"	v
g:jedi#goto_assignments_command	editors/vim/config/plugins/all.vim	/^	let g:jedi#goto_assignments_command = '<Leader>g'$/;"	v
g:jedi#goto_command	editors/vim/config/plugins/all.vim	/^	let g:jedi#goto_command = '<A-]>'$/;"	v
g:jedi#rename_command	editors/vim/config/plugins/all.vim	/^	let g:jedi#rename_command = '<Leader>R'$/;"	v
g:jedi#usages_command	editors/vim/config/plugins/all.vim	/^	let g:jedi#usages_command = '<Leader>n'$/;"	v
g:lasttab	editors/vim/config/mappings.vim	/^let g:lasttab = 1$/;"	v
g:loaded_2html_plugin	editors/vim/config/init.vim	/^let g:loaded_2html_plugin = 1$/;"	v
g:loaded_getscript	editors/vim/config/init.vim	/^let g:loaded_getscript = 1$/;"	v
g:loaded_getscriptPlugin	editors/vim/config/init.vim	/^let g:loaded_getscriptPlugin = 1$/;"	v
g:loaded_gzip	editors/vim/config/init.vim	/^let g:loaded_gzip = 1$/;"	v
g:loaded_logiPat	editors/vim/config/init.vim	/^let g:loaded_logiPat = 1$/;"	v
g:loaded_matchit	editors/vim/config/init.vim	/^let g:loaded_matchit = 1$/;"	v
g:loaded_matchparen	editors/vim/config/init.vim	/^let g:loaded_matchparen = 1$/;"	v
g:loaded_rrhelper	editors/vim/config/init.vim	/^let g:loaded_rrhelper = 1$/;"	v
g:loaded_ruby_provider	editors/vim/config/init.vim	/^let g:loaded_ruby_provider = 1$/;"	v
g:loaded_shada_plugin	editors/vim/config/init.vim	/^let g:loaded_shada_plugin = 1$/;"	v
g:loaded_tar	editors/vim/config/init.vim	/^let g:loaded_tar = 1$/;"	v
g:loaded_tarPlugin	editors/vim/config/init.vim	/^let g:loaded_tarPlugin = 1$/;"	v
g:loaded_tutor_mode_plugin	editors/vim/config/init.vim	/^let g:loaded_tutor_mode_plugin = 1$/;"	v
g:loaded_vimball	editors/vim/config/init.vim	/^let g:loaded_vimball = 1$/;"	v
g:loaded_vimballPlugin	editors/vim/config/init.vim	/^let g:loaded_vimballPlugin = 1$/;"	v
g:loaded_zip	editors/vim/config/init.vim	/^let g:loaded_zip = 1$/;"	v
g:loaded_zipPlugin	editors/vim/config/init.vim	/^let g:loaded_zipPlugin = 1$/;"	v
g:mapleader	editors/vim/config/init.vim	/^let g:mapleader="\\<Space>"$/;"	v
g:maplocalleader	editors/vim/config/init.vim	/^let g:maplocalleader=';'$/;"	v
g:markdown_fenced_languages	editors/vim/config/filetype.vim	/^let g:markdown_fenced_languages = [$/;"	v
g:markdown_fenced_languages	editors/vim/ftplugin/markdown.vim	/^let g:markdown_fenced_languages = ['css', 'javascript', 'js=javascript', 'json=javascript', 'sty/;"	v
g:neocomplete#auto_completion_start_length	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#auto_completion_start_length = 2$/;"	v
g:neocomplete#disable_auto_complete	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#disable_auto_complete = 0$/;"	v
g:neocomplete#disable_auto_select_buffer_name_pattern	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#disable_auto_select_buffer_name_pattern =$/;"	v
g:neocomplete#enable_auto_close_preview	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#enable_auto_close_preview = 1$/;"	v
g:neocomplete#enable_auto_delimiter	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#enable_auto_delimiter = 1$/;"	v
g:neocomplete#enable_auto_select	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#enable_auto_select = 0$/;"	v
g:neocomplete#enable_camel_case	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#enable_camel_case = 1$/;"	v
g:neocomplete#enable_fuzzy_completion	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#enable_fuzzy_completion = 1$/;"	v
g:neocomplete#enable_smart_case	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#enable_smart_case = 1$/;"	v
g:neocomplete#fallback_mappings	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#fallback_mappings = [ "\\<C-x>\\<C-o>", "\\<C-x>\\<C-n>" ]$/;"	v
g:neocomplete#force_omni_input_patterns	editors/vim/config/plugins/neocomplete.vim	/^	let g:neocomplete#force_omni_input_patterns = {}$/;"	v
g:neocomplete#force_omni_input_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns.javascript =$/;"	v
g:neocomplete#force_omni_input_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns.php =$/;"	v
g:neocomplete#force_omni_input_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns.typescript =$/;"	v
g:neocomplete#keyword_patterns	editors/vim/config/plugins/neocomplete.vim	/^	let g:neocomplete#keyword_patterns = {}$/;"	v
g:neocomplete#keyword_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#keyword_patterns._ = '\\h\\k*(\\?'$/;"	v
g:neocomplete#lock_buffer_name_pattern	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#lock_buffer_name_pattern =$/;"	v
g:neocomplete#manual_completion_start_length	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#manual_completion_start_length = 0$/;"	v
g:neocomplete#max_list	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#max_list = 150$/;"	v
g:neocomplete#min_keyword_length	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#min_keyword_length = 3$/;"	v
g:neocomplete#skip_auto_completion_time	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#skip_auto_completion_time = ''$/;"	v
g:neocomplete#sources#buffer#disabled_pattern	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#sources#buffer#disabled_pattern =$/;"	v
g:neocomplete#sources#omni#input_patterns	editors/vim/config/plugins/neocomplete.vim	/^	let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#sources#omni#input_patterns.coffee =$/;"	v
g:neocomplete#sources#omni#input_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#sources#omni#input_patterns.go =$/;"	v
g:neocomplete#sources#omni#input_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#sources#omni#input_patterns.python =$/;"	v
g:neocomplete#sources#omni#input_patterns	editors/vim/config/plugins/neocomplete.vim	/^let g:neocomplete#sources#omni#input_patterns.ruby =$/;"	v
g:neomake_ansible_enabled_makers	editors/vim/config/plugins/neomake.vim	/^let g:neomake_ansible_enabled_makers = ['yamllint']$/;"	v
g:neomake_ansible_yamllint_maker	editors/vim/config/plugins/neomake.vim	/^let g:neomake_ansible_yamllint_maker = neomake#makers#ft#yaml#yamllint()$/;"	v
g:neomake_error_sign	editors/vim/themes/rafi-2016.vim	/^let g:neomake_error_sign = {'text': '⎖', 'texthl': 'ErrorMsg'}$/;"	v
g:neomake_error_sign	editors/vim/themes/rafi-2017.vim	/^let g:neomake_error_sign = {'text': '!', 'texthl': 'ErrorMsg'}$/;"	v
g:neomake_info_sign	editors/vim/themes/rafi-2016.vim	/^let g:neomake_info_sign = {'text': 'i', 'texthl': 'NeomakeInfoSign'}$/;"	v
g:neomake_info_sign	editors/vim/themes/rafi-2017.vim	/^let g:neomake_info_sign = {'text': '⍞', 'texthl': 'NeomakeInfoSign'}$/;"	v
g:neomake_javascript_enabled_makers	editors/vim/config/plugins/neomake.vim	/^let g:neomake_javascript_enabled_makers = ['eslint']$/;"	v
g:neomake_javascript_eslint_exe	editors/vim/config/plugins/neomake.vim	/^let g:neomake_javascript_eslint_exe = '.\/node_modules\/.bin\/eslint'$/;"	v
g:neomake_jsx_enabled_makers	editors/vim/config/plugins/neomake.vim	/^let g:neomake_jsx_enabled_makers = ['eslint']$/;"	v
g:neomake_message_sign	editors/vim/themes/rafi-2016.vim	/^let g:neomake_message_sign = {'text': 's', 'texthl': 'NeomakeMessageSign'}$/;"	v
g:neomake_message_sign	editors/vim/themes/rafi-2017.vim	/^let g:neomake_message_sign = {'text': '⌂', 'texthl': 'NeomakeMessageSign'}$/;"	v
g:neomake_open_list	editors/vim/config/plugins/neomake.vim	/^let g:neomake_open_list = 0$/;"	v
g:neomake_python_python_exe	editors/vim/config/plugins/neomake.vim	/^	let g:neomake_python_python_exe = g:python3_host_prog$/;"	v
g:neomake_verbose	editors/vim/config/plugins/neomake.vim	/^let g:neomake_verbose = 1$/;"	v
g:neomake_warning_sign	editors/vim/themes/rafi-2016.vim	/^let g:neomake_warning_sign = {'text': '⎖', 'texthl': 'WarningMsg'}$/;"	v
g:neomake_warning_sign	editors/vim/themes/rafi-2017.vim	/^let g:neomake_warning_sign = {'text': '!', 'texthl': 'WarningSyntax'}$/;"	v
g:neomake_yaml_enabled_makers	editors/vim/config/plugins/neomake.vim	/^let g:neomake_yaml_enabled_makers = ['yamllint']$/;"	v
g:netrw_altv	editors/vim/config/minrc.vim	/^let g:netrw_altv = 1$/;"	v
g:netrw_banner	editors/vim/config/minrc.vim	/^let g:netrw_banner = 0$/;"	v
g:netrw_browse_split	editors/vim/config/minrc.vim	/^let g:netrw_browse_split = 4$/;"	v
g:netrw_dirhistmax	editors/vim/config/minrc.vim	/^let g:netrw_dirhistmax = 0$/;"	v
g:netrw_list_hide	editors/vim/config/minrc.vim	/^let g:netrw_list_hide = '\\(^\\|\\s\\s\\)\\zs\\.\\S\\+,\\(^\\|\\s\\s\\)ntuser\\.\\S\\+'$/;"	v
g:netrw_list_hide	editors/vim/config/minrc.vim	/^let g:netrw_list_hide='.*\\.swp$'$/;"	v
g:netrw_liststyle	editors/vim/config/minrc.vim	/^let g:netrw_liststyle = 3$/;"	v
g:netrw_winsize	editors/vim/config/minrc.vim	/^let g:netrw_winsize = 25$/;"	v
g:one_allow_italics	editors/vim/themes/one.vim	/^  let g:one_allow_italics = 0$/;"	v
g:perl_fold	editors/vim/config/filetype.vim	/^let g:perl_fold = 1$/;"	v
g:php_folding	editors/vim/config/filetype.vim	/^let g:php_folding = 2$/;"	v
g:php_phpdoc_folding	editors/vim/config/filetype.vim	/^let g:php_phpdoc_folding = 1$/;"	v
g:pymode_breakpoint_bind	editors/vim/config/plugins/all.vim	/^	let g:pymode_breakpoint_bind = '<Leader>b'$/;"	v
g:pymode_rope_rename_bind	editors/vim/config/plugins/all.vim	/^	let g:pymode_rope_rename_bind = '<Leader>R'$/;"	v
g:python3_host_prog	editors/vim/config/neovim.vim	/^	let g:python3_host_prog = $VARPATH.'\/venv\/neovim3\/bin\/python'$/;"	v
g:python_highlight_all	editors/vim/config/filetype.vim	/^let g:python_highlight_all = 1$/;"	v
g:python_host_prog	editors/vim/config/neovim.vim	/^	let g:python_host_prog = $VARPATH.'\/venv\/neovim2\/bin\/python'$/;"	v
g:session_directory	editors/vim/plugin/sessions.vim	/^let g:session_directory = $VARPATH.'\/session'$/;"	v
g:splitjoin_join_mapping	editors/vim/config/plugins/all.vim	/^	let g:splitjoin_join_mapping = ''$/;"	v
g:splitjoin_split_mapping	editors/vim/config/plugins/all.vim	/^	let g:splitjoin_split_mapping = ''$/;"	v
g:tagbar_iconchars	editors/vim/themes/rafi-2016.vim	/^let g:tagbar_iconchars = ['▷', '◢']$/;"	v
g:tagbar_iconchars	editors/vim/themes/rafi-2017.vim	/^let g:tagbar_iconchars = ['▷', '◢']$/;"	v
g:tagbar_map_closefold	editors/vim/config/plugins/all.vim	/^	let g:tagbar_map_closefold = ['h', '-', 'zc']$/;"	v
g:tagbar_map_openfold	editors/vim/config/plugins/all.vim	/^	let g:tagbar_map_openfold = ['l', '+', 'zo']$/;"	v
g:terminal_color_0	editors/vim/themes/one.vim	/^  let g:terminal_color_0  = "#353a44"$/;"	v
g:terminal_color_1	editors/vim/themes/one.vim	/^  let g:terminal_color_1  = "#e88388"$/;"	v
g:terminal_color_10	editors/vim/themes/one.vim	/^  let g:terminal_color_10 = "#a7cc8c"$/;"	v
g:terminal_color_11	editors/vim/themes/one.vim	/^  let g:terminal_color_11 = "#ebca8d"$/;"	v
g:terminal_color_12	editors/vim/themes/one.vim	/^  let g:terminal_color_12 = "#72bef2"$/;"	v
g:terminal_color_13	editors/vim/themes/one.vim	/^  let g:terminal_color_13 = "#d291e4"$/;"	v
g:terminal_color_14	editors/vim/themes/one.vim	/^  let g:terminal_color_14 = "#65c2cd"$/;"	v
g:terminal_color_15	editors/vim/themes/one.vim	/^  let g:terminal_color_15 = "#e3e5e9"$/;"	v
g:terminal_color_2	editors/vim/themes/one.vim	/^  let g:terminal_color_2  = "#a7cc8c"$/;"	v
g:terminal_color_3	editors/vim/themes/one.vim	/^  let g:terminal_color_3  = "#ebca8d"$/;"	v
g:terminal_color_4	editors/vim/themes/one.vim	/^  let g:terminal_color_4  = "#72bef2"$/;"	v
g:terminal_color_5	editors/vim/themes/one.vim	/^  let g:terminal_color_5  = "#d291e4"$/;"	v
g:terminal_color_6	editors/vim/themes/one.vim	/^  let g:terminal_color_6  = "#65c2cd"$/;"	v
g:terminal_color_7	editors/vim/themes/one.vim	/^  let g:terminal_color_7  = "#e3e5e9"$/;"	v
g:terminal_color_8	editors/vim/themes/one.vim	/^  let g:terminal_color_8  = "#353a44"$/;"	v
g:terminal_color_9	editors/vim/themes/one.vim	/^  let g:terminal_color_9  = "#e88388"$/;"	v
g:tex_fold_enabled	editors/vim/config/filetype.vim	/^let g:tex_fold_enabled = 1$/;"	v
g:theme_name	editors/vim/config/theme.vim	/^let g:theme_name = 'rafi-2017'$/;"	v
g:verbose_level	editors/vim/config/mappings.vim	/^let g:verbose_level = 9$/;"	v
g:vim_indent_cont	editors/vim/config/filetype.vim	/^let g:vim_indent_cont = &shiftwidth$/;"	v
g:vimfiler_file_icon	editors/vim/themes/rafi-2015.vim	/^let g:vimfiler_file_icon = ' '$/;"	v
g:vimfiler_file_icon	editors/vim/themes/rafi-2016.vim	/^let g:vimfiler_file_icon = ' '$/;"	v
g:vimfiler_marked_file_icon	editors/vim/themes/rafi-2015.vim	/^let g:vimfiler_marked_file_icon = '✓'$/;"	v
g:vimfiler_marked_file_icon	editors/vim/themes/rafi-2016.vim	/^let g:vimfiler_marked_file_icon = '✓'$/;"	v
g:vimfiler_readonly_file_icon	editors/vim/themes/rafi-2015.vim	/^let g:vimfiler_readonly_file_icon = '⭤'$/;"	v
g:vimfiler_readonly_file_icon	editors/vim/themes/rafi-2016.vim	/^let g:vimfiler_readonly_file_icon = '✖'$/;"	v
g:vimfiler_tree_closed_icon	editors/vim/themes/rafi-2015.vim	/^let g:vimfiler_tree_closed_icon = '▷'$/;"	v
g:vimfiler_tree_closed_icon	editors/vim/themes/rafi-2016.vim	/^let g:vimfiler_tree_closed_icon = '▷'$/;"	v
g:vimfiler_tree_indentation	editors/vim/themes/rafi-2015.vim	/^let g:vimfiler_tree_indentation = 1$/;"	v
g:vimfiler_tree_indentation	editors/vim/themes/rafi-2016.vim	/^let g:vimfiler_tree_indentation = 1$/;"	v
g:vimfiler_tree_leaf_icon	editors/vim/themes/rafi-2015.vim	/^let g:vimfiler_tree_leaf_icon = '┆'$/;"	v
g:vimfiler_tree_leaf_icon	editors/vim/themes/rafi-2016.vim	/^let g:vimfiler_tree_leaf_icon = '┆'$/;"	v
g:vimfiler_tree_opened_icon	editors/vim/themes/rafi-2015.vim	/^let g:vimfiler_tree_opened_icon = '▼'$/;"	v
g:vimfiler_tree_opened_icon	editors/vim/themes/rafi-2016.vim	/^let g:vimfiler_tree_opened_icon = '▼'$/;"	v
g:vimsyn_folding	editors/vim/config/filetype.vim	/^let g:vimsyn_folding = 'af'$/;"	v
g:vimsyntax_noerror	editors/vim/config/filetype.vim	/^let g:vimsyntax_noerror = 1$/;"	v
g:virtualenv_directory	editors/vim/ftplugin/python.vim	/^	let g:virtualenv_directory = getcwd()$/;"	v
g:xml_syntax_folding	editors/vim/config/filetype.vim	/^let g:xml_syntax_folding = 1$/;"	v
gQ	editors/vim/config/mappings.vim	/^nnoremap gQ @q$/;"	m
g_current_test	src/dev/ninja/src/ninja_test.cc	/^testing::Test* g_current_test;$/;"	v	typeref:typename:testing::Test *
g_experimental_statcache	src/dev/ninja/src/debug_flags.cc	/^bool g_experimental_statcache = true;$/;"	v	typeref:typename:bool
g_explaining	src/dev/ninja/src/debug_flags.cc	/^bool g_explaining = false;$/;"	v	typeref:typename:bool
g_keep_depfile	src/dev/ninja/src/debug_flags.cc	/^bool g_keep_depfile = false;$/;"	v	typeref:typename:bool
g_keep_rsp	src/dev/ninja/src/debug_flags.cc	/^bool g_keep_rsp = false;$/;"	v	typeref:typename:bool
g_metrics	src/dev/ninja/src/metrics.cc	/^Metrics* g_metrics = NULL;$/;"	v	typeref:typename:Metrics *
gac	shells/zsh/git.zsh	/^alias gac="git add . && git commit -m"$/;"	a
gaca	shells/zsh/git.zsh	/^alias gaca="git add . && git commit --amend"$/;"	a
gc	editors/vim/config/plugins/all.vim	/^	nmap gc  <Plug>Commentary$/;"	m
gc	editors/vim/config/plugins/all.vim	/^	omap gc  <Plug>Commentary$/;"	m
gc	editors/vim/config/plugins/all.vim	/^	xmap gc  <Plug>Commentary$/;"	m
gc	src/dev/tmux/screen-write.c	/^	struct grid_cell	 gc;$/;"	m	struct:screen_write_collect_item	typeref:struct:grid_cell	file:
gcc	editors/vim/config/plugins/all.vim	/^	nmap gcc <Plug>CommentaryLine$/;"	m
gcu	editors/vim/config/plugins/all.vim	/^	nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
generate.toc	src/dev/ninja/doc/docbook.xsl	/^  <xsl:param name="generate.toc">book toc<\/xsl:param>$/;"	p
generate_anchor	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    def generate_anchor(self, node):$/;"	m	class:Serializer
generate_anchor	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    def generate_anchor(self, node):$/;"	m	class:Serializer
generate_footer	src/dev/ninja/src/gen_doxygen_mainpage.sh	/^generate_footer()$/;"	f
generate_header	src/dev/ninja/src/gen_doxygen_mainpage.sh	/^generate_header()$/;"	f
generate_html	src/dev/ninja/src/browse.py	/^def generate_html(node):$/;"	f
get	terminals/tmux/themes/one-dark.sh	/^get() {$/;"	f
get_classobj_bases	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def get_classobj_bases(self, cls):$/;"	m	class:BaseRepresenter
get_config	meta/dotbot/dotbot/config.py	/^    def get_config(self):$/;"	m	class:ConfigReader
get_data	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def get_data(self):$/;"	m	class:BaseConstructor
get_data	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def get_data(self):$/;"	m	class:BaseConstructor
get_digits_from_string	terminals/tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_event	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def get_event(self):$/;"	m	class:CParser
get_event	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def get_event(self):$/;"	m	class:Parser
get_event	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def get_event(self):$/;"	m	class:Parser
get_event	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def get_event(self):$/;"	m	class:CanonicalParser
get_event	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def get_event(self):$/;"	m	class:CanonicalParser
get_mark	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def get_mark(self):$/;"	m	class:Reader
get_mark	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def get_mark(self):$/;"	m	class:Reader
get_name	src/zplug/misc/contrib/parser.awk	/^function get_name(arr, tag,     n, tags, i, name) {$/;"	f
get_name	src/zplug/repos/zplug/zplug/misc/contrib/parser.awk	/^function get_name(arr, tag,     n, tags, i, name) {$/;"	f
get_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def get_node(self):$/;"	m	class:CParser
get_node	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def get_node(self):$/;"	m	class:Composer
get_node	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def get_node(self):$/;"	m	class:Composer
get_outputs	meta/dotbot/lib/pyyaml/setup.py	/^    def get_outputs(self):$/;"	m	class:build_ext
get_single_data	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def get_single_data(self):$/;"	m	class:BaseConstructor
get_single_data	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def get_single_data(self):$/;"	m	class:BaseConstructor
get_single_node	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def get_single_node(self):$/;"	m	class:CParser
get_single_node	meta/dotbot/lib/pyyaml/lib/yaml/composer.py	/^    def get_single_node(self):$/;"	m	class:Composer
get_single_node	meta/dotbot/lib/pyyaml/lib3/yaml/composer.py	/^    def get_single_node(self):$/;"	m	class:Composer
get_snippet	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def get_snippet(self):$/;"	m	class:Mark
get_snippet	meta/dotbot/lib/pyyaml/lib/yaml/error.py	/^    def get_snippet(self, indent=4, max_length=75):$/;"	m	class:Mark
get_snippet	meta/dotbot/lib/pyyaml/lib3/yaml/error.py	/^    def get_snippet(self, indent=4, max_length=75):$/;"	m	class:Mark
get_source_files	meta/dotbot/lib/pyyaml/setup.py	/^    def get_source_files(self):$/;"	m	class:build_ext
get_tag	src/zplug/misc/contrib/parser.awk	/^function get_tag(line, tag,    name, i, j, n, tags, line_tags, ret, key_and_value, key, value) {$/;"	f
get_tag	src/zplug/repos/zplug/zplug/misc/contrib/parser.awk	/^function get_tag(line, tag,    name, i, j, n, tags, line_tags, ret, key_and_value, key, value) {$/;"	f
get_tmux_option	terminals/tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	terminals/tmux/plugins/tpm/tpm	/^get_tmux_option() {$/;"	f
get_token	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def get_token(self):$/;"	m	class:CParser
get_token	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def get_token(self):$/;"	m	class:Scanner
get_token	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def get_token(self):$/;"	m	class:Scanner
get_token	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def get_token(self, choice=None):$/;"	m	class:CanonicalScanner
get_token	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def get_token(self, choice=None):$/;"	m	class:CanonicalScanner
get_token_value	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def get_token_value(self):$/;"	m	class:CanonicalScanner
get_token_value	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def get_token_value(self):$/;"	m	class:CanonicalScanner
get_tokens_unprocessed	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:YAMLLexer
get_version	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^def get_version():$/;"	f
get_version_string	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^def get_version_string():$/;"	f
getcwd	src/dev/ninja/src/util.h	/^#define getcwd /;"	d
getdtablecount	src/dev/tmux/compat/getdtablecount.c	/^getdtablecount(void)$/;"	f	typeref:typename:int
getopt	src/dev/ninja/src/getopt.c	/^getopt (int argc, char **argv, char *optstring)$/;"	f	typeref:typename:int
getopt	src/dev/tmux/compat.h	/^#define getopt(/;"	d
getopt_internal	src/dev/ninja/src/getopt.c	/^getopt_internal (int argc, char **argv, char *shortopts,$/;"	f	typeref:typename:int	file:
getopt_long	src/dev/ninja/src/getopt.c	/^getopt_long (int argc, char **argv, const char *shortopts,$/;"	f	typeref:typename:int
getopt_long_only	src/dev/ninja/src/getopt.c	/^getopt_long_only (int argc, char **argv, const char *shortopts,$/;"	f	typeref:typename:int
getprogname	src/dev/tmux/compat/getprogname.c	/^getprogname(void)$/;"	f	typeref:typename:const char *
getptmfd	src/dev/tmux/compat/fdforkpty.c	/^getptmfd(void)$/;"	f	typeref:typename:int
getshell	src/dev/tmux/tmux.c	/^getshell(void)$/;"	f	typeref:typename:const char *	file:
gh	editors/vim/config/mappings.vim	/^nmap <silent> gh :echo 'hi<'.synIDattr(synID(line('.'), col('.'), 1), 'name')$/;"	m
git-count	shells/zsh/git.zsh	/^alias git-count='git shortlog -sn'$/;"	a
git-rename	shells/zsh/git.zsh	/^function git-rename() {$/;"	f
git-submodule-move	shells/zsh/git.zsh	/^function git-submodule-move() {$/;"	f
git-submodule-remove	shells/zsh/git.zsh	/^function git-submodule-remove() {$/;"	f
git-undo	shells/zsh/git.zsh	/^alias git-undo='git reset --soft HEAD~1'$/;"	a
git-undopush	shells/zsh/git.zsh	/^alias git-undopush="git push -f origin HEAD^:master"$/;"	a
git_arrows	shells/zsh/theme/prompt.zsh	/^git_arrows() {$/;"	f
git_commits_ahead	src/zplug/base/utils/theme.zsh	/^git_commits_ahead()$/;"	f
git_commits_ahead	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_commits_ahead()$/;"	f
git_commits_behind	src/zplug/base/utils/theme.zsh	/^git_commits_behind()$/;"	f
git_commits_behind	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_commits_behind()$/;"	f
git_compare_version	src/zplug/base/utils/theme.zsh	/^git_compare_version()$/;"	f
git_compare_version	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_compare_version()$/;"	f
git_current_branch	src/zplug/base/utils/theme.zsh	/^git_current_branch()$/;"	f
git_current_branch	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_current_branch()$/;"	f
git_current_user_email	src/zplug/base/utils/theme.zsh	/^git_current_user_email()$/;"	f
git_current_user_email	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_current_user_email()$/;"	f
git_current_user_name	src/zplug/base/utils/theme.zsh	/^git_current_user_name()$/;"	f
git_current_user_name	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_current_user_name()$/;"	f
git_dirty	shells/zsh/theme/prompt.zsh	/^git_dirty() {$/;"	f
git_prompt_ahead	src/zplug/base/utils/theme.zsh	/^git_prompt_ahead()$/;"	f
git_prompt_ahead	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_prompt_ahead()$/;"	f
git_prompt_behind	src/zplug/base/utils/theme.zsh	/^git_prompt_behind()$/;"	f
git_prompt_behind	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_prompt_behind()$/;"	f
git_prompt_info	src/zplug/base/utils/theme.zsh	/^git_prompt_info()$/;"	f
git_prompt_info	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_prompt_info()$/;"	f
git_prompt_long_sha	src/zplug/base/utils/theme.zsh	/^git_prompt_long_sha()$/;"	f
git_prompt_long_sha	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_prompt_long_sha()$/;"	f
git_prompt_remote	src/zplug/base/utils/theme.zsh	/^git_prompt_remote()$/;"	f
git_prompt_remote	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_prompt_remote()$/;"	f
git_prompt_short_sha	src/zplug/base/utils/theme.zsh	/^git_prompt_short_sha()$/;"	f
git_prompt_short_sha	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_prompt_short_sha()$/;"	f
git_prompt_status	src/zplug/base/utils/theme.zsh	/^git_prompt_status()$/;"	f
git_prompt_status	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_prompt_status()$/;"	f
git_remote_status	src/zplug/base/utils/theme.zsh	/^git_remote_status()$/;"	f
git_remote_status	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^git_remote_status()$/;"	f
gitexport	shells/general/functions.bash	/^function gitexport(){$/;"	f
gitexport	shells/zsh/functions.zsh	/^function gitexport(){$/;"	f
gitignore	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^gitignore() {$/;"	f
give-credit	shells/zsh/git.zsh	/^function give-credit() {$/;"	f
give_advice	src/dev/tmux/etc/missing	/^give_advice ()$/;"	f
gj	editors/vim/config/plugins/all.vim	/^	map gj <Plug>(edgemotion-j)$/;"	m
gj	editors/vim/config/plugins/all.vim	/^	xmap gj <Plug>(edgemotion-j)$/;"	m
gk	editors/vim/config/plugins/all.vim	/^	map gk <Plug>(edgemotion-k)$/;"	m
gk	editors/vim/config/plugins/all.vim	/^	xmap gk <Plug>(edgemotion-k)$/;"	m
global_environ	src/dev/tmux/tmux.c	/^struct environ	*global_environ;$/;"	v	typeref:struct:environ *
global_hooks	src/dev/tmux/tmux.c	/^struct hooks	*global_hooks;$/;"	v	typeref:struct:hooks *
global_options	src/dev/tmux/tmux.c	/^struct options	*global_options;	\/* server options *\/$/;"	v	typeref:struct:options *
global_queue	src/dev/tmux/cmd-queue.c	/^static struct cmdq_list global_queue = TAILQ_HEAD_INITIALIZER(global_queue);$/;"	v	typeref:struct:cmdq_list	file:
global_s_options	src/dev/tmux/tmux.c	/^struct options	*global_s_options;	\/* session options *\/$/;"	v	typeref:struct:options *
global_w_options	src/dev/tmux/tmux.c	/^struct options	*global_w_options;	\/* window options *\/$/;"	v	typeref:struct:options *
glog	shells/zsh/git.zsh	/^alias glog="git log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bol/;"	a
gp	editors/vim/config/mappings.vim	/^nnoremap <expr> gp '`['.strpart(getregtype(), 0, 1).'`]'$/;"	m
gr	shells/zsh/git.zsh	/^alias gr='[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`'$/;"	a
green	meta/dotbot/test/driver-lib.bash	/^green() {$/;"	f
grep	shells/general/aliases.bash	/^alias grep='grep --color=auto'$/;"	a
grep	shells/zsh/aliases.zsh	/^alias grep='grep --color=auto'$/;"	a
grey_color	editors/vim/themes/one.vim	/^  fun <SID>grey_color(n)$/;"	f
grey_level	editors/vim/themes/one.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_number	editors/vim/themes/one.vim	/^  fun <SID>grey_number(x)$/;"	f
grid	src/dev/tmux/tmux.h	/^	struct grid		*grid;		\/* grid data *\/$/;"	m	struct:screen	typeref:struct:grid *
grid	src/dev/tmux/tmux.h	/^struct grid {$/;"	s
grid_cell	src/dev/tmux/tmux.h	/^struct grid_cell {$/;"	s
grid_cell_entry	src/dev/tmux/tmux.h	/^struct grid_cell_entry {$/;"	s
grid_cells_equal	src/dev/tmux/grid.c	/^grid_cells_equal(const struct grid_cell *gca, const struct grid_cell *gcb)$/;"	f	typeref:typename:int
grid_check_y	src/dev/tmux/grid.c	/^grid_check_y(struct grid *gd, u_int py)$/;"	f	typeref:typename:int	file:
grid_clear	src/dev/tmux/grid.c	/^grid_clear(struct grid *gd, u_int px, u_int py, u_int nx, u_int ny, u_int bg)$/;"	f	typeref:typename:void
grid_clear_cell	src/dev/tmux/grid.c	/^grid_clear_cell(struct grid *gd, u_int px, u_int py, u_int bg)$/;"	f	typeref:typename:void	file:
grid_clear_history	src/dev/tmux/grid.c	/^grid_clear_history(struct grid *gd)$/;"	f	typeref:typename:void
grid_clear_lines	src/dev/tmux/grid.c	/^grid_clear_lines(struct grid *gd, u_int py, u_int ny, u_int bg)$/;"	f	typeref:typename:void
grid_collect_history	src/dev/tmux/grid.c	/^grid_collect_history(struct grid *gd)$/;"	f	typeref:typename:void
grid_compare	src/dev/tmux/grid.c	/^grid_compare(struct grid *ga, struct grid *gb)$/;"	f	typeref:typename:int
grid_create	src/dev/tmux/grid.c	/^grid_create(u_int sx, u_int sy, u_int hlimit)$/;"	f	typeref:struct:grid *
grid_default_cell	src/dev/tmux/grid.c	/^const struct grid_cell grid_default_cell = {$/;"	v	typeref:typename:const struct grid_cell
grid_default_entry	src/dev/tmux/grid.c	/^static const struct grid_cell_entry grid_default_entry = {$/;"	v	typeref:typename:const struct grid_cell_entry	file:
grid_destroy	src/dev/tmux/grid.c	/^grid_destroy(struct grid *gd)$/;"	f	typeref:typename:void
grid_duplicate_lines	src/dev/tmux/grid.c	/^grid_duplicate_lines(struct grid *dst, u_int dy, struct grid *src, u_int sy,$/;"	f	typeref:typename:void
grid_empty_line	src/dev/tmux/grid.c	/^grid_empty_line(struct grid *gd, u_int py, u_int bg)$/;"	f	typeref:typename:void	file:
grid_expand_line	src/dev/tmux/grid.c	/^grid_expand_line(struct grid *gd, u_int py, u_int sx, u_int bg)$/;"	f	typeref:typename:void	file:
grid_extended_cell	src/dev/tmux/grid.c	/^grid_extended_cell(struct grid_line *gl, struct grid_cell_entry *gce,$/;"	f	typeref:struct:grid_cell *	file:
grid_free_line	src/dev/tmux/grid.c	/^grid_free_line(struct grid *gd, u_int py)$/;"	f	typeref:typename:void	file:
grid_free_lines	src/dev/tmux/grid.c	/^grid_free_lines(struct grid *gd, u_int py, u_int ny)$/;"	f	typeref:typename:void	file:
grid_get_cell	src/dev/tmux/grid.c	/^grid_get_cell(struct grid *gd, u_int px, u_int py, struct grid_cell *gc)$/;"	f	typeref:typename:void
grid_line	src/dev/tmux/tmux.h	/^struct grid_line {$/;"	s
grid_move_cells	src/dev/tmux/grid.c	/^grid_move_cells(struct grid *gd, u_int dx, u_int px, u_int py, u_int nx,$/;"	f	typeref:typename:void
grid_move_lines	src/dev/tmux/grid.c	/^grid_move_lines(struct grid *gd, u_int dy, u_int py, u_int ny, u_int bg)$/;"	f	typeref:typename:void
grid_need_extended_cell	src/dev/tmux/grid.c	/^grid_need_extended_cell(const struct grid_cell_entry *gce,$/;"	f	typeref:typename:int	file:
grid_peek_line	src/dev/tmux/grid.c	/^grid_peek_line(struct grid *gd, u_int py)$/;"	f	typeref:typename:const struct grid_line *
grid_reflow	src/dev/tmux/grid.c	/^grid_reflow(struct grid *dst, struct grid *src, u_int new_x)$/;"	f	typeref:typename:u_int
grid_reflow_copy	src/dev/tmux/grid.c	/^grid_reflow_copy(struct grid_line *dst_gl, u_int to, struct grid_line *src_gl,$/;"	f	typeref:typename:void	file:
grid_reflow_join	src/dev/tmux/grid.c	/^grid_reflow_join(struct grid *dst, u_int *py, struct grid_line *src_gl,$/;"	f	typeref:typename:void	file:
grid_reflow_move	src/dev/tmux/grid.c	/^grid_reflow_move(struct grid *dst, u_int *py, struct grid_line *src_gl)$/;"	f	typeref:typename:void	file:
grid_reflow_split	src/dev/tmux/grid.c	/^grid_reflow_split(struct grid *dst, u_int *py, struct grid_line *src_gl,$/;"	f	typeref:typename:void	file:
grid_scroll_history	src/dev/tmux/grid.c	/^grid_scroll_history(struct grid *gd, u_int bg)$/;"	f	typeref:typename:void
grid_scroll_history_region	src/dev/tmux/grid.c	/^grid_scroll_history_region(struct grid *gd, u_int upper, u_int lower, u_int bg)$/;"	f	typeref:typename:void
grid_set_cell	src/dev/tmux/grid.c	/^grid_set_cell(struct grid *gd, u_int px, u_int py, const struct grid_cell *gc)$/;"	f	typeref:typename:void
grid_set_cells	src/dev/tmux/grid.c	/^grid_set_cells(struct grid *gd, u_int px, u_int py, const struct grid_cell *gc,$/;"	f	typeref:typename:void
grid_store_cell	src/dev/tmux/grid.c	/^grid_store_cell(struct grid_cell_entry *gce, const struct grid_cell *gc,$/;"	f	typeref:typename:void	file:
grid_string_cells	src/dev/tmux/grid.c	/^grid_string_cells(struct grid *gd, u_int px, u_int py, u_int nx,$/;"	f	typeref:typename:char *
grid_string_cells_bg	src/dev/tmux/grid.c	/^grid_string_cells_bg(const struct grid_cell *gc, int *values)$/;"	f	typeref:typename:size_t	file:
grid_string_cells_code	src/dev/tmux/grid.c	/^grid_string_cells_code(const struct grid_cell *lastgc,$/;"	f	typeref:typename:void	file:
grid_string_cells_fg	src/dev/tmux/grid.c	/^grid_string_cells_fg(const struct grid_cell *gc, int *values)$/;"	f	typeref:typename:size_t	file:
grid_view_clear	src/dev/tmux/grid-view.c	/^grid_view_clear(struct grid *gd, u_int px, u_int py, u_int nx, u_int ny,$/;"	f	typeref:typename:void
grid_view_clear_history	src/dev/tmux/grid-view.c	/^grid_view_clear_history(struct grid *gd, u_int bg)$/;"	f	typeref:typename:void
grid_view_delete_cells	src/dev/tmux/grid-view.c	/^grid_view_delete_cells(struct grid *gd, u_int px, u_int py, u_int nx, u_int bg)$/;"	f	typeref:typename:void
grid_view_delete_lines	src/dev/tmux/grid-view.c	/^grid_view_delete_lines(struct grid *gd, u_int py, u_int ny, u_int bg)$/;"	f	typeref:typename:void
grid_view_delete_lines_region	src/dev/tmux/grid-view.c	/^grid_view_delete_lines_region(struct grid *gd, u_int rlower, u_int py,$/;"	f	typeref:typename:void
grid_view_get_cell	src/dev/tmux/grid-view.c	/^grid_view_get_cell(struct grid *gd, u_int px, u_int py, struct grid_cell *gc)$/;"	f	typeref:typename:void
grid_view_insert_cells	src/dev/tmux/grid-view.c	/^grid_view_insert_cells(struct grid *gd, u_int px, u_int py, u_int nx, u_int bg)$/;"	f	typeref:typename:void
grid_view_insert_lines	src/dev/tmux/grid-view.c	/^grid_view_insert_lines(struct grid *gd, u_int py, u_int ny, u_int bg)$/;"	f	typeref:typename:void
grid_view_insert_lines_region	src/dev/tmux/grid-view.c	/^grid_view_insert_lines_region(struct grid *gd, u_int rlower, u_int py,$/;"	f	typeref:typename:void
grid_view_scroll_region_down	src/dev/tmux/grid-view.c	/^grid_view_scroll_region_down(struct grid *gd, u_int rupper, u_int rlower,$/;"	f	typeref:typename:void
grid_view_scroll_region_up	src/dev/tmux/grid-view.c	/^grid_view_scroll_region_up(struct grid *gd, u_int rupper, u_int rlower,$/;"	f	typeref:typename:void
grid_view_set_cell	src/dev/tmux/grid-view.c	/^grid_view_set_cell(struct grid *gd, u_int px, u_int py,$/;"	f	typeref:typename:void
grid_view_set_cells	src/dev/tmux/grid-view.c	/^grid_view_set_cells(struct grid *gd, u_int px, u_int py,$/;"	f	typeref:typename:void
grid_view_string_cells	src/dev/tmux/grid-view.c	/^grid_view_string_cells(struct grid *gd, u_int px, u_int py, u_int nx)$/;"	f	typeref:typename:char *
grid_view_x	src/dev/tmux/grid-view.c	/^#define grid_view_x(/;"	d	file:
grid_view_y	src/dev/tmux/grid-view.c	/^#define grid_view_y(/;"	d	file:
group	src/dev/tmux/tmux.h	/^	u_int			 group;$/;"	m	struct:cmdq_item	typeref:typename:u_int
gz	shells/general/functions.bash	/^function gz() {$/;"	f
gz	shells/zsh/functions.zsh	/^function gz() {$/;"	f
gz#	editors/vim/config/plugins/all.vim	/^	map gz# <Plug>(asterisk-gz#)$/;"	m
gz*	editors/vim/config/plugins/all.vim	/^	map gz* <Plug>(asterisk-gz*)$/;"	m
h1	src/dev/ninja/doc/style.css	/^h1, h2, h3 {$/;"	s
h2	src/dev/ninja/doc/style.css	/^h1, h2, h3 {$/;"	s
h3	src/dev/ninja/doc/style.css	/^h1, h2, h3 {$/;"	s
handle	meta/dotbot/dotbot/plugin.py	/^    def handle(self, directive, data):$/;"	m	class:Plugin
handle	meta/dotbot/plugins/clean.py	/^    def handle(self, directive, data):$/;"	m	class:Clean
handle	meta/dotbot/plugins/link.py	/^    def handle(self, directive, data):$/;"	m	class:Link
handle	meta/dotbot/plugins/shell.py	/^    def handle(self, directive, data):$/;"	m	class:Shell
handler	src/dev/tmux/input.c	/^	int				(*handler)(struct input_ctx *);$/;"	m	struct:input_transition	typeref:typename:int (*)(struct input_ctx *)	file:
has_arg	src/dev/ninja/src/getopt.h	/^  int has_arg;                  \/* one of the above macros *\/$/;"	m	struct:GETOPT_LONG_OPTION_T	typeref:typename:int
has_ext_modules	meta/dotbot/lib/pyyaml/setup.py	/^    def has_ext_modules(self):$/;"	m	class:Distribution
has_re2c	src/dev/ninja/configure.py	/^def has_re2c():$/;"	f
hash	src/dev/ninja/src/hash_map.h	/^struct hash<StringPiece> {$/;"	s	namespace:__gnu_cxx
hash	src/dev/ninja/src/hash_map.h	/^struct hash<StringPiece> {$/;"	s	namespace:std
have	src/dev/tmux/tmux.h	/^	u_char	have;$/;"	m	struct:utf8_data	typeref:typename:u_char
have_blank_line_	src/dev/ninja/src/line_printer.h	/^  bool have_blank_line_;$/;"	m	struct:LinePrinter	typeref:typename:bool
hdr	src/dev/tmux/compat/imsg-buffer.c	/^		struct cmsghdr	hdr;$/;"	m	union:msgbuf_write::__anon0ff79082010a	typeref:struct:cmsghdr	file:
hdr	src/dev/tmux/compat/imsg.c	/^		struct cmsghdr hdr;$/;"	m	union:imsg_read::__anon6cf1a97b010a	typeref:struct:cmsghdr	file:
hdr	src/dev/tmux/compat/imsg.h	/^	struct imsg_hdr	 hdr;$/;"	m	struct:imsg	typeref:struct:imsg_hdr
height	src/dev/tmux/mode-tree.c	/^	u_int			  height;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
help	src/zplug/Makefile	/^help: ## Self-documented Makefile$/;"	t
help	src/zplug/repos/zplug/zplug/Makefile	/^help: ## Self-documented Makefile$/;"	t
hidden	src/dev/tmux/tmux.h	/^	int		 hidden;$/;"	m	struct:screen_sel	typeref:typename:int
highlight	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^    def highlight(self):$/;"	m	class:YAMLHighlight
hist	shells/general/functions.bash	/^function hist() {$/;"	f
hist	shells/zsh/functions.zsh	/^function hist() {$/;"	f
history-substring-search-down	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^history-substring-search-down() {$/;"	f
history-substring-search-up	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^history-substring-search-up() {$/;"	f
hl	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^    hl = YAMLHighlight(options)$/;"	v
hl	shells/general/functions.bash	/^function hl() {$/;"	f
hl	shells/zsh/functions.zsh	/^function hl() {$/;"	f
hlimit	src/dev/tmux/tmux.h	/^	u_int			 hlimit;$/;"	m	struct:grid	typeref:typename:u_int
hlsearch	editors/vim/plugin/hlsearch.vim	/^augroup hlsearch$/;"	a
hook	src/dev/tmux/tmux.h	/^struct hook {$/;"	s
hooks	src/dev/tmux/hooks.c	/^struct hooks {$/;"	s	file:
hooks	src/dev/tmux/tmux.h	/^	struct hooks	*hooks;$/;"	m	struct:session	typeref:struct:hooks *
hooks_add	src/dev/tmux/hooks.c	/^hooks_add(struct hooks *hooks, const char *name, struct cmd_list *cmdlist)$/;"	f	typeref:typename:void
hooks_cmp	src/dev/tmux/hooks.c	/^hooks_cmp(struct hook *hook1, struct hook *hook2)$/;"	f	typeref:typename:int	file:
hooks_create	src/dev/tmux/hooks.c	/^hooks_create(struct hooks *parent)$/;"	f	typeref:struct:hooks *
hooks_find	src/dev/tmux/hooks.c	/^hooks_find(struct hooks *hooks, const char *name)$/;"	f	typeref:struct:hook *
hooks_find1	src/dev/tmux/hooks.c	/^hooks_find1(struct hooks *hooks, const char *name)$/;"	f	typeref:struct:hook *	file:
hooks_first	src/dev/tmux/hooks.c	/^hooks_first(struct hooks *hooks)$/;"	f	typeref:struct:hook *
hooks_free	src/dev/tmux/hooks.c	/^hooks_free(struct hooks *hooks)$/;"	f	typeref:typename:void
hooks_free1	src/dev/tmux/hooks.c	/^hooks_free1(struct hooks *hooks, struct hook *hook)$/;"	f	typeref:typename:void	file:
hooks_get	src/dev/tmux/hooks.c	/^hooks_get(struct session *s)$/;"	f	typeref:struct:hooks *
hooks_insert	src/dev/tmux/hooks.c	/^hooks_insert(struct hooks *hooks, struct cmdq_item *item,$/;"	f	typeref:typename:void
hooks_next	src/dev/tmux/hooks.c	/^hooks_next(struct hook *hook)$/;"	f	typeref:struct:hook *
hooks_remove	src/dev/tmux/hooks.c	/^hooks_remove(struct hooks *hooks, const char *name)$/;"	f	typeref:typename:void
hooks_run	src/dev/tmux/hooks.c	/^hooks_run(struct hooks *hooks, struct client *c, struct cmd_find_state *fs,$/;"	f	typeref:typename:void
host	src/dev/ninja/configure.py	/^    host = Platform(options.host)$/;"	v
host	src/dev/tmux/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	src/dev/tmux/Makefile.in	/^host = @host@$/;"	m
host_alias	src/dev/tmux/Makefile	/^host_alias = $/;"	m
host_alias	src/dev/tmux/Makefile.in	/^host_alias = @host_alias@$/;"	m
host_cpu	src/dev/tmux/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/dev/tmux/Makefile.in	/^host_cpu = @host_cpu@$/;"	m
host_os	src/dev/tmux/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/dev/tmux/Makefile.in	/^host_os = @host_os@$/;"	m
host_triplet	src/dev/tmux/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	src/dev/tmux/Makefile.in	/^host_triplet = @host@$/;"	m
host_vendor	src/dev/tmux/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/dev/tmux/Makefile.in	/^host_vendor = @host_vendor@$/;"	m
hscrolled	src/dev/tmux/tmux.h	/^	u_int			 hscrolled;$/;"	m	struct:grid	typeref:typename:u_int
hsize	src/dev/tmux/tmux.h	/^	u_int			 hsize;$/;"	m	struct:grid	typeref:typename:u_int
html	src/dev/tmux/Makefile	/^html: html-am$/;"	t
html	src/dev/tmux/Makefile.in	/^html: html-am$/;"	t
html-am	src/dev/tmux/Makefile	/^html-am:$/;"	t
html-am	src/dev/tmux/Makefile.in	/^html-am:$/;"	t
html_escape	src/dev/ninja/src/browse.py	/^def html_escape(text):$/;"	f
htmldir	src/dev/tmux/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/dev/tmux/Makefile.in	/^htmldir = @htmldir@$/;"	m
httpd	src/dev/ninja/src/browse.py	/^httpd = httpserver.HTTPServer(('',port), RequestHandler)$/;"	v
httpserver	src/dev/ninja/src/browse.py	/^    import BaseHTTPServer as httpserver$/;"	I
httpserver	src/dev/ninja/src/browse.py	/^    import http.server as httpserver$/;"	I
i,	editors/vim/config/plugins/all.vim	/^	omap <silent> i, <Plug>SidewaysArgumentTextobjI$/;"	m
i,	editors/vim/config/plugins/all.vim	/^	xmap <silent> i, <Plug>SidewaysArgumentTextobjI$/;"	m
ib	editors/vim/config/plugins/all.vim	/^	omap <silent> ib <Plug>(textobj-multiblock-i)$/;"	m
ib	editors/vim/config/plugins/all.vim	/^	xmap <silent> ib <Plug>(textobj-multiblock-i)$/;"	m
ibuf	src/dev/tmux/compat/imsg.h	/^struct ibuf {$/;"	s
ibuf	src/dev/tmux/proc.c	/^	struct imsgbuf	 ibuf;$/;"	m	struct:tmuxpeer	typeref:struct:imsgbuf	file:
ibuf_add	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_add(struct ibuf *buf, const void *data, size_t len)$/;"	f	typeref:typename:int
ibuf_close	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_close(struct msgbuf *msgbuf, struct ibuf *buf)$/;"	f	typeref:typename:void
ibuf_dequeue	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_dequeue(struct msgbuf *msgbuf, struct ibuf *buf)$/;"	f	typeref:typename:void
ibuf_dynamic	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_dynamic(size_t len, size_t max)$/;"	f	typeref:struct:ibuf *
ibuf_enqueue	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_enqueue(struct msgbuf *msgbuf, struct ibuf *buf)$/;"	f	typeref:typename:void
ibuf_free	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_free(struct ibuf *buf)$/;"	f	typeref:typename:void
ibuf_left	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_left(struct ibuf *buf)$/;"	f	typeref:typename:size_t
ibuf_open	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_open(size_t len)$/;"	f	typeref:struct:ibuf *
ibuf_read	src/dev/tmux/compat/imsg.h	/^struct ibuf_read {$/;"	s
ibuf_realloc	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_realloc(struct ibuf *buf, size_t len)$/;"	f	typeref:typename:int
ibuf_reserve	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_reserve(struct ibuf *buf, size_t len)$/;"	f	typeref:typename:void *
ibuf_seek	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_seek(struct ibuf *buf, size_t pos, size_t len)$/;"	f	typeref:typename:void *
ibuf_size	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_size(struct ibuf *buf)$/;"	f	typeref:typename:size_t
ibuf_write	src/dev/tmux/compat/imsg-buffer.c	/^ibuf_write(struct msgbuf *msgbuf)$/;"	f	typeref:typename:int
ictx	src/dev/tmux/tmux.h	/^	struct input_ctx *ictx;$/;"	m	struct:window_pane	typeref:struct:input_ctx *
id	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^    id = 'mapping'$/;"	v	class:MappingNode
id	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^    id = 'scalar'$/;"	v	class:ScalarNode
id	meta/dotbot/lib/pyyaml/lib/yaml/nodes.py	/^    id = 'sequence'$/;"	v	class:SequenceNode
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = ','$/;"	v	class:FlowEntryToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '-'$/;"	v	class:BlockEntryToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = ':'$/;"	v	class:ValueToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<alias>'$/;"	v	class:AliasToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<anchor>'$/;"	v	class:AnchorToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<block end>'$/;"	v	class:BlockEndToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<block mapping start>'$/;"	v	class:BlockMappingStartToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<block sequence start>'$/;"	v	class:BlockSequenceStartToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<directive>'$/;"	v	class:DirectiveToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<document end>'$/;"	v	class:DocumentEndToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<document start>'$/;"	v	class:DocumentStartToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<scalar>'$/;"	v	class:ScalarToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<stream end>'$/;"	v	class:StreamEndToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<stream start>'$/;"	v	class:StreamStartToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '<tag>'$/;"	v	class:TagToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '?'$/;"	v	class:KeyToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '['$/;"	v	class:FlowSequenceStartToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = ']'$/;"	v	class:FlowSequenceEndToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '{'$/;"	v	class:FlowMappingStartToken
id	meta/dotbot/lib/pyyaml/lib/yaml/tokens.py	/^    id = '}'$/;"	v	class:FlowMappingEndToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^    id = 'mapping'$/;"	v	class:MappingNode
id	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^    id = 'scalar'$/;"	v	class:ScalarNode
id	meta/dotbot/lib/pyyaml/lib3/yaml/nodes.py	/^    id = 'sequence'$/;"	v	class:SequenceNode
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = ','$/;"	v	class:FlowEntryToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '-'$/;"	v	class:BlockEntryToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = ':'$/;"	v	class:ValueToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<alias>'$/;"	v	class:AliasToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<anchor>'$/;"	v	class:AnchorToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<block end>'$/;"	v	class:BlockEndToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<block mapping start>'$/;"	v	class:BlockMappingStartToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<block sequence start>'$/;"	v	class:BlockSequenceStartToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<directive>'$/;"	v	class:DirectiveToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<document end>'$/;"	v	class:DocumentEndToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<document start>'$/;"	v	class:DocumentStartToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<scalar>'$/;"	v	class:ScalarToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<stream end>'$/;"	v	class:StreamEndToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<stream start>'$/;"	v	class:StreamStartToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '<tag>'$/;"	v	class:TagToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '?'$/;"	v	class:KeyToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '['$/;"	v	class:FlowSequenceStartToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = ']'$/;"	v	class:FlowSequenceEndToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '{'$/;"	v	class:FlowMappingStartToken
id	meta/dotbot/lib/pyyaml/lib3/yaml/tokens.py	/^    id = '}'$/;"	v	class:FlowMappingEndToken
id	src/dev/ninja/src/graph.h	/^  int id() const { return id_; }$/;"	f	struct:Node	typeref:typename:int
id	src/dev/tmux/tmux.h	/^	u_int		 id;$/;"	m	struct:session	typeref:typename:u_int
id	src/dev/tmux/tmux.h	/^	u_int		 id;$/;"	m	struct:window	typeref:typename:u_int
id	src/dev/tmux/tmux.h	/^	u_int		 id;$/;"	m	struct:window_pane	typeref:typename:u_int
id_	src/dev/ninja/src/graph.h	/^  int id_;$/;"	m	struct:Node	typeref:typename:int
identify_callback	src/dev/tmux/tmux.h	/^	void		(*identify_callback)(struct client *,$/;"	m	struct:client	typeref:typename:void (*)(struct client *,struct window_pane *)
identify_callback_data	src/dev/tmux/tmux.h	/^	void		*identify_callback_data;$/;"	m	struct:client	typeref:typename:void *
identify_timer	src/dev/tmux/tmux.h	/^	struct event	 identify_timer;$/;"	m	struct:client	typeref:struct:event
idx	src/dev/tmux/cmd-command-prompt.c	/^	int	 idx;$/;"	m	struct:cmd_command_prompt_cdata	typeref:typename:int	file:
idx	src/dev/tmux/tmux.h	/^	int			 idx;$/;"	m	struct:cmd_find_state	typeref:typename:int
idx	src/dev/tmux/tmux.h	/^	int		 idx;$/;"	m	struct:winlink	typeref:typename:int
idx	src/dev/tmux/tmux.h	/^	u_int			 idx;$/;"	m	struct:window_choose_data	typeref:typename:u_int
if	editors/vim/config/plugins/all.vim	/^	omap <silent> if <Plug>(textobj-function-i)$/;"	m
if	editors/vim/config/plugins/all.vim	/^	xmap <silent> if <Plug>(textobj-function-i)$/;"	m
ignore_aliases	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def ignore_aliases(self, data):$/;"	m	class:BaseRepresenter
ignore_aliases	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def ignore_aliases(self, data):$/;"	m	class:SafeRepresenter
ignore_aliases	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def ignore_aliases(self, data):$/;"	m	class:BaseRepresenter
ignore_aliases	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def ignore_aliases(self, data):$/;"	m	class:SafeRepresenter
implicit_deps_	src/dev/ninja/src/graph.h	/^  int implicit_deps_;$/;"	m	struct:Edge	typeref:typename:int
implicit_outs_	src/dev/ninja/src/graph.h	/^  int implicit_outs_;$/;"	m	struct:Edge	typeref:typename:int
imsg	src/dev/tmux/compat/imsg.h	/^struct imsg {$/;"	s
imsg_add	src/dev/tmux/compat/imsg.c	/^imsg_add(struct ibuf *msg, const void *data, uint16_t datalen)$/;"	f	typeref:typename:int
imsg_clear	src/dev/tmux/compat/imsg.c	/^imsg_clear(struct imsgbuf *ibuf)$/;"	f	typeref:typename:void
imsg_close	src/dev/tmux/compat/imsg.c	/^imsg_close(struct imsgbuf *ibuf, struct ibuf *msg)$/;"	f	typeref:typename:void
imsg_compose	src/dev/tmux/compat/imsg.c	/^imsg_compose(struct imsgbuf *ibuf, uint32_t type, uint32_t peerid, pid_t pid,$/;"	f	typeref:typename:int
imsg_composev	src/dev/tmux/compat/imsg.c	/^imsg_composev(struct imsgbuf *ibuf, uint32_t type, uint32_t peerid, pid_t pid,$/;"	f	typeref:typename:int
imsg_create	src/dev/tmux/compat/imsg.c	/^imsg_create(struct imsgbuf *ibuf, uint32_t type, uint32_t peerid, pid_t pid,$/;"	f	typeref:struct:ibuf *
imsg_fd	src/dev/tmux/compat/imsg.h	/^struct imsg_fd {$/;"	s
imsg_fd_overhead	src/dev/tmux/compat/imsg.c	/^int	 imsg_fd_overhead = 0;$/;"	v	typeref:typename:int
imsg_flush	src/dev/tmux/compat/imsg.c	/^imsg_flush(struct imsgbuf *ibuf)$/;"	f	typeref:typename:int
imsg_free	src/dev/tmux/compat/imsg.c	/^imsg_free(struct imsg *imsg)$/;"	f	typeref:typename:void
imsg_get	src/dev/tmux/compat/imsg.c	/^imsg_get(struct imsgbuf *ibuf, struct imsg *imsg)$/;"	f	typeref:typename:ssize_t
imsg_get_fd	src/dev/tmux/compat/imsg.c	/^imsg_get_fd(struct imsgbuf *ibuf)$/;"	f	typeref:typename:int
imsg_hdr	src/dev/tmux/compat/imsg.h	/^struct imsg_hdr {$/;"	s
imsg_init	src/dev/tmux/compat/imsg.c	/^imsg_init(struct imsgbuf *ibuf, int fd)$/;"	f	typeref:typename:void
imsg_read	src/dev/tmux/compat/imsg.c	/^imsg_read(struct imsgbuf *ibuf)$/;"	f	typeref:typename:ssize_t
imsgbuf	src/dev/tmux/compat/imsg.h	/^struct imsgbuf {$/;"	s
in	src/dev/tmux/configure	/^  alias in your environment" "$LINENO" 5$/;"	a
in	src/dev/tmux/tmux.h	/^	struct evbuffer	*in;$/;"	m	struct:tty	typeref:struct:evbuffer *
in_array	src/zplug/misc/contrib/parser.awk	/^function in_array(e, arr,    i) {$/;"	f
in_array	src/zplug/repos/zplug/zplug/misc/contrib/parser.awk	/^function in_array(e, arr,    i) {$/;"	f
in_edge	src/dev/ninja/src/graph.h	/^  Edge* in_edge() const { return in_edge_; }$/;"	f	struct:Node	typeref:typename:Edge *
in_edge_	src/dev/ninja/src/graph.h	/^  Edge* in_edge_;$/;"	m	struct:Node	typeref:typename:Edge *
include	src/dev/ninja/misc/ninja_syntax.py	/^    def include(self, path):$/;"	m	class:Writer
include_file	src/dev/ninja/src/gen_doxygen_mainpage.sh	/^include_file()$/;"	f
includedir	src/dev/tmux/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/dev/tmux/Makefile.in	/^includedir = @includedir@$/;"	m
includes_	src/dev/ninja/src/clparser.h	/^  set<string> includes_;$/;"	m	struct:CLParser	typeref:typename:set<string>
increase_indent	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def increase_indent(self, flow=False, indentless=False):$/;"	m	class:Emitter
increase_indent	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def increase_indent(self, flow=False, indentless=False):$/;"	m	class:Emitter
indent_lines	meta/dotbot/dotbot/util/string.py	/^def indent_lines(string, amount=2, delimiter='\\n'):$/;"	f
inf_value	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    inf_value = 1e300$/;"	v	class:SafeConstructor
inf_value	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    inf_value = 1e300$/;"	v	class:SafeRepresenter
inf_value	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    inf_value = 1e300$/;"	v	class:SafeConstructor
inf_value	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    inf_value = 1e300$/;"	v	class:SafeRepresenter
info	meta/dotbot/dotbot/messenger/messenger.py	/^    def info(self, message):$/;"	m	class:Messenger
info	src/dev/tmux/Makefile	/^info: info-am$/;"	t
info	src/dev/tmux/Makefile.in	/^info: info-am$/;"	t
info-am	src/dev/tmux/Makefile	/^info-am:$/;"	t
info-am	src/dev/tmux/Makefile.in	/^info-am:$/;"	t
infodir	src/dev/tmux/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/dev/tmux/Makefile.in	/^infodir = @infodir@$/;"	m
init	src/dev/tmux/tmux.h	/^	struct screen	*(*init)(struct window_pane *, struct cmd_find_state *,$/;"	m	struct:window_mode	typeref:struct:screen * (*)(struct window_pane *,struct cmd_find_state *,struct args *)
initialize	meta/dotbot/test/driver-lib.bash	/^initialize() {$/;"	f
initialize	meta/dotbot/test/test-lib.bash	/^initialize() {$/;"	f
initialize	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def initialize(opts = {})$/;"	f	class:TerminalSession
initialize_options	meta/dotbot/lib/pyyaml/setup.py	/^    def initialize_options(self):$/;"	m	class:test
initialized after sourcing the plugin	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/wrapped_widget_spec.rb	/^  context 'initialized after sourcing the plugin' do$/;"	c
initialized before sourcing the plugin	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/rebound_bracket_spec.rb	/^  context 'initialized before sourcing the plugin' do$/;"	c
initialized before sourcing the plugin	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/wrapped_widget_spec.rb	/^  context 'initialized before sourcing the plugin' do$/;"	c
input_	src/dev/ninja/src/depfile_parser_test.cc	/^  string input_;$/;"	m	struct:DepfileParserTest	typeref:typename:string	file:
input_	src/dev/ninja/src/lexer.h	/^  StringPiece input_;$/;"	m	struct:Lexer	typeref:typename:StringPiece
input_buf	src/dev/tmux/input.c	/^	u_char		       *input_buf;$/;"	m	struct:input_ctx	typeref:typename:u_char *	file:
input_c0_dispatch	src/dev/tmux/input.c	/^input_c0_dispatch(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_cell	src/dev/tmux/input.c	/^struct input_cell {$/;"	s	file:
input_clear	src/dev/tmux/input.c	/^input_clear(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_csi_dispatch	src/dev/tmux/input.c	/^input_csi_dispatch(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_csi_dispatch_rm	src/dev/tmux/input.c	/^input_csi_dispatch_rm(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_csi_dispatch_rm_private	src/dev/tmux/input.c	/^input_csi_dispatch_rm_private(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_csi_dispatch_sgr	src/dev/tmux/input.c	/^input_csi_dispatch_sgr(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_csi_dispatch_sgr_256	src/dev/tmux/input.c	/^input_csi_dispatch_sgr_256(struct input_ctx *ictx, int fgbg, u_int *i)$/;"	f	typeref:typename:void	file:
input_csi_dispatch_sgr_rgb	src/dev/tmux/input.c	/^input_csi_dispatch_sgr_rgb(struct input_ctx *ictx, int fgbg, u_int *i)$/;"	f	typeref:typename:void	file:
input_csi_dispatch_sm	src/dev/tmux/input.c	/^input_csi_dispatch_sm(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_csi_dispatch_sm_private	src/dev/tmux/input.c	/^input_csi_dispatch_sm_private(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_csi_dispatch_winops	src/dev/tmux/input.c	/^input_csi_dispatch_winops(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_csi_table	src/dev/tmux/input.c	/^static const struct input_table_entry input_csi_table[] = {$/;"	v	typeref:typename:const struct input_table_entry[]	file:
input_csi_type	src/dev/tmux/input.c	/^enum input_csi_type {$/;"	g	file:
input_ctx	src/dev/tmux/input.c	/^struct input_ctx {$/;"	s	file:
input_dcs_dispatch	src/dev/tmux/input.c	/^input_dcs_dispatch(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_enter_apc	src/dev/tmux/input.c	/^input_enter_apc(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_enter_dcs	src/dev/tmux/input.c	/^input_enter_dcs(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_enter_osc	src/dev/tmux/input.c	/^input_enter_osc(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_enter_rename	src/dev/tmux/input.c	/^input_enter_rename(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_esc_dispatch	src/dev/tmux/input.c	/^input_esc_dispatch(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_esc_table	src/dev/tmux/input.c	/^static const struct input_table_entry input_esc_table[] = {$/;"	v	typeref:typename:const struct input_table_entry[]	file:
input_esc_type	src/dev/tmux/input.c	/^enum input_esc_type {$/;"	g	file:
input_exit_apc	src/dev/tmux/input.c	/^input_exit_apc(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_exit_osc	src/dev/tmux/input.c	/^input_exit_osc(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_exit_rename	src/dev/tmux/input.c	/^input_exit_rename(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_file	src/dev/ninja/src/ninja.cc	/^  const char* input_file;$/;"	m	struct:__anon193baac40110::Options	typeref:typename:const char *	file:
input_free	src/dev/tmux/input.c	/^input_free(struct window_pane *wp)$/;"	f	typeref:typename:void
input_get	src/dev/tmux/input.c	/^input_get(struct input_ctx *ictx, u_int validx, int minval, int defval)$/;"	f	typeref:typename:int	file:
input_ground	src/dev/tmux/input.c	/^input_ground(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_handler	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^cdef int input_handler(void *data, char *buffer, int size, int *read) except 0:$/;"	f
input_init	src/dev/tmux/input.c	/^input_init(struct window_pane *wp)$/;"	f	typeref:typename:void
input_input	src/dev/tmux/input.c	/^input_input(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_intermediate	src/dev/tmux/input.c	/^input_intermediate(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_key	src/dev/tmux/input-keys.c	/^input_key(struct window_pane *wp, key_code key, struct mouse_event *m)$/;"	f	typeref:typename:void
input_key_ent	src/dev/tmux/input-keys.c	/^struct input_key_ent {$/;"	s	file:
input_key_mouse	src/dev/tmux/input-keys.c	/^input_key_mouse(struct window_pane *wp, struct mouse_event *m)$/;"	f	typeref:typename:void	file:
input_keys	src/dev/tmux/input-keys.c	/^static const struct input_key_ent input_keys[] = {$/;"	v	typeref:typename:const struct input_key_ent[]	file:
input_len	src/dev/tmux/input.c	/^	size_t			input_len;$/;"	m	struct:input_ctx	typeref:typename:size_t	file:
input_osc_10	src/dev/tmux/input.c	/^input_osc_10(struct window_pane *wp, const char *p)$/;"	f	typeref:typename:void	file:
input_osc_104	src/dev/tmux/input.c	/^input_osc_104(struct window_pane *wp, const char *p)$/;"	f	typeref:typename:void	file:
input_osc_11	src/dev/tmux/input.c	/^input_osc_11(struct window_pane *wp, const char *p)$/;"	f	typeref:typename:void	file:
input_osc_4	src/dev/tmux/input.c	/^input_osc_4(struct window_pane *wp, const char *p)$/;"	f	typeref:typename:void	file:
input_osc_52	src/dev/tmux/input.c	/^input_osc_52(struct window_pane *wp, const char *p)$/;"	f	typeref:typename:void	file:
input_parameter	src/dev/tmux/input.c	/^input_parameter(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_parse	src/dev/tmux/input.c	/^input_parse(struct window_pane *wp)$/;"	f	typeref:typename:void
input_pending	src/dev/tmux/input.c	/^input_pending(struct window_pane *wp)$/;"	f	typeref:struct:evbuffer *
input_print	src/dev/tmux/input.c	/^input_print(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_reply	src/dev/tmux/input.c	/^input_reply(struct input_ctx *ictx, const char *fmt, ...)$/;"	f	typeref:typename:void	file:
input_reset	src/dev/tmux/input.c	/^input_reset(struct window_pane *wp, int clear)$/;"	f	typeref:typename:void
input_reset_cell	src/dev/tmux/input.c	/^input_reset_cell(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_set_state	src/dev/tmux/input.c	/^input_set_state(struct window_pane *wp, const struct input_transition *itr)$/;"	f	typeref:typename:void	file:
input_space	src/dev/tmux/input.c	/^	size_t			input_space;$/;"	m	struct:input_ctx	typeref:typename:size_t	file:
input_split	src/dev/tmux/input.c	/^input_split(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_split2	src/dev/tmux/input-keys.c	/^input_split2(u_int c, u_char *dst)$/;"	f	typeref:typename:size_t	file:
input_start_timer	src/dev/tmux/input.c	/^input_start_timer(struct input_ctx *ictx)$/;"	f	typeref:typename:void	file:
input_state	src/dev/tmux/input.c	/^struct input_state {$/;"	s	file:
input_state_apc_string	src/dev/tmux/input.c	/^static const struct input_state input_state_apc_string = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_apc_string_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_apc_string_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_apc_string_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_apc_string_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_consume_st	src/dev/tmux/input.c	/^static const struct input_state input_state_consume_st = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_consume_st_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_consume_st_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_consume_st_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_consume_st_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_enter	src/dev/tmux/input.c	/^static const struct input_state input_state_csi_enter = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_csi_enter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_enter_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_enter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_enter_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_ignore	src/dev/tmux/input.c	/^static const struct input_state input_state_csi_ignore = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_csi_ignore_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_ignore_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_ignore_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_ignore_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_intermediate	src/dev/tmux/input.c	/^static const struct input_state input_state_csi_intermediate = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_csi_intermediate_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_intermediate_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_intermediate_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_intermediate_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_parameter	src/dev/tmux/input.c	/^static const struct input_state input_state_csi_parameter = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_csi_parameter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_parameter_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_csi_parameter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_csi_parameter_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_enter	src/dev/tmux/input.c	/^static const struct input_state input_state_dcs_enter = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_dcs_enter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_enter_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_enter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_enter_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_escape	src/dev/tmux/input.c	/^static const struct input_state input_state_dcs_escape = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_dcs_escape_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_escape_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_escape_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_escape_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_handler	src/dev/tmux/input.c	/^static const struct input_state input_state_dcs_handler = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_dcs_handler_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_handler_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_handler_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_handler_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_ignore	src/dev/tmux/input.c	/^static const struct input_state input_state_dcs_ignore = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_dcs_ignore_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_ignore_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_ignore_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_ignore_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_intermediate	src/dev/tmux/input.c	/^static const struct input_state input_state_dcs_intermediate = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_dcs_intermediate_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_intermediate_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_intermediate_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_intermediate_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_parameter	src/dev/tmux/input.c	/^static const struct input_state input_state_dcs_parameter = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_dcs_parameter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_parameter_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_dcs_parameter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_dcs_parameter_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_esc_enter	src/dev/tmux/input.c	/^static const struct input_state input_state_esc_enter = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_esc_enter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_esc_enter_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_esc_enter_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_esc_enter_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_esc_intermediate	src/dev/tmux/input.c	/^static const struct input_state input_state_esc_intermediate = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_esc_intermediate_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_esc_intermediate_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_esc_intermediate_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_esc_intermediate_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_ground	src/dev/tmux/input.c	/^static const struct input_state input_state_ground = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_ground_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_ground_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_ground_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_ground_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_osc_string	src/dev/tmux/input.c	/^static const struct input_state input_state_osc_string = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_osc_string_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_osc_string_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_osc_string_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_osc_string_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_rename_string	src/dev/tmux/input.c	/^static const struct input_state input_state_rename_string = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_rename_string_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_rename_string_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_rename_string_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_rename_string_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_utf8_one	src/dev/tmux/input.c	/^static const struct input_state input_state_utf8_one = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_utf8_one_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_utf8_one_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_utf8_one_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_utf8_one_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_utf8_three	src/dev/tmux/input.c	/^static const struct input_state input_state_utf8_three = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_utf8_three_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_utf8_three_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_utf8_three_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_utf8_three_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_utf8_two	src/dev/tmux/input.c	/^static const struct input_state input_state_utf8_two = {$/;"	v	typeref:typename:const struct input_state	file:
input_state_utf8_two_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_utf8_two_table[] = {$/;"	v	typeref:typename:const struct input_transition[]	file:
input_state_utf8_two_table	src/dev/tmux/input.c	/^static const struct input_transition input_state_utf8_two_table[];$/;"	v	typeref:typename:const struct input_transition[]	file:
input_table_compare	src/dev/tmux/input.c	/^input_table_compare(const void *key, const void *value)$/;"	f	typeref:typename:int	file:
input_table_entry	src/dev/tmux/input.c	/^struct input_table_entry {$/;"	s	file:
input_timer_callback	src/dev/tmux/input.c	/^input_timer_callback(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
input_transition	src/dev/tmux/input.c	/^struct input_transition {$/;"	s	file:
input_utf8_add	src/dev/tmux/input.c	/^input_utf8_add(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_utf8_close	src/dev/tmux/input.c	/^input_utf8_close(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
input_utf8_open	src/dev/tmux/input.c	/^input_utf8_open(struct input_ctx *ictx)$/;"	f	typeref:typename:int	file:
inputs	src/dev/tmux/cmd-command-prompt.c	/^	char	*inputs;$/;"	m	struct:cmd_command_prompt_cdata	typeref:typename:char *	file:
inputs_	src/dev/ninja/src/graph.h	/^  vector<Node*> inputs_;$/;"	m	struct:Edge	typeref:typename:vector<Node * >
ins_	src/dev/ninja/src/depfile_parser.h	/^  vector<StringPiece> ins_;$/;"	m	struct:DepfileParser	typeref:typename:vector<StringPiece>
insert_mode_mappings	editors/vim/config/plugins/denite.vim	/^let insert_mode_mappings = [$/;"	v
install	editors/vim/Makefile	/^install:$/;"	t
install	meta/dotbot/lib/pyyaml/Makefile	/^install:$/;"	t
install	src/dev/tmux/Makefile	/^install: install-am$/;"	t
install	src/dev/tmux/Makefile.in	/^install: install-am$/;"	t
install	src/zplug/Makefile	/^install: ## Install zplug to your machine$/;"	t
install	src/zplug/repos/zplug/zplug/Makefile	/^install: ## Install zplug to your machine$/;"	t
install	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^install: all$/;"	t
install-am	src/dev/tmux/Makefile	/^install-am: all-am$/;"	t
install-am	src/dev/tmux/Makefile.in	/^install-am: all-am$/;"	t
install-binPROGRAMS	src/dev/tmux/Makefile	/^install-binPROGRAMS: $(bin_PROGRAMS)$/;"	t
install-binPROGRAMS	src/dev/tmux/Makefile.in	/^install-binPROGRAMS: $(bin_PROGRAMS)$/;"	t
install-data	src/dev/tmux/Makefile	/^install-data: install-data-am$/;"	t
install-data	src/dev/tmux/Makefile.in	/^install-data: install-data-am$/;"	t
install-data-am	src/dev/tmux/Makefile	/^install-data-am:$/;"	t
install-data-am	src/dev/tmux/Makefile.in	/^install-data-am:$/;"	t
install-dvi	src/dev/tmux/Makefile	/^install-dvi: install-dvi-am$/;"	t
install-dvi	src/dev/tmux/Makefile.in	/^install-dvi: install-dvi-am$/;"	t
install-dvi-am	src/dev/tmux/Makefile	/^install-dvi-am:$/;"	t
install-dvi-am	src/dev/tmux/Makefile.in	/^install-dvi-am:$/;"	t
install-exec	src/dev/tmux/Makefile	/^install-exec: install-exec-am$/;"	t
install-exec	src/dev/tmux/Makefile.in	/^install-exec: install-exec-am$/;"	t
install-exec-am	src/dev/tmux/Makefile	/^install-exec-am: install-binPROGRAMS$/;"	t
install-exec-am	src/dev/tmux/Makefile.in	/^install-exec-am: install-binPROGRAMS$/;"	t
install-exec-hook	src/dev/tmux/Makefile	/^install-exec-hook:$/;"	t
install-exec-hook	src/dev/tmux/Makefile.am	/^install-exec-hook:$/;"	t
install-exec-hook	src/dev/tmux/Makefile.in	/^install-exec-hook:$/;"	t
install-html	src/dev/tmux/Makefile	/^install-html: install-html-am$/;"	t
install-html	src/dev/tmux/Makefile.in	/^install-html: install-html-am$/;"	t
install-html-am	src/dev/tmux/Makefile	/^install-html-am:$/;"	t
install-html-am	src/dev/tmux/Makefile.in	/^install-html-am:$/;"	t
install-info	src/dev/tmux/Makefile	/^install-info: install-info-am$/;"	t
install-info	src/dev/tmux/Makefile.in	/^install-info: install-info-am$/;"	t
install-info-am	src/dev/tmux/Makefile	/^install-info-am:$/;"	t
install-info-am	src/dev/tmux/Makefile.in	/^install-info-am:$/;"	t
install-man	src/dev/tmux/Makefile	/^install-man:$/;"	t
install-man	src/dev/tmux/Makefile.in	/^install-man:$/;"	t
install-pdf	src/dev/tmux/Makefile	/^install-pdf: install-pdf-am$/;"	t
install-pdf	src/dev/tmux/Makefile.in	/^install-pdf: install-pdf-am$/;"	t
install-pdf-am	src/dev/tmux/Makefile	/^install-pdf-am:$/;"	t
install-pdf-am	src/dev/tmux/Makefile.in	/^install-pdf-am:$/;"	t
install-ps	src/dev/tmux/Makefile	/^install-ps: install-ps-am$/;"	t
install-ps	src/dev/tmux/Makefile.in	/^install-ps: install-ps-am$/;"	t
install-ps-am	src/dev/tmux/Makefile	/^install-ps-am:$/;"	t
install-ps-am	src/dev/tmux/Makefile.in	/^install-ps-am:$/;"	t
install-strip	src/dev/tmux/Makefile	/^install-strip:$/;"	t
install-strip	src/dev/tmux/Makefile.in	/^install-strip:$/;"	t
install_plugin	terminals/tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugin() {$/;"	f
install_plugins	terminals/tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugins() {$/;"	f
install_sh	src/dev/tmux/Makefile	/^install_sh = ${SHELL} \/home\/hle\/.dotfiles\/src\/dev\/tmux\/etc\/install-sh$/;"	m
install_sh	src/dev/tmux/Makefile.in	/^install_sh = @install_sh@$/;"	m
install_sh_DATA	src/dev/tmux/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/dev/tmux/Makefile.in	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	src/dev/tmux/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/dev/tmux/Makefile.in	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/dev/tmux/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/dev/tmux/Makefile.in	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_tmux_plugin_under_test_helper	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^install_tmux_plugin_under_test_helper() {$/;"	f
installcheck	src/dev/tmux/Makefile	/^installcheck: installcheck-am$/;"	t
installcheck	src/dev/tmux/Makefile.in	/^installcheck: installcheck-am$/;"	t
installcheck-am	src/dev/tmux/Makefile	/^installcheck-am:$/;"	t
installcheck-am	src/dev/tmux/Makefile.in	/^installcheck-am:$/;"	t
installdirs	src/dev/tmux/Makefile	/^installdirs:$/;"	t
installdirs	src/dev/tmux/Makefile.in	/^installdirs:$/;"	t
installext	meta/dotbot/lib/pyyaml/Makefile	/^installext:$/;"	t
int16_t	src/dev/ninja/src/win32port.h	/^typedef signed short int16_t;$/;"	t	typeref:typename:signed short
int64_t	src/dev/ninja/src/win32port.h	/^typedef signed long long int64_t;$/;"	t	typeref:typename:signed long long
interfaces=	src/zplug/base/core/core.zsh	/^        interfaces=()$/;"	f
interfaces=	src/zplug/repos/zplug/zplug/base/core/core.zsh	/^        interfaces=()$/;"	f
interm	src/dev/tmux/input.c	/^	const char     *interm;$/;"	m	struct:input_table_entry	typeref:typename:const char *	file:
interm_buf	src/dev/tmux/input.c	/^	u_char			interm_buf[4];$/;"	m	struct:input_ctx	typeref:typename:u_char[4]	file:
interm_len	src/dev/tmux/input.c	/^	size_t			interm_len;$/;"	m	struct:input_ctx	typeref:typename:size_t	file:
interrupted_	src/dev/ninja/src/subprocess-posix.cc	/^int SubprocessSet::interrupted_;$/;"	m	class:SubprocessSet	typeref:typename:int
interrupted_	src/dev/ninja/src/subprocess.h	/^  static int interrupted_;$/;"	m	struct:SubprocessSet	typeref:typename:int
invoked on a non-empty buffer	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/widgets/enable_spec.rb	/^  context 'invoked on a non-empty buffer' do$/;"	c
invoked on an empty buffer	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/widgets/enable_spec.rb	/^  context 'invoked on an empty buffer' do$/;"	c
ioport_	src/dev/ninja/src/subprocess-win32.cc	/^HANDLE SubprocessSet::ioport_;$/;"	m	class:SubprocessSet	typeref:typename:HANDLE
ioport_	src/dev/ninja/src/subprocess.h	/^  static HANDLE ioport_;$/;"	m	struct:SubprocessSet	typeref:typename:HANDLE
ip	shells/general/aliases.bash	/^alias ip="dig +short myip.opendns.com @resolver1.opendns.com"$/;"	a
ip	shells/zsh/aliases.zsh	/^alias ip="dig +short myip.opendns.com @resolver1.opendns.com"$/;"	a
ips	shells/general/aliases.bash	/^alias ips="ifconfig -a | perl -nle'\/(\\d+\\.\\d+\\.\\d+\\.\\d+)\/ && print $1'"$/;"	a
ips	shells/zsh/aliases.zsh	/^alias ips="ifconfig -a | perl -nle'\/(\\d+\\.\\d+\\.\\d+\\.\\d+)\/ && print $1'"$/;"	a
isPortTaken	src/crouton-clipboard/server.js	/^function isPortTaken (port, fn) {$/;"	f
is_aix	src/dev/ninja/configure.py	/^    def is_aix(self):$/;"	m	class:Platform
is_implicit	src/dev/ninja/src/graph.h	/^  bool is_implicit(size_t index) {$/;"	f	struct:Edge	typeref:typename:bool
is_implicit_out	src/dev/ninja/src/graph.h	/^  bool is_implicit_out(size_t index) const {$/;"	f	struct:Edge	typeref:typename:bool
is_linux	src/dev/ninja/configure.py	/^    def is_linux(self):$/;"	m	class:Platform
is_mingw	src/dev/ninja/configure.py	/^    def is_mingw(self):$/;"	m	class:Platform
is_msvc	src/dev/ninja/configure.py	/^    def is_msvc(self):$/;"	m	class:Platform
is_option	src/dev/ninja/src/getopt.c	/^is_option (char *argv_element, int only)$/;"	f	typeref:typename:int	file:
is_order_only	src/dev/ninja/src/graph.h	/^  bool is_order_only(size_t index) {$/;"	f	struct:Edge	typeref:typename:bool
is_phony	src/dev/ninja/src/graph.cc	/^bool Edge::is_phony() const {$/;"	f	class:Edge	typeref:typename:bool
is_reading_	src/dev/ninja/src/subprocess.h	/^  bool is_reading_;$/;"	m	struct:Subprocess	typeref:typename:bool
is_runnable	src/dev/tmux/osdep-dragonfly.c	/^#define is_runnable(/;"	d	file:
is_runnable	src/dev/tmux/osdep-freebsd.c	/^#define is_runnable(/;"	d	file:
is_runnable	src/dev/tmux/osdep-netbsd.c	/^#define is_runnable(/;"	d	file:
is_runnable	src/dev/tmux/osdep-openbsd.c	/^#define is_runnable(/;"	d	file:
is_smart_terminal	src/dev/ninja/src/line_printer.h	/^  bool is_smart_terminal() const { return smart_terminal_; }$/;"	f	struct:LinePrinter	typeref:typename:bool
is_solaris	src/dev/ninja/configure.py	/^    def is_solaris(self):$/;"	m	class:Platform
is_stopped	src/dev/tmux/osdep-dragonfly.c	/^#define is_stopped(/;"	d	file:
is_stopped	src/dev/tmux/osdep-freebsd.c	/^#define is_stopped(/;"	d	file:
is_stopped	src/dev/tmux/osdep-netbsd.c	/^#define is_stopped(/;"	d	file:
is_stopped	src/dev/tmux/osdep-openbsd.c	/^#define is_stopped(/;"	d	file:
is_valid	src/dev/ninja/src/state.h	/^  bool is_valid() const { return depth_ >= 0; }$/;"	f	struct:Pool	typeref:typename:bool
is_vim	terminals/tmux/tmux.conf	/^is_vim="ps -o state= -o comm= -t '#{pane_tty}' \\$/;"	k
is_windows	src/dev/ninja/configure.py	/^    def is_windows(self):$/;"	m	class:Platform
isescaped	src/dev/tmux/compat/fparseln.c	/^isescaped(const char *sp, const char *p, int esc)$/;"	f	typeref:typename:int	file:
islatinalpha	src/dev/ninja/src/util.cc	/^static bool islatinalpha(int c) {$/;"	f	typeref:typename:bool	file:
isoctal	src/dev/tmux/compat/unvis.c	/^#define	isoctal(/;"	d	file:
isoctal	src/dev/tmux/compat/vis.c	/^#define	isoctal(/;"	d	file:
isvisible	src/dev/tmux/compat/vis.c	/^#define	isvisible(/;"	d	file:
item	src/dev/tmux/cmd-if-shell.c	/^	struct cmdq_item	*item;$/;"	m	struct:cmd_if_shell_data	typeref:struct:cmdq_item *	file:
item	src/dev/tmux/cmd-load-buffer.c	/^	struct cmdq_item	*item;$/;"	m	struct:cmd_load_buffer_data	typeref:struct:cmdq_item *	file:
item	src/dev/tmux/cmd-run-shell.c	/^	struct cmdq_item	*item;$/;"	m	struct:cmd_run_shell_data	typeref:struct:cmdq_item *	file:
item	src/dev/tmux/cmd-wait-for.c	/^	struct cmdq_item	*item;$/;"	m	struct:wait_item	typeref:struct:cmdq_item *	file:
item	src/dev/tmux/mode-tree.c	/^	struct mode_tree_item		*item;$/;"	m	struct:mode_tree_line	typeref:struct:mode_tree_item *	file:
item	src/dev/tmux/tmux.h	/^	struct screen_write_collect_item *item;$/;"	m	struct:screen_write_ctx	typeref:struct:screen_write_collect_item *
item_list	src/dev/tmux/window-buffer.c	/^	struct window_buffer_itemdata	**item_list;$/;"	m	struct:window_buffer_modedata	typeref:struct:window_buffer_itemdata **	file:
item_list	src/dev/tmux/window-client.c	/^	struct window_client_itemdata	**item_list;$/;"	m	struct:window_client_modedata	typeref:struct:window_client_itemdata **	file:
item_list	src/dev/tmux/window-tree.c	/^	struct window_tree_itemdata	**item_list;$/;"	m	struct:window_tree_modedata	typeref:struct:window_tree_itemdata **	file:
item_size	src/dev/tmux/window-buffer.c	/^	u_int				  item_size;$/;"	m	struct:window_buffer_modedata	typeref:typename:u_int	file:
item_size	src/dev/tmux/window-client.c	/^	u_int				  item_size;$/;"	m	struct:window_client_modedata	typeref:typename:u_int	file:
item_size	src/dev/tmux/window-tree.c	/^	u_int				  item_size;$/;"	m	struct:window_tree_modedata	typeref:typename:u_int	file:
itemdata	src/dev/tmux/mode-tree.c	/^	void				*itemdata;$/;"	m	struct:mode_tree_item	typeref:typename:void *	file:
j	editors/vim/config/mappings.vim	/^nnoremap <expr> j (v:count >1 ? "m'" . v:count : '') . 'gj'$/;"	m
j	editors/vim/config/plugins/all.vim	/^	nmap <silent>j <Plug>(accelerated_jk_gj)$/;"	m
jk	editors/vim/config/mappings.vim	/^imap jk <Esc>$/;"	m
job	src/dev/tmux/format.c	/^	struct job		*job;$/;"	m	struct:format_job	typeref:struct:job *	file:
job	src/dev/tmux/tmux.h	/^struct job {$/;"	s
job_complete_cb	src/dev/tmux/tmux.h	/^typedef void (*job_complete_cb) (struct job *);$/;"	t	typeref:typename:void (*)(struct job *)
job_died	src/dev/tmux/job.c	/^job_died(struct job *job, int status)$/;"	f	typeref:typename:void
job_error_callback	src/dev/tmux/job.c	/^job_error_callback(__unused struct bufferevent *bufev, __unused short events,$/;"	f	typeref:typename:void	file:
job_free	src/dev/tmux/job.c	/^job_free(struct job *job)$/;"	f	typeref:typename:void
job_free_cb	src/dev/tmux/tmux.h	/^typedef void (*job_free_cb) (void *);$/;"	t	typeref:typename:void (*)(void *)
job_read_callback	src/dev/tmux/job.c	/^job_read_callback(__unused struct bufferevent *bufev, void *data)$/;"	f	typeref:typename:void	file:
job_run	src/dev/tmux/job.c	/^job_run(const char *cmd, struct session *s, const char *cwd,$/;"	f	typeref:struct:job *
job_update_cb	src/dev/tmux/tmux.h	/^typedef void (*job_update_cb) (struct job *);$/;"	t	typeref:typename:void (*)(struct job *)
job_write_callback	src/dev/tmux/job.c	/^job_write_callback(__unused struct bufferevent *bufev, void *data)$/;"	f	typeref:typename:void	file:
jobs	src/dev/tmux/tmux.h	/^	struct format_job_tree	*jobs;$/;"	m	struct:client	typeref:struct:format_job_tree *
join	src/zplug/misc/contrib/cache.awk	/^function join(array, start, end, sep,    result, i) {$/;"	f
join	src/zplug/repos/zplug/zplug/misc/contrib/cache.awk	/^function join(array, start, end, sep,    result, i) {$/;"	f
journal	shells/general/aliases.bash	/^alias journal=~\/.dotfiles\/journal.sh$/;"	a
js	src/crouton-clipboard/manifest.json	/^    "js": ["oncopy.js"]$/;"	a	object:content_scripts.0
jumpchar	src/dev/tmux/window-copy.c	/^	char		 jumpchar;$/;"	m	struct:window_copy_mode_data	typeref:typename:char	file:
jumptype	src/dev/tmux/window-copy.c	/^	int		 jumptype;$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
k	editors/vim/config/mappings.vim	/^nnoremap <expr> k (v:count >1 ? "m'" . v:count : '') . 'gk'$/;"	m
k	editors/vim/config/plugins/all.vim	/^	nmap <silent>k <Plug>(accelerated_jk_gk)$/;"	m
kBrowsePy	src/dev/ninja/build/browse_py.h	/^const char kBrowsePy[] =$/;"	v	typeref:typename:const char[]
kConsolePool	src/dev/ninja/src/state.cc	/^Pool State::kConsolePool("console", 1);$/;"	m	class:State	typeref:typename:Pool
kConsolePool	src/dev/ninja/src/state.h	/^  static Pool kConsolePool;$/;"	m	struct:State	typeref:typename:Pool
kCurrentVersion	src/dev/ninja/src/build_log.cc	/^const int kCurrentVersion = 5;$/;"	v	namespace:__anonb14b96c50110	typeref:typename:const int
kCurrentVersion	src/dev/ninja/src/deps_log.cc	/^const int kCurrentVersion = 3;$/;"	v	typeref:typename:const int
kDefaultPool	src/dev/ninja/src/state.cc	/^Pool State::kDefaultPool("", 0);$/;"	m	class:State	typeref:typename:Pool
kDefaultPool	src/dev/ninja/src/state.h	/^  static Pool kDefaultPool;$/;"	m	struct:State	typeref:typename:Pool
kDoNotEscape	src/dev/ninja/src/graph.cc	/^  enum EscapeKind { kShellEscape, kDoNotEscape };$/;"	e	enum:EdgeEnv::EscapeKind	file:
kDupeEdgeActionError	src/dev/ninja/src/manifest_parser.h	/^  kDupeEdgeActionError,$/;"	e	enum:DupeEdgeAction
kDupeEdgeActionWarn	src/dev/ninja/src/manifest_parser.h	/^  kDupeEdgeActionWarn,$/;"	e	enum:DupeEdgeAction
kEdgeFailed	src/dev/ninja/src/build.h	/^    kEdgeFailed,$/;"	e	enum:Plan::EdgeResult
kEdgeFinished	src/dev/ninja/src/build.h	/^    kEdgeFinished,$/;"	e	enum:BuildStatus::EdgeStatus
kEdgeStarted	src/dev/ninja/src/build.h	/^    kEdgeStarted,$/;"	e	enum:BuildStatus::EdgeStatus
kEdgeSucceeded	src/dev/ninja/src/build.h	/^    kEdgeSucceeded$/;"	e	enum:Plan::EdgeResult
kFileSignature	src/dev/ninja/src/build_log.cc	/^const char kFileSignature[] = "# ninja log v%d\\n";$/;"	v	namespace:__anonb14b96c50110	typeref:typename:const char[]
kFileSignature	src/dev/ninja/src/deps_log.cc	/^const char kFileSignature[] = "# ninjadeps\\n";$/;"	v	typeref:typename:const char[]
kMaxRecordSize	src/dev/ninja/src/deps_log.cc	/^const unsigned kMaxRecordSize = (1 << 19) - 1;$/;"	v	typeref:typename:const unsigned
kNinjaVersion	src/dev/ninja/src/version.cc	/^const char* kNinjaVersion = "1.7.2";$/;"	v	typeref:typename:const char *
kOldestSupportedVersion	src/dev/ninja/src/build_log.cc	/^const int kOldestSupportedVersion = 4;$/;"	v	namespace:__anonb14b96c50110	typeref:typename:const int
kPath	src/dev/ninja/src/canon_perftest.cc	/^const char kPath[] =$/;"	v	typeref:typename:const char[]
kPhonyRule	src/dev/ninja/src/state.cc	/^const Rule State::kPhonyRule("phony");$/;"	m	class:State	typeref:typename:const Rule
kPhonyRule	src/dev/ninja/src/state.h	/^  static const Rule kPhonyRule;$/;"	m	struct:State	typeref:typename:const Rule
kShellEscape	src/dev/ninja/src/graph.cc	/^  enum EscapeKind { kShellEscape, kDoNotEscape };$/;"	e	enum:EdgeEnv::EscapeKind	file:
kSimpleCommand	src/dev/ninja/src/subprocess_test.cc	/^const char* kSimpleCommand = "cmd \/c dir \\\\";$/;"	v	namespace:__anon5bb798dc0110	typeref:typename:const char *
kTestFilename	src/dev/ninja/src/build_log_perftest.cc	/^const char kTestFilename[] = "BuildLogPerfTest-tempfile";$/;"	v	typeref:typename:const char[]
kTestFilename	src/dev/ninja/src/build_log_test.cc	/^const char kTestFilename[] = "BuildLogTest-tempfile";$/;"	v	namespace:__anon4bc521c40110	typeref:typename:const char[]
kTestFilename	src/dev/ninja/src/deps_log_test.cc	/^const char kTestFilename[] = "DepsLogTest-tempfile";$/;"	v	namespace:__anon9efc7f800110	typeref:typename:const char[]
key	src/dev/tmux/format.c	/^	char			*key;$/;"	m	struct:format_entry	typeref:typename:char *	file:
key	src/dev/tmux/input-keys.c	/^	key_code	 key;$/;"	m	struct:input_key_ent	typeref:typename:key_code	file:
key	src/dev/tmux/key-string.c	/^	key_code	key;$/;"	m	struct:__anon6128e3050108	typeref:typename:key_code	file:
key	src/dev/tmux/tmux.h	/^	key_code		 key;$/;"	m	struct:key_binding	typeref:typename:key_code
key	src/dev/tmux/tmux.h	/^	key_code	 key;$/;"	m	struct:tty_key	typeref:typename:key_code
key	src/dev/tmux/tmux.h	/^	key_code	key;$/;"	m	struct:mouse_event	typeref:typename:key_code
key	src/dev/tmux/tmux.h	/^	void		 (*key)(struct window_pane *, struct client *,$/;"	m	struct:window_mode	typeref:typename:void (*)(struct window_pane *,struct client *,struct session *,key_code,struct mouse_event *)
key	src/dev/tmux/tty-acs.c	/^	u_char	 	 key;$/;"	m	struct:tty_acs_entry	typeref:typename:u_char	file:
key	src/dev/tmux/tty-keys.c	/^	key_code	 	key;$/;"	m	struct:tty_default_key_code	typeref:typename:key_code	file:
key	src/dev/tmux/tty-keys.c	/^	key_code	 	key;$/;"	m	struct:tty_default_key_raw	typeref:typename:key_code	file:
key	src/dev/tmux/xterm-keys.c	/^	key_code	 key;$/;"	m	struct:xterm_keys_entry	typeref:typename:key_code	file:
key11	meta/dotbot/lib/pyyaml/tests/data/resolver.path	/^key11: !foo$/;"	k
key21	meta/dotbot/lib/pyyaml/tests/data/resolver.path	/^key21: !bar$/;"	k
key31	meta/dotbot/lib/pyyaml/tests/data/resolver.path	/^key31: !baz$/;"	k
key_binding	src/dev/tmux/tmux.h	/^struct key_binding {$/;"	s
key_bindings	src/dev/tmux/tmux.h	/^	struct key_bindings	 key_bindings;$/;"	m	struct:key_table	typeref:struct:key_bindings
key_bindings_add	src/dev/tmux/key-bindings.c	/^key_bindings_add(const char *name, key_code key, int repeat,$/;"	f	typeref:typename:void
key_bindings_cmp	src/dev/tmux/key-bindings.c	/^key_bindings_cmp(struct key_binding *bd1, struct key_binding *bd2)$/;"	f	typeref:typename:int
key_bindings_dispatch	src/dev/tmux/key-bindings.c	/^key_bindings_dispatch(struct key_binding *bd, struct cmdq_item *item,$/;"	f	typeref:typename:void
key_bindings_get_table	src/dev/tmux/key-bindings.c	/^key_bindings_get_table(const char *name, int create)$/;"	f	typeref:struct:key_table *
key_bindings_init	src/dev/tmux/key-bindings.c	/^key_bindings_init(void)$/;"	f	typeref:typename:void
key_bindings_read_only	src/dev/tmux/key-bindings.c	/^key_bindings_read_only(struct cmdq_item *item, __unused void *data)$/;"	f	typeref:enum:cmd_retval	file:
key_bindings_remove	src/dev/tmux/key-bindings.c	/^key_bindings_remove(const char *name, key_code key)$/;"	f	typeref:typename:void
key_bindings_remove_table	src/dev/tmux/key-bindings.c	/^key_bindings_remove_table(const char *name)$/;"	f	typeref:typename:void
key_bindings_unref_table	src/dev/tmux/key-bindings.c	/^key_bindings_unref_table(struct key_table *table)$/;"	f	typeref:typename:void
key_code	src/dev/tmux/tmux.h	/^typedef unsigned long long key_code;$/;"	t	typeref:typename:unsigned long long
key_string_get_modifiers	src/dev/tmux/key-string.c	/^key_string_get_modifiers(const char **string)$/;"	f	typeref:typename:key_code	file:
key_string_lookup_key	src/dev/tmux/key-string.c	/^key_string_lookup_key(key_code key)$/;"	f	typeref:typename:const char *
key_string_lookup_string	src/dev/tmux/key-string.c	/^key_string_lookup_string(const char *string)$/;"	f	typeref:typename:key_code
key_string_search_table	src/dev/tmux/key-string.c	/^key_string_search_table(const char *string)$/;"	f	typeref:typename:key_code	file:
key_string_table	src/dev/tmux/key-string.c	/^} key_string_table[] = {$/;"	v	typeref:typename:const struct __anon6128e3050108[]
key_table	src/dev/tmux/tmux.h	/^	const char	*(*key_table)(struct window_pane *);$/;"	m	struct:window_mode	typeref:typename:const char * (*)(struct window_pane *)
key_table	src/dev/tmux/tmux.h	/^struct key_table {$/;"	s
key_table_cmp	src/dev/tmux/key-bindings.c	/^key_table_cmp(struct key_table *e1, struct key_table *e2)$/;"	f	typeref:typename:int
key_tables	src/dev/tmux/key-bindings.c	/^struct key_tables key_tables = RB_INITIALIZER(&key_tables);$/;"	v	typeref:struct:key_tables
key_timer	src/dev/tmux/tmux.h	/^	struct event	 key_timer;$/;"	m	struct:tty	typeref:struct:event
key_tree	src/dev/tmux/tmux.h	/^	struct tty_key	*key_tree;$/;"	m	struct:tty	typeref:struct:tty_key *
keytable	src/dev/tmux/tmux.h	/^	struct key_table *keytable;$/;"	m	struct:client	typeref:struct:key_table *
known_platforms	src/dev/ninja/configure.py	/^    def known_platforms():$/;"	m	class:Platform
l	shells/general/aliases.bash	/^alias l="ls -lah ${colorflag}"$/;"	a
l	shells/zsh/aliases.zsh	/^alias l="ls -lah ${colorflag}"$/;"	a
la	shells/general/aliases.bash	/^alias la="ls -AF ${colorflag}"$/;"	a
la	shells/zsh/aliases.zsh	/^alias la="ls -AF ${colorflag}"$/;"	a
last	src/dev/tmux/format.c	/^	time_t			 last;$/;"	m	struct:format_job	typeref:typename:time_t	file:
last	src/dev/tmux/input.c	/^	int				last;$/;"	m	struct:input_transition	typeref:typename:int	file:
last	src/dev/tmux/input.c	/^	int			last;$/;"	m	struct:input_ctx	typeref:typename:int	file:
last	src/dev/tmux/mode-tree.c	/^	int				 last;$/;"	m	struct:mode_tree_line	typeref:typename:int	file:
last	src/dev/tmux/tmux.h	/^	struct window_pane *last;$/;"	m	struct:window	typeref:struct:window_pane *
last_activity_time	src/dev/tmux/tmux.h	/^	struct timeval	 last_activity_time;$/;"	m	struct:session	typeref:struct:timeval
last_attached_time	src/dev/tmux/tmux.h	/^	struct timeval	 last_attached_time;$/;"	m	struct:session	typeref:struct:timeval
last_cell	src/dev/tmux/tmux.h	/^	struct grid_cell last_cell;$/;"	m	struct:tty	typeref:struct:grid_cell
last_command_	src/dev/ninja/src/build_test.cc	/^  Edge* last_command_;$/;"	m	struct:FakeCommandRunner	typeref:typename:Edge *	file:
last_session	src/dev/tmux/tmux.h	/^	struct session	*last_session;$/;"	m	struct:client	typeref:struct:session *
last_token_	src/dev/ninja/src/lexer.h	/^  const char* last_token_;$/;"	m	struct:Lexer	typeref:typename:const char *
last_update_	src/dev/ninja/src/build.h	/^    int last_update_;$/;"	m	struct:BuildStatus::SlidingRateInfo	typeref:typename:int
last_wp	src/dev/tmux/tmux.h	/^	int		 last_wp;$/;"	m	struct:tty	typeref:typename:int
lastcx	src/dev/tmux/window-copy.c	/^	u_int		 lastcx; \/* position in last line w\/ content *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
lastlayout	src/dev/tmux/tmux.h	/^	int		 lastlayout;$/;"	m	struct:window	typeref:typename:int
lastsx	src/dev/tmux/window-copy.c	/^	u_int		 lastsx; \/* size of last line w\/ content *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
lastw	src/dev/tmux/tmux.h	/^	struct winlink_stack lastw;$/;"	m	struct:session	typeref:struct:winlink_stack
latex.output.revhistory	src/dev/ninja/doc/dblatex.xsl	/^  <xsl:param name='latex.output.revhistory'>0<\/xsl:param>$/;"	p
layout_append	src/dev/tmux/layout-custom.c	/^layout_append(struct layout_cell *lc, char *buf, size_t len)$/;"	f	typeref:typename:int	file:
layout_assign	src/dev/tmux/layout-custom.c	/^layout_assign(struct window_pane **wp, struct layout_cell *lc)$/;"	f	typeref:typename:void	file:
layout_assign_pane	src/dev/tmux/layout.c	/^layout_assign_pane(struct layout_cell *lc, struct window_pane *wp)$/;"	f	typeref:typename:void
layout_cell	src/dev/tmux/tmux.h	/^	struct layout_cell *layout_cell;$/;"	m	struct:window_pane	typeref:struct:layout_cell *
layout_cell	src/dev/tmux/tmux.h	/^struct layout_cell {$/;"	s
layout_checksum	src/dev/tmux/layout-custom.c	/^layout_checksum(const char *layout)$/;"	f	typeref:typename:u_short	file:
layout_close_pane	src/dev/tmux/layout.c	/^layout_close_pane(struct window_pane *wp)$/;"	f	typeref:typename:void
layout_construct	src/dev/tmux/layout-custom.c	/^layout_construct(struct layout_cell *lcparent, const char **layout)$/;"	f	typeref:struct:layout_cell *	file:
layout_count_cells	src/dev/tmux/layout.c	/^layout_count_cells(struct layout_cell *lc)$/;"	f	typeref:typename:u_int
layout_create_cell	src/dev/tmux/layout.c	/^layout_create_cell(struct layout_cell *lcparent)$/;"	f	typeref:struct:layout_cell *
layout_destroy_cell	src/dev/tmux/layout.c	/^layout_destroy_cell(struct window *w, struct layout_cell *lc,$/;"	f	typeref:typename:void
layout_dump	src/dev/tmux/layout-custom.c	/^layout_dump(struct layout_cell *root)$/;"	f	typeref:typename:char *
layout_find_bottomright	src/dev/tmux/layout-custom.c	/^layout_find_bottomright(struct layout_cell *lc)$/;"	f	typeref:struct:layout_cell *	file:
layout_fix_offsets	src/dev/tmux/layout.c	/^layout_fix_offsets(struct layout_cell *lc)$/;"	f	typeref:typename:void
layout_fix_panes	src/dev/tmux/layout.c	/^layout_fix_panes(struct window *w, u_int wsx, u_int wsy)$/;"	f	typeref:typename:void
layout_free	src/dev/tmux/layout.c	/^layout_free(struct window *w)$/;"	f	typeref:typename:void
layout_free_cell	src/dev/tmux/layout.c	/^layout_free_cell(struct layout_cell *lc)$/;"	f	typeref:typename:void
layout_init	src/dev/tmux/layout.c	/^layout_init(struct window *w, struct window_pane *wp)$/;"	f	typeref:typename:void
layout_make_leaf	src/dev/tmux/layout.c	/^layout_make_leaf(struct layout_cell *lc, struct window_pane *wp)$/;"	f	typeref:typename:void
layout_make_node	src/dev/tmux/layout.c	/^layout_make_node(struct layout_cell *lc, enum layout_type type)$/;"	f	typeref:typename:void
layout_need_status	src/dev/tmux/layout.c	/^layout_need_status(struct layout_cell *lc, int at_top)$/;"	f	typeref:typename:int	file:
layout_new_pane_size	src/dev/tmux/layout.c	/^layout_new_pane_size(struct window *w, u_int previous, struct layout_cell *lc,$/;"	f	typeref:typename:u_int	file:
layout_parse	src/dev/tmux/layout-custom.c	/^layout_parse(struct window *w, const char *layout)$/;"	f	typeref:typename:int
layout_print_cell	src/dev/tmux/layout.c	/^layout_print_cell(struct layout_cell *lc, const char *hdr, u_int n)$/;"	f	typeref:typename:void
layout_resize	src/dev/tmux/layout.c	/^layout_resize(struct window *w, u_int sx, u_int sy)$/;"	f	typeref:typename:void
layout_resize_adjust	src/dev/tmux/layout.c	/^layout_resize_adjust(struct window *w, struct layout_cell *lc,$/;"	f	typeref:typename:void
layout_resize_check	src/dev/tmux/layout.c	/^layout_resize_check(struct window *w, struct layout_cell *lc,$/;"	f	typeref:typename:u_int	file:
layout_resize_child_cells	src/dev/tmux/layout.c	/^layout_resize_child_cells(struct window *w, struct layout_cell *lc)$/;"	f	typeref:typename:void	file:
layout_resize_pane	src/dev/tmux/layout.c	/^layout_resize_pane(struct window_pane *wp, enum layout_type type, int change,$/;"	f	typeref:typename:void
layout_resize_pane_grow	src/dev/tmux/layout.c	/^layout_resize_pane_grow(struct window *w, struct layout_cell *lc,$/;"	f	typeref:typename:int	file:
layout_resize_pane_shrink	src/dev/tmux/layout.c	/^layout_resize_pane_shrink(struct window *w, struct layout_cell *lc,$/;"	f	typeref:typename:int	file:
layout_resize_pane_to	src/dev/tmux/layout.c	/^layout_resize_pane_to(struct window_pane *wp, enum layout_type type,$/;"	f	typeref:typename:void
layout_root	src/dev/tmux/tmux.h	/^	struct layout_cell *layout_root;$/;"	m	struct:window	typeref:struct:layout_cell *
layout_set_even_h	src/dev/tmux/layout-set.c	/^layout_set_even_h(struct window *w)$/;"	f	typeref:typename:void	file:
layout_set_even_v	src/dev/tmux/layout-set.c	/^layout_set_even_v(struct window *w)$/;"	f	typeref:typename:void	file:
layout_set_lookup	src/dev/tmux/layout-set.c	/^layout_set_lookup(const char *name)$/;"	f	typeref:typename:int
layout_set_main_h	src/dev/tmux/layout-set.c	/^layout_set_main_h(struct window *w)$/;"	f	typeref:typename:void	file:
layout_set_main_v	src/dev/tmux/layout-set.c	/^layout_set_main_v(struct window *w)$/;"	f	typeref:typename:void	file:
layout_set_next	src/dev/tmux/layout-set.c	/^layout_set_next(struct window *w)$/;"	f	typeref:typename:u_int
layout_set_previous	src/dev/tmux/layout-set.c	/^layout_set_previous(struct window *w)$/;"	f	typeref:typename:u_int
layout_set_select	src/dev/tmux/layout-set.c	/^layout_set_select(struct window *w, u_int layout)$/;"	f	typeref:typename:u_int
layout_set_size	src/dev/tmux/layout.c	/^layout_set_size(struct layout_cell *lc, u_int sx, u_int sy, u_int xoff,$/;"	f	typeref:typename:void
layout_set_size_check	src/dev/tmux/layout.c	/^layout_set_size_check(struct window *w, struct layout_cell *lc,$/;"	f	typeref:typename:int	file:
layout_set_tiled	src/dev/tmux/layout-set.c	/^layout_set_tiled(struct window *w)$/;"	f	typeref:typename:void
layout_sets	src/dev/tmux/layout-set.c	/^} layout_sets[] = {$/;"	v	typeref:typename:const struct __anonbcfe80ef0108[]
layout_split_pane	src/dev/tmux/layout.c	/^layout_split_pane(struct window_pane *wp, enum layout_type type, int size,$/;"	f	typeref:struct:layout_cell *
layout_type	src/dev/tmux/tmux.h	/^enum layout_type {$/;"	g
lazy_plugins=	src/zplug/base/sources/oh-my-zsh.zsh	/^    lazy_plugins=()$/;"	f
lazy_plugins=	src/zplug/base/sources/prezto.zsh	/^    lazy_plugins=()$/;"	f
lazy_plugins=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    lazy_plugins=()$/;"	f
lazy_plugins=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    lazy_plugins=()$/;"	f
lb	src/dev/tmux/tmux.h	/^	u_int		lb;$/;"	m	struct:mouse_event	typeref:typename:u_int
ldflags	src/dev/ninja/configure.py	/^    ldflags = ['-L$builddir']$/;"	v
ldflags	src/dev/ninja/configure.py	/^    ldflags = ['\/DEBUG', '\/libpath:$builddir']$/;"	v
left	src/dev/tmux/tmux.h	/^	struct tty_key	*left;$/;"	m	struct:tty_key	typeref:struct:tty_key *
len	src/dev/tmux/compat/imsg.h	/^	uint16_t	 len;$/;"	m	struct:imsg_hdr	typeref:typename:uint16_t
len_	src/dev/ninja/src/string_piece.h	/^  size_t len_;$/;"	m	struct:StringPiece	typeref:typename:size_t
leven_dist	src/zplug/misc/contrib/fuzzy.awk	/^function leven_dist(a, b) {$/;"	f
leven_dist	src/zplug/repos/zplug/zplug/misc/contrib/fuzzy.awk	/^function leven_dist(a, b) {$/;"	f
lexer_	src/dev/ninja/src/manifest_parser.h	/^  Lexer lexer_;$/;"	m	struct:ManifestParser	typeref:typename:Lexer
libdir	src/dev/tmux/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/dev/tmux/Makefile.in	/^libdir = @libdir@$/;"	m
libexecdir	src/dev/tmux/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/dev/tmux/Makefile.in	/^libexecdir = @libexecdir@$/;"	m
libs	src/dev/ninja/configure.py	/^libs = []$/;"	v
line	src/dev/tmux/cmd-if-shell.c	/^	u_int			 line;$/;"	m	struct:cmd_if_shell_data	typeref:typename:u_int	file:
line	src/dev/tmux/mode-tree.c	/^	u_int				 line;$/;"	m	struct:mode_tree_item	typeref:typename:u_int	file:
line	src/dev/tmux/tmux.h	/^	u_int			 line;$/;"	m	struct:cmd	typeref:typename:u_int
line_buffer_	src/dev/ninja/src/line_printer.h	/^  string line_buffer_;$/;"	m	struct:LinePrinter	typeref:typename:string
line_end_	src/dev/ninja/src/build_log.cc	/^  char* line_end_;$/;"	m	struct:LineReader	typeref:typename:char *	file:
line_list	src/dev/tmux/mode-tree.c	/^	struct mode_tree_line	 *line_list;$/;"	m	struct:mode_tree_data	typeref:struct:mode_tree_line *	file:
line_size	src/dev/tmux/mode-tree.c	/^	u_int			  line_size;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
line_start_	src/dev/ninja/src/build_log.cc	/^  char* line_start_;$/;"	m	struct:LineReader	typeref:typename:char *	file:
line_type_	src/dev/ninja/src/line_printer.h	/^  LineType line_type_;$/;"	m	struct:LinePrinter	typeref:typename:LineType
linedata	src/dev/tmux/tmux.h	/^	struct grid_line	*linedata;$/;"	m	struct:grid	typeref:struct:grid_line *
lineflag	src/dev/tmux/tmux.h	/^	} lineflag;$/;"	m	struct:screen_sel	typeref:enum:screen_sel::__anonc903038b0503
list	src/dev/tmux/tmux.h	/^	struct screen_write_collect_line *list;$/;"	m	struct:screen_write_ctx	typeref:struct:screen_write_collect_line *
ll	shells/general/aliases.bash	/^alias ll="ls -lFh ${colorflag}"$/;"	a
ll	shells/zsh/aliases.zsh	/^alias ll="ls -lFh ${colorflag}"$/;"	a
lld	shells/general/aliases.bash	/^alias lld="ls -l | grep ^d"$/;"	a
lld	shells/zsh/aliases.zsh	/^alias lld="ls -l | grep ^d"$/;"	a
load	meta/dotbot/dotbot/util/module.py	/^def load(path):$/;"	f
load	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def load(stream, Loader=Loader):$/;"	f
load	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def load(stream, Loader=Loader):$/;"	f
load_all	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def load_all(stream, Loader=Loader):$/;"	f
load_all	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def load_all(stream, Loader=Loader):$/;"	f
load_cfg	src/dev/tmux/cfg.c	/^load_cfg(const char *path, struct client *c, struct cmdq_item *item, int quiet)$/;"	f	typeref:typename:int
load_commands=	src/zplug/base/sources/github.zsh	/^    load_commands=()$/;"	f
load_commands=	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^    load_commands=()$/;"	f
load_fpaths=	src/zplug/base/sources/github.zsh	/^    load_fpaths=()$/;"	f
load_fpaths=	src/zplug/base/sources/oh-my-zsh.zsh	/^    load_fpaths=()$/;"	f
load_fpaths=	src/zplug/base/sources/prezto.zsh	/^    load_fpaths=()$/;"	f
load_fpaths=	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^    load_fpaths=()$/;"	f
load_fpaths=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    load_fpaths=()$/;"	f
load_fpaths=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    load_fpaths=()$/;"	f
load_module	meta/dotbot/dotbot/util/module.py	/^  def load_module(module_name, path):$/;"	f
load_plugins=	src/zplug/base/sources/oh-my-zsh.zsh	/^    load_plugins=()$/;"	f
load_plugins=	src/zplug/base/sources/prezto.zsh	/^    load_plugins=()$/;"	f
load_plugins=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    load_plugins=()$/;"	f
load_plugins=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    load_plugins=()$/;"	f
load_themes=	src/zplug/base/sources/github.zsh	/^    load_themes=()$/;"	f
load_themes=	src/zplug/base/sources/oh-my-zsh.zsh	/^    load_themes=()$/;"	f
load_themes=	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^    load_themes=()$/;"	f
load_themes=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    load_themes=()$/;"	f
loaded_modules	meta/dotbot/dotbot/util/module.py	/^loaded_modules = []$/;"	v
localedir	src/dev/tmux/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/dev/tmux/Makefile.in	/^localedir = @localedir@$/;"	m
localstatedir	src/dev/tmux/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/dev/tmux/Makefile.in	/^localstatedir = @localstatedir@$/;"	m
lock_timer	src/dev/tmux/tmux.h	/^	struct event	 lock_timer;$/;"	m	struct:session	typeref:struct:event
locked	src/dev/tmux/cmd-wait-for.c	/^	int			locked;$/;"	m	struct:wait_channel	typeref:typename:int	file:
log	meta/dotbot/dotbot/messenger/messenger.py	/^    def log(self, level, message):$/;"	m	class:Messenger
log_add_level	src/dev/tmux/log.c	/^log_add_level(void)$/;"	f	typeref:typename:void
log_close	src/dev/tmux/log.c	/^log_close(void)$/;"	f	typeref:typename:void
log_debug	src/dev/tmux/log.c	/^log_debug(const char *msg, ...)$/;"	f	typeref:typename:void
log_event_cb	src/dev/tmux/log.c	/^log_event_cb(__unused int severity, const char *msg)$/;"	f	typeref:typename:void	file:
log_file	src/dev/tmux/log.c	/^static FILE	*log_file;$/;"	v	typeref:typename:FILE *	file:
log_file_	src/dev/ninja/src/build_log.h	/^  FILE* log_file_;$/;"	m	struct:BuildLog	typeref:typename:FILE *
log_get_level	src/dev/tmux/log.c	/^log_get_level(void)$/;"	f	typeref:typename:int
log_level	src/dev/tmux/log.c	/^static int	 log_level;$/;"	v	typeref:typename:int	file:
log_message	src/dev/ninja/src/browse.py	/^    def log_message(self, format, *args):$/;"	m	class:RequestHandler
log_open	src/dev/tmux/log.c	/^log_open(const char *name)$/;"	f	typeref:typename:void
log_toggle	src/dev/tmux/log.c	/^log_toggle(const char *name)$/;"	f	typeref:typename:void
log_vwrite	src/dev/tmux/log.c	/^log_vwrite(const char *msg, va_list ap)$/;"	f	typeref:typename:void	file:
logomark	src/dev/tmux/logo/tmux-logo-1-color.svg	/^            <g id="logomark" sketch:type="MSShapeGroup">$/;"	i
logomark	src/dev/tmux/logo/tmux-logo.svg	/^            <g id="logomark" sketch:type="MSShapeGroup">$/;"	i
logomark-+-wordmark	src/dev/tmux/logo/tmux-logo.svg	/^        <g id="logomark-+-wordmark" sketch:type="MSLayerGroup">$/;"	i
logomark-+-wordmark-copy-3	src/dev/tmux/logo/tmux-logo-1-color.svg	/^        <g id="logomark-+-wordmark-copy-3" sketch:type="MSLayerGroup" fill="#3C3C3C">$/;"	i
logomark-copy	src/dev/tmux/logo/tmux-logomark.svg	/^        <g id="logomark-copy" sketch:type="MSLayerGroup">$/;"	i
lookups_	src/dev/ninja/src/graph.cc	/^  vector<string> lookups_;$/;"	m	struct:EdgeEnv	typeref:typename:vector<string>	file:
lower	src/dev/tmux/tmux.h	/^		int		 lower;$/;"	m	struct:cmd_entry::__anonc903038b0708	typeref:typename:int
lowinfo	meta/dotbot/dotbot/messenger/messenger.py	/^    def lowinfo(self, message):$/;"	m	class:Messenger
ls	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^ls() {$/;"	f
lx	src/dev/tmux/tmux.h	/^	u_int		lx;$/;"	m	struct:mouse_event	typeref:typename:u_int
ly	src/dev/tmux/tmux.h	/^	u_int		ly;$/;"	m	struct:mouse_event	typeref:typename:u_int
m"	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> m" :SidewaysJumpLeft<CR>$/;"	m
m'	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> m' :SidewaysJumpRight<CR>$/;"	m
main	meta/dotbot/bin/dotbot	/^    main()$/;"	f
main	meta/dotbot/bin/dotbot	/^def main():$/;"	f
main	meta/dotbot/dotbot/cli.py	/^def main():$/;"	f
main	meta/dotbot/lib/pyyaml/tests/lib/test_all.py	/^def main(args=None):$/;"	f
main	meta/dotbot/lib/pyyaml/tests/lib3/test_all.py	/^def main(args=None):$/;"	f
main	src/dev/ninja/misc/write_fake_manifests.py	/^def main():$/;"	f
main	src/dev/ninja/src/build_log_perftest.cc	/^int main() {$/;"	f	typeref:typename:int
main	src/dev/ninja/src/canon_perftest.cc	/^int main() {$/;"	f	typeref:typename:int
main	src/dev/ninja/src/depfile_parser_perftest.cc	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	src/dev/ninja/src/hash_collision_bench.cc	/^int main() {$/;"	f	typeref:typename:int
main	src/dev/ninja/src/manifest_parser_perftest.cc	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	src/dev/ninja/src/ninja.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/dev/ninja/src/ninja_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/dev/tmux/compat/fparseln.c	/^main(argc, argv)$/;"	f
main	src/dev/tmux/tmux.c	/^main(int argc, char **argv)$/;"	f	typeref:typename:int
main	terminals/tmux/plugins/tpm/bin/clean_plugins	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/bin/install_plugins	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/bin/update_plugins	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/bindings/clean_plugins	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/bindings/install_plugins	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/bindings/update_plugins	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/lib/tmux-test/run_framework_tests	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/lib/tmux-test/tests/test_tmux_scripting.sh	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/scripts/clean_plugins.sh	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/scripts/install_plugins.sh	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/scripts/source_plugins.sh	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/scripts/update_plugin.sh	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/scripts/update_plugin_prompt_handler.sh	/^main() {$/;"	f
main	terminals/tmux/plugins/tpm/tpm	/^main() {$/;"	f
mainpage	src/dev/ninja/configure.py	/^mainpage = n.build(built('doxygen_mainpage'), 'doxygen_mainpage',$/;"	v
maintainer-clean	src/dev/tmux/Makefile	/^maintainer-clean: maintainer-clean-am$/;"	t
maintainer-clean	src/dev/tmux/Makefile.in	/^maintainer-clean: maintainer-clean-am$/;"	t
maintainer-clean-am	src/dev/tmux/Makefile	/^maintainer-clean-am: distclean-am maintainer-clean-generic$/;"	t
maintainer-clean-am	src/dev/tmux/Makefile.in	/^maintainer-clean-am: distclean-am maintainer-clean-generic$/;"	t
maintainer-clean-generic	src/dev/tmux/Makefile	/^maintainer-clean-generic:$/;"	t
maintainer-clean-generic	src/dev/tmux/Makefile.in	/^maintainer-clean-generic:$/;"	t
make_dummy_depfile	src/dev/tmux/etc/depcomp	/^make_dummy_depfile ()$/;"	f
make_label	src/dev/tmux/tmux.c	/^make_label(const char *label)$/;"	f	typeref:typename:char *	file:
make_python_instance	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def make_python_instance(self, suffix, node,$/;"	m	class:Constructor
make_python_instance	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def make_python_instance(self, suffix, node,$/;"	m	class:Constructor
mandir	src/dev/tmux/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/dev/tmux/Makefile.in	/^mandir = @mandir@$/;"	m
manifest_version	src/crouton-clipboard/manifest.json	/^  "manifest_version": 2.1,$/;"	n
manual	src/dev/ninja/configure.py	/^manual = n.build(doc('manual.html'), 'xsltproc', docbookxml,$/;"	v
manually_install_the_plugin	terminals/tmux/plugins/tpm/tests/test_plugin_clean.sh	/^manually_install_the_plugin() {$/;"	f
manually_install_the_plugin	terminals/tmux/plugins/tpm/tests/test_plugin_update.sh	/^manually_install_the_plugin() {$/;"	f
marked_pane	src/dev/tmux/server.c	/^struct cmd_find_state	 marked_pane;$/;"	v	typeref:struct:cmd_find_state
mask	src/dev/tmux/grid.c	/^		u_int	mask;$/;"	m	struct:grid_string_cells_code::__anonab03843e0108	typeref:typename:u_int	file:
match_strip	src/dev/ninja/src/browse.py	/^def match_strip(line, prefix):$/;"	f
matches	src/crouton-clipboard/manifest.json	/^    "matches": ["https:\/\/*\/*","http:\/\/*\/*"],$/;"	a	object:content_scripts.0
max	src/dev/tmux/compat/imsg.h	/^	size_t			 max;$/;"	m	struct:ibuf	typeref:typename:size_t
max_load_average	src/dev/ninja/src/build.h	/^  double max_load_average;$/;"	m	struct:BuildConfig	typeref:typename:double
maximum	src/dev/tmux/tmux.h	/^	u_int			  maximum;$/;"	m	struct:options_table_entry	typeref:typename:u_int
md	shells/general/functions.bash	/^function md() {$/;"	f
md	shells/zsh/functions.zsh	/^function md() {$/;"	f
memmem	src/dev/tmux/compat/memmem.c	/^memmem(const void *l, size_t l_len, const void *s, size_t s_len)$/;"	f	typeref:typename:void *
message_entry	src/dev/tmux/tmux.h	/^struct message_entry {$/;"	s
message_next	src/dev/tmux/tmux.h	/^	u_int		 message_next;$/;"	m	struct:client	typeref:typename:u_int
message_string	src/dev/tmux/tmux.h	/^	char		*message_string;$/;"	m	struct:client	typeref:typename:char *
message_timer	src/dev/tmux/tmux.h	/^	struct event	 message_timer;$/;"	m	struct:client	typeref:struct:event
metaclass	meta/dotbot/dotbot/util/compat.py	/^    class metaclass(meta):$/;"	c	function:with_metaclass	file:
metric_	src/dev/ninja/src/metrics.h	/^  Metric* metric_;$/;"	m	struct:ScopedMetric	typeref:typename:Metric *
metrics_	src/dev/ninja/src/metrics.h	/^  vector<Metric*> metrics_;$/;"	m	struct:Metrics	typeref:typename:vector<Metric * >
mg	editors/vim/config/plugins/all.vim	/^	nnoremap <silent> mg :Magit<CR>$/;"	m
mimetypes	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    mimetypes = ['text\/x-yaml']$/;"	v	class:YAMLLexer
min	src/zplug/misc/contrib/fuzzy.awk	/^function min(a, b, c) {$/;"	f
min	src/zplug/repos/zplug/zplug/misc/contrib/fuzzy.awk	/^function min(a, b, c) {$/;"	f
minimum	src/dev/tmux/tmux.h	/^	u_int			  minimum;$/;"	m	struct:options_table_entry	typeref:typename:u_int
mj	editors/vim/config/mappings.vim	/^noremap  mj :m+<CR>$/;"	m
mj	editors/vim/config/mappings.vim	/^vnoremap mj :m'>+<CR>gv=gv$/;"	m
mk	editors/vim/config/mappings.vim	/^noremap  mk :m-2<CR>$/;"	m
mk	editors/vim/config/mappings.vim	/^vnoremap mk :m-2<CR>gv=gv$/;"	m
mkdir_p	src/dev/tmux/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/dev/tmux/Makefile.in	/^mkdir_p = @mkdir_p@$/;"	m
mkdtemp	src/dev/ninja/src/test.cc	/^char* mkdtemp(char* name_template) {$/;"	f	namespace:__anonf43750740110	typeref:typename:char *
mkinstalldirs	src/dev/tmux/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/dev/tmux/Makefile.in	/^mkinstalldirs = $(install_sh) -d$/;"	m
mma	editors/vim/config/plugins/all.vim	/^	nmap mma :<C-u>cgetexpr bm#location_list()<CR>$/;"	m
mmi	editors/vim/config/plugins/all.vim	/^	nmap mmi <Plug>BookmarkAnnotate$/;"	m
mmm	editors/vim/config/plugins/all.vim	/^	nmap mmm <Plug>BookmarkToggle$/;"	m
mmn	editors/vim/config/plugins/all.vim	/^	nmap mmn <Plug>BookmarkNext$/;"	m
mmp	editors/vim/config/plugins/all.vim	/^	nmap mmp <Plug>BookmarkPrev$/;"	m
moar	src/dev/ninja/misc/write_fake_manifests.py	/^def moar(avg_options, p_suffix):$/;"	f
mode	src/dev/tmux/tmux.h	/^	const struct window_mode *mode;$/;"	m	struct:window_pane	typeref:typename:const struct window_mode *
mode	src/dev/tmux/tmux.h	/^	int			 mode;$/;"	m	struct:screen	typeref:typename:int
mode	src/dev/tmux/tmux.h	/^	int		 mode;$/;"	m	struct:tty	typeref:typename:int
mode_tree_add	src/dev/tmux/mode-tree.c	/^mode_tree_add(struct mode_tree_data *mtd, struct mode_tree_item *parent,$/;"	f	typeref:struct:mode_tree_item *
mode_tree_build	src/dev/tmux/mode-tree.c	/^mode_tree_build(struct mode_tree_data *mtd)$/;"	f	typeref:typename:void
mode_tree_build_lines	src/dev/tmux/mode-tree.c	/^mode_tree_build_lines(struct mode_tree_data *mtd,$/;"	f	typeref:typename:void	file:
mode_tree_clear_lines	src/dev/tmux/mode-tree.c	/^mode_tree_clear_lines(struct mode_tree_data *mtd)$/;"	f	typeref:typename:void	file:
mode_tree_clear_tagged	src/dev/tmux/mode-tree.c	/^mode_tree_clear_tagged(struct mode_tree_list *mtl)$/;"	f	typeref:typename:void	file:
mode_tree_count_tagged	src/dev/tmux/mode-tree.c	/^mode_tree_count_tagged(struct mode_tree_data *mtd)$/;"	f	typeref:typename:u_int
mode_tree_data	src/dev/tmux/mode-tree.c	/^struct mode_tree_data {$/;"	s	file:
mode_tree_down	src/dev/tmux/mode-tree.c	/^mode_tree_down(struct mode_tree_data *mtd, int wrap)$/;"	f	typeref:typename:void
mode_tree_draw	src/dev/tmux/mode-tree.c	/^mode_tree_draw(struct mode_tree_data *mtd)$/;"	f	typeref:typename:void
mode_tree_each_tagged	src/dev/tmux/mode-tree.c	/^mode_tree_each_tagged(struct mode_tree_data *mtd, void (*cb)(void *, void *,$/;"	f	typeref:typename:void
mode_tree_filter_callback	src/dev/tmux/mode-tree.c	/^mode_tree_filter_callback(__unused struct client *c, void *data, const char *s,$/;"	f	typeref:typename:int	file:
mode_tree_filter_free	src/dev/tmux/mode-tree.c	/^mode_tree_filter_free(void *data)$/;"	f	typeref:typename:void	file:
mode_tree_find_item	src/dev/tmux/mode-tree.c	/^mode_tree_find_item(struct mode_tree_list *mtl, uint64_t tag)$/;"	f	typeref:struct:mode_tree_item *	file:
mode_tree_free	src/dev/tmux/mode-tree.c	/^mode_tree_free(struct mode_tree_data *mtd)$/;"	f	typeref:typename:void
mode_tree_free_item	src/dev/tmux/mode-tree.c	/^mode_tree_free_item(struct mode_tree_item *mti)$/;"	f	typeref:typename:void	file:
mode_tree_free_items	src/dev/tmux/mode-tree.c	/^mode_tree_free_items(struct mode_tree_list *mtl)$/;"	f	typeref:typename:void	file:
mode_tree_get_current	src/dev/tmux/mode-tree.c	/^mode_tree_get_current(struct mode_tree_data *mtd)$/;"	f	typeref:typename:void *
mode_tree_item	src/dev/tmux/mode-tree.c	/^struct mode_tree_item {$/;"	s	file:
mode_tree_key	src/dev/tmux/mode-tree.c	/^mode_tree_key(struct mode_tree_data *mtd, struct client *c, key_code *key,$/;"	f	typeref:typename:int
mode_tree_line	src/dev/tmux/mode-tree.c	/^struct mode_tree_line {$/;"	s	file:
mode_tree_remove	src/dev/tmux/mode-tree.c	/^mode_tree_remove(struct mode_tree_data *mtd, struct mode_tree_item *mti)$/;"	f	typeref:typename:void
mode_tree_remove_ref	src/dev/tmux/mode-tree.c	/^mode_tree_remove_ref(struct mode_tree_data *mtd)$/;"	f	typeref:typename:void	file:
mode_tree_resize	src/dev/tmux/mode-tree.c	/^mode_tree_resize(struct mode_tree_data *mtd, u_int sx, u_int sy)$/;"	f	typeref:typename:void
mode_tree_run_command	src/dev/tmux/mode-tree.c	/^mode_tree_run_command(struct client *c, struct cmd_find_state *fs,$/;"	f	typeref:typename:void
mode_tree_search_callback	src/dev/tmux/mode-tree.c	/^mode_tree_search_callback(__unused struct client *c, void *data, const char *s,$/;"	f	typeref:typename:int	file:
mode_tree_search_for	src/dev/tmux/mode-tree.c	/^mode_tree_search_for(struct mode_tree_data *mtd)$/;"	f	typeref:struct:mode_tree_item *	file:
mode_tree_search_free	src/dev/tmux/mode-tree.c	/^mode_tree_search_free(void *data)$/;"	f	typeref:typename:void	file:
mode_tree_search_set	src/dev/tmux/mode-tree.c	/^mode_tree_search_set(struct mode_tree_data *mtd)$/;"	f	typeref:typename:void	file:
mode_tree_set_current	src/dev/tmux/mode-tree.c	/^mode_tree_set_current(struct mode_tree_data *mtd, uint64_t tag)$/;"	f	typeref:typename:void	file:
mode_tree_start	src/dev/tmux/mode-tree.c	/^mode_tree_start(struct window_pane *wp, struct args *args,$/;"	f	typeref:struct:mode_tree_data *
mode_tree_up	src/dev/tmux/mode-tree.c	/^mode_tree_up(struct mode_tree_data *mtd, int wrap)$/;"	f	typeref:typename:void
modedata	src/dev/tmux/mode-tree.c	/^	void			 *modedata;$/;"	m	struct:mode_tree_data	typeref:typename:void *	file:
modedata	src/dev/tmux/tmux.h	/^	void		*modedata;$/;"	m	struct:window_pane	typeref:typename:void *
modekeys	src/dev/tmux/tmux.h	/^	int		 modekeys;$/;"	m	struct:screen_sel	typeref:typename:int
modelast	src/dev/tmux/tmux.h	/^	time_t		 modelast;$/;"	m	struct:window_pane	typeref:typename:time_t
modeprefix	src/dev/tmux/tmux.h	/^	u_int		 modeprefix;$/;"	m	struct:window_pane	typeref:typename:u_int
modetimer	src/dev/tmux/tmux.h	/^	struct event	 modetimer;$/;"	m	struct:window_pane	typeref:struct:event
more_to_do	src/dev/ninja/src/build.h	/^  bool more_to_do() const { return wanted_edges_ > 0 && command_edges_ > 0; }$/;"	f	struct:Plan	typeref:typename:bool
mostlyclean	src/dev/tmux/Makefile	/^mostlyclean: mostlyclean-am$/;"	t
mostlyclean	src/dev/tmux/Makefile.in	/^mostlyclean: mostlyclean-am$/;"	t
mostlyclean-am	src/dev/tmux/Makefile	/^mostlyclean-am: mostlyclean-compile mostlyclean-generic$/;"	t
mostlyclean-am	src/dev/tmux/Makefile.in	/^mostlyclean-am: mostlyclean-compile mostlyclean-generic$/;"	t
mostlyclean-compile	src/dev/tmux/Makefile	/^mostlyclean-compile:$/;"	t
mostlyclean-compile	src/dev/tmux/Makefile.in	/^mostlyclean-compile:$/;"	t
mostlyclean-generic	src/dev/tmux/Makefile	/^mostlyclean-generic:$/;"	t
mostlyclean-generic	src/dev/tmux/Makefile.in	/^mostlyclean-generic:$/;"	t
mouse	src/dev/tmux/cmd-if-shell.c	/^	struct mouse_event	 mouse;$/;"	m	struct:cmd_if_shell_data	typeref:struct:mouse_event	file:
mouse	src/dev/tmux/tmux.h	/^	struct mouse_event	 mouse;$/;"	m	struct:cmdq_shared	typeref:struct:mouse_event
mouse	src/dev/tmux/tmux.h	/^	struct mouse_event mouse;$/;"	m	struct:tty	typeref:struct:mouse_event
mouse_drag_flag	src/dev/tmux/tmux.h	/^	int		 mouse_drag_flag;$/;"	m	struct:tty	typeref:typename:int
mouse_drag_release	src/dev/tmux/tmux.h	/^	void		(*mouse_drag_release)(struct client *,$/;"	m	struct:tty	typeref:typename:void (*)(struct client *,struct mouse_event *)
mouse_drag_update	src/dev/tmux/tmux.h	/^	void		(*mouse_drag_update)(struct client *,$/;"	m	struct:tty	typeref:typename:void (*)(struct client *,struct mouse_event *)
mouse_event	src/dev/tmux/tmux.h	/^struct mouse_event {$/;"	s
msg	src/dev/tmux/tmux.h	/^	char	*msg;$/;"	m	struct:message_entry	typeref:typename:char *
msg_command_data	src/dev/tmux/tmux.h	/^struct msg_command_data {$/;"	s
msg_num	src/dev/tmux/tmux.h	/^	u_int	 msg_num;$/;"	m	struct:message_entry	typeref:typename:u_int
msg_stderr_data	src/dev/tmux/tmux.h	/^struct msg_stderr_data {$/;"	s
msg_stdin_data	src/dev/tmux/tmux.h	/^struct msg_stdin_data {$/;"	s
msg_stdout_data	src/dev/tmux/tmux.h	/^struct msg_stdout_data {$/;"	s
msg_time	src/dev/tmux/tmux.h	/^	time_t	 msg_time;$/;"	m	struct:message_entry	typeref:typename:time_t
msgbuf	src/dev/tmux/compat/imsg.h	/^struct msgbuf {$/;"	s
msgbuf_clear	src/dev/tmux/compat/imsg-buffer.c	/^msgbuf_clear(struct msgbuf *msgbuf)$/;"	f	typeref:typename:void
msgbuf_drain	src/dev/tmux/compat/imsg-buffer.c	/^msgbuf_drain(struct msgbuf *msgbuf, size_t n)$/;"	f	typeref:typename:void
msgbuf_init	src/dev/tmux/compat/imsg-buffer.c	/^msgbuf_init(struct msgbuf *msgbuf)$/;"	f	typeref:typename:void
msgbuf_write	src/dev/tmux/compat/imsg-buffer.c	/^msgbuf_write(struct msgbuf *msgbuf)$/;"	f	typeref:typename:int
msgtype	src/dev/tmux/tmux.h	/^enum msgtype {$/;"	g
msvc_needs_fs	src/dev/ninja/configure.py	/^    def msvc_needs_fs(self):$/;"	m	class:Platform
mtime	src/dev/ninja/src/deps_log.h	/^    int mtime;$/;"	m	struct:DepsLog::Deps	typeref:typename:int
mtime	src/dev/ninja/src/graph.h	/^  TimeStamp mtime() const { return mtime_; }$/;"	f	struct:Node	typeref:typename:TimeStamp
mtime	src/dev/ninja/src/test.h	/^    int mtime;$/;"	m	struct:VirtualFileSystem::Entry	typeref:typename:int
mtime_	src/dev/ninja/src/graph.h	/^  TimeStamp mtime_;$/;"	m	struct:Node	typeref:typename:TimeStamp
mtimes_	src/dev/ninja/src/disk_interface_test.cc	/^  map<string, TimeStamp> mtimes_;$/;"	m	struct:__anonebbddeae0110::StatTest	typeref:typename:map<string,TimeStamp>	file:
mux	shells/general/aliases.bash	/^alias mux="tmuxinator"$/;"	a
mux	shells/zsh/aliases.zsh	/^alias mux="tmuxinator"$/;"	a
n	src/dev/ninja/configure.py	/^    n = Bootstrap(n, verbose=options.verbose)$/;"	v
n	src/dev/ninja/configure.py	/^    n = ninja_writer$/;"	v
n	src/dev/ninja/configure.py	/^n = ninja_writer$/;"	v
name	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    name = 'YAML'$/;"	v	class:YAMLLexer
name	src/crouton-clipboard/manifest.json	/^  "name": "Crouton Clipboard",$/;"	s
name	src/dev/ninja/src/eval_env.h	/^  const string& name() const { return name_; }$/;"	f	struct:Rule	typeref:typename:const string &
name	src/dev/ninja/src/getopt.h	/^  const char *name;             \/* the name of the long option *\/$/;"	m	struct:GETOPT_LONG_OPTION_T	typeref:typename:const char *
name	src/dev/ninja/src/metrics.h	/^  string name;$/;"	m	struct:Metric	typeref:typename:string
name	src/dev/ninja/src/ninja.cc	/^  const char* name;$/;"	m	struct:__anon193baac40110::Tool	typeref:typename:const char *	file:
name	src/dev/ninja/src/ninja_test.cc	/^  const char *name;$/;"	m	struct:RegisteredTest	typeref:typename:const char *	file:
name	src/dev/ninja/src/state.h	/^  const string& name() const { return name_; }$/;"	f	struct:Pool	typeref:typename:const string &
name	src/dev/tmux/cmd-wait-for.c	/^	const char	       *name;$/;"	m	struct:wait_channel	typeref:typename:const char *	file:
name	src/dev/tmux/input.c	/^	const char			*name;$/;"	m	struct:input_state	typeref:typename:const char *	file:
name	src/dev/tmux/layout-set.c	/^	const char	*name;$/;"	m	struct:__anonbcfe80ef0108	typeref:typename:const char *	file:
name	src/dev/tmux/mode-tree.c	/^	const char			*name;$/;"	m	struct:mode_tree_item	typeref:typename:const char *	file:
name	src/dev/tmux/notify.c	/^	const char		*name;$/;"	m	struct:notify_entry	typeref:typename:const char *	file:
name	src/dev/tmux/options.c	/^	const char				 *name;$/;"	m	struct:options_entry	typeref:typename:const char *	file:
name	src/dev/tmux/paste.c	/^	char		*name;$/;"	m	struct:paste_buffer	typeref:typename:char *	file:
name	src/dev/tmux/proc.c	/^	const char	 *name;$/;"	m	struct:tmuxproc	typeref:typename:const char *	file:
name	src/dev/tmux/tmux.h	/^	char		*name;$/;"	m	struct:environ_entry	typeref:typename:char *
name	src/dev/tmux/tmux.h	/^	char		*name;$/;"	m	struct:session	typeref:typename:char *
name	src/dev/tmux/tmux.h	/^	char		*name;$/;"	m	struct:tty_term	typeref:typename:char *
name	src/dev/tmux/tmux.h	/^	char		*name;$/;"	m	struct:window	typeref:typename:char *
name	src/dev/tmux/tmux.h	/^	const char		 *name;$/;"	m	struct:key_table	typeref:typename:const char *
name	src/dev/tmux/tmux.h	/^	const char		 *name;$/;"	m	struct:options_table_entry	typeref:typename:const char *
name	src/dev/tmux/tmux.h	/^	const char		*name;$/;"	m	struct:cmd_entry	typeref:typename:const char *
name	src/dev/tmux/tmux.h	/^	const char		*name;$/;"	m	struct:cmdq_item	typeref:typename:const char *
name	src/dev/tmux/tmux.h	/^	const char		*name;$/;"	m	struct:session_group	typeref:typename:const char *
name	src/dev/tmux/tmux.h	/^	const char	*name;$/;"	m	struct:client	typeref:typename:const char *
name	src/dev/tmux/tmux.h	/^	const char	*name;$/;"	m	struct:hook	typeref:typename:const char *
name	src/dev/tmux/tmux.h	/^	const char	*name;$/;"	m	struct:window_mode	typeref:typename:const char *
name	src/dev/tmux/tty-term.c	/^	const char	       *name;$/;"	m	struct:tty_term_code_entry	typeref:typename:const char *	file:
name	src/dev/tmux/window-buffer.c	/^	const char	*name;$/;"	m	struct:window_buffer_itemdata	typeref:typename:const char *	file:
name_	src/dev/ninja/src/eval_env.h	/^  string name_;$/;"	m	struct:Rule	typeref:typename:string
name_	src/dev/ninja/src/state.h	/^  string name_;$/;"	m	struct:Pool	typeref:typename:string
name_event	src/dev/tmux/tmux.h	/^	struct event	 name_event;$/;"	m	struct:window	typeref:struct:event
name_time	src/dev/tmux/tmux.h	/^	struct timeval	 name_time;$/;"	m	struct:window	typeref:struct:timeval
name_time_callback	src/dev/tmux/names.c	/^name_time_callback(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
name_time_expired	src/dev/tmux/names.c	/^name_time_expired(struct window *w, struct timeval *tv)$/;"	f	typeref:typename:int	file:
nan_value	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    nan_value = -inf_value\/inf_value   # Trying to make a quiet NaN (like C99).$/;"	v	class:SafeConstructor
nan_value	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    nan_value = -inf_value\/inf_value   # Trying to make a quiet NaN (like C99).$/;"	v	class:SafeConstructor
need_events	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def need_events(self, count):$/;"	m	class:Emitter
need_events	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def need_events(self, count):$/;"	m	class:Emitter
need_more_events	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def need_more_events(self):$/;"	m	class:Emitter
need_more_events	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def need_more_events(self):$/;"	m	class:Emitter
need_more_tokens	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def need_more_tokens(self):$/;"	m	class:Scanner
need_more_tokens	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def need_more_tokens(self):$/;"	m	class:Scanner
needs_recompaction_	src/dev/ninja/src/build_log.h	/^  bool needs_recompaction_;$/;"	m	struct:BuildLog	typeref:typename:bool
needs_recompaction_	src/dev/ninja/src/deps_log.h	/^  bool needs_recompaction_;$/;"	m	struct:DepsLog	typeref:typename:bool
nerdtree	editors/vim/themes/rafi-2017.vim	/^augroup nerdtree-highlights$/;"	a
new_compose	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_compose(stream, Loader=yaml.CLoader):$/;"	f
new_compose	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_compose(stream, Loader=yaml.CLoader):$/;"	f
new_compose_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_compose_all(stream, Loader=yaml.CLoader):$/;"	f
new_compose_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_compose_all(stream, Loader=yaml.CLoader):$/;"	f
new_dump	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_dump(data, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
new_dump	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_dump(data, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
new_dump_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_dump_all(documents, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
new_dump_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_dump_all(documents, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
new_emit	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_emit(events, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
new_emit	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_emit(events, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
new_load	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_load(stream, Loader=yaml.CLoader):$/;"	f
new_load	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_load(stream, Loader=yaml.CLoader):$/;"	f
new_load_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_load_all(stream, Loader=yaml.CLoader):$/;"	f
new_load_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_load_all(stream, Loader=yaml.CLoader):$/;"	f
new_parse	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_parse(stream, Loader=yaml.CLoader):$/;"	f
new_parse	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_parse(stream, Loader=yaml.CLoader):$/;"	f
new_safe_dump	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_safe_dump(data, stream=None, **kwds):$/;"	f
new_safe_dump	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_safe_dump(data, stream=None, **kwds):$/;"	f
new_safe_dump_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_safe_dump_all(documents, stream=None, **kwds):$/;"	f
new_safe_dump_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_safe_dump_all(documents, stream=None, **kwds):$/;"	f
new_safe_load	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_safe_load(stream):$/;"	f
new_safe_load	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_safe_load(stream):$/;"	f
new_safe_load_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_safe_load_all(stream):$/;"	f
new_safe_load_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_safe_load_all(stream):$/;"	f
new_scan	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_scan(stream, Loader=yaml.CLoader):$/;"	f
new_scan	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_scan(stream, Loader=yaml.CLoader):$/;"	f
new_serialize	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_serialize(node, stream, Dumper=yaml.CDumper, **kwds):$/;"	f
new_serialize	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_serialize(node, stream, Dumper=yaml.CDumper, **kwds):$/;"	f
new_serialize_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def new_serialize_all(nodes, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
new_serialize_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def new_serialize_all(nodes, stream=None, Dumper=yaml.CDumper, **kwds):$/;"	f
newline	src/dev/ninja/configure.py	/^    def newline(self):$/;"	m	class:Bootstrap
newline	src/dev/ninja/misc/ninja_syntax.py	/^    def newline(self):$/;"	m	class:Writer
next	src/dev/tmux/tmux.h	/^	struct cmdq_item	*next;$/;"	m	struct:cmdq_item	typeref:struct:cmdq_item *
next	src/dev/tmux/tmux.h	/^	struct tty_key	*next;$/;"	m	struct:tty_key	typeref:struct:tty_key *
next_active_point	src/dev/tmux/window.c	/^static u_int	next_active_point;$/;"	v	typeref:typename:u_int	file:
next_input	src/dev/tmux/cmd-command-prompt.c	/^	char	*next_input;$/;"	m	struct:cmd_command_prompt_cdata	typeref:typename:char *	file:
next_possible_simple_key	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def next_possible_simple_key(self):$/;"	m	class:Scanner
next_possible_simple_key	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def next_possible_simple_key(self):$/;"	m	class:Scanner
next_prompt	src/dev/tmux/cmd-command-prompt.c	/^	char	*next_prompt;$/;"	m	struct:cmd_command_prompt_cdata	typeref:typename:char *	file:
next_session_id	src/dev/tmux/session.c	/^static u_int		next_session_id;$/;"	v	typeref:typename:u_int	file:
next_window_id	src/dev/tmux/window.c	/^static u_int	next_window_id;$/;"	v	typeref:typename:u_int	file:
next_window_pane_id	src/dev/tmux/window.c	/^static u_int	next_window_pane_id;$/;"	v	typeref:typename:u_int	file:
ng-restart	shells/general/functions.bash	/^function ng-restart() {$/;"	f
ng-restart	shells/zsh/functions.zsh	/^function ng-restart() {$/;"	f
ng-start	shells/general/functions.bash	/^function ng-start() {$/;"	f
ng-start	shells/zsh/functions.zsh	/^function ng-start() {$/;"	f
ng-stop	shells/general/functions.bash	/^function ng-stop() {$/;"	f
ng-stop	shells/zsh/functions.zsh	/^function ng-stop() {$/;"	f
ninja	src/dev/ninja/configure.py	/^ninja = n.build(binary('ninja'), 'link', objs, implicit=ninja_lib,$/;"	v
ninja	src/dev/ninja/misc/packaging/ninja.spec	/^Name: ninja$/;"	p
ninja-keywords	src/dev/ninja/misc/ninja-mode.el	/^(defvar ninja-keywords$/;"	f
ninja-mode	src/dev/ninja/misc/ninja-mode.el	/^(define-derived-mode ninja-mode prog-mode "ninja"$/;"	f
ninja-mode-syntax-table	src/dev/ninja/misc/ninja-mode.el	/^(defvar ninja-mode-syntax-table$/;"	f
ninja-syntax-propertize	src/dev/ninja/misc/ninja-mode.el	/^(defun ninja-syntax-propertize (start end)$/;"	f
ninja_command_	src/dev/ninja/src/ninja.cc	/^  const char* ninja_command_;$/;"	m	struct:__anon193baac40110::NinjaMain	typeref:typename:const char *	file:
ninja_dump	src/dev/ninja/src/browse.py	/^def ninja_dump(target):$/;"	f
ninja_lib	src/dev/ninja/configure.py	/^    ninja_lib = n.build(built('ninja.lib'), 'ar', objs)$/;"	v
ninja_test	src/dev/ninja/configure.py	/^ninja_test = n.build(binary('ninja_test'), 'link', objs, implicit=ninja_lib,$/;"	v
ninja_writer	src/dev/ninja/configure.py	/^ninja_writer = ninja_syntax.Writer(open(BUILD_FILENAME, 'w'))$/;"	v
nitems	src/dev/tmux/osdep-dragonfly.c	/^#define nitems(/;"	d	file:
nitems	src/dev/tmux/osdep-freebsd.c	/^#define nitems(/;"	d	file:
nitems	src/dev/tmux/osdep-openbsd.c	/^#define nitems(/;"	d	file:
nitems	src/dev/tmux/tmux.h	/^#define nitems(/;"	d
no_argument	src/dev/ninja/src/getopt.h	/^#define no_argument /;"	d
node_count	src/dev/ninja/src/deps_log.h	/^    int node_count;$/;"	m	struct:DepsLog::Deps	typeref:typename:int
nodes	src/dev/ninja/src/deps_log.h	/^    Node** nodes;$/;"	m	struct:DepsLog::Deps	typeref:typename:Node **
nodes	src/dev/ninja/src/deps_log.h	/^  const vector<Node*>& nodes() const { return nodes_; }$/;"	f	struct:DepsLog	typeref:typename:const vector<Node * > &
nodes_	src/dev/ninja/src/deps_log.h	/^  vector<Node*> nodes_;$/;"	m	struct:DepsLog	typeref:typename:vector<Node * >
nodist_tmux_OBJECTS	src/dev/tmux/Makefile	/^nodist_tmux_OBJECTS = osdep-linux.$(OBJEXT) $(am__objects_1) \\$/;"	m
nodist_tmux_OBJECTS	src/dev/tmux/Makefile.in	/^nodist_tmux_OBJECTS = osdep-@PLATFORM@.$(OBJEXT) $(am__objects_1) \\$/;"	m
nodist_tmux_SOURCES	src/dev/tmux/Makefile	/^nodist_tmux_SOURCES = osdep-linux.c $(am__append_10) \\$/;"	m
nodist_tmux_SOURCES	src/dev/tmux/Makefile.am	/^nodist_tmux_SOURCES = osdep-@PLATFORM@.c$/;"	m
nodist_tmux_SOURCES	src/dev/tmux/Makefile.in	/^nodist_tmux_SOURCES = osdep-@PLATFORM@.c $(am__append_10) \\$/;"	m
normal_mode_mappings	editors/vim/config/plugins/denite.vim	/^let normal_mode_mappings = [$/;"	v
notify_add	src/dev/tmux/notify.c	/^notify_add(const char *name, struct cmd_find_state *fs, struct client *c,$/;"	f	typeref:typename:void	file:
notify_callback	src/dev/tmux/notify.c	/^notify_callback(struct cmdq_item *item, void *data)$/;"	f	typeref:enum:cmd_retval	file:
notify_client	src/dev/tmux/notify.c	/^notify_client(const char *name, struct client *c)$/;"	f	typeref:typename:void
notify_entry	src/dev/tmux/notify.c	/^struct notify_entry {$/;"	s	file:
notify_hook	src/dev/tmux/notify.c	/^notify_hook(struct cmdq_item *item, struct notify_entry *ne)$/;"	f	typeref:typename:void	file:
notify_input	src/dev/tmux/notify.c	/^notify_input(struct window_pane *wp, struct evbuffer *input)$/;"	f	typeref:typename:void
notify_pane	src/dev/tmux/notify.c	/^notify_pane(const char *name, struct window_pane *wp)$/;"	f	typeref:typename:void
notify_session	src/dev/tmux/notify.c	/^notify_session(const char *name, struct session *s)$/;"	f	typeref:typename:void
notify_session_window	src/dev/tmux/notify.c	/^notify_session_window(const char *name, struct session *s, struct window *w)$/;"	f	typeref:typename:void
notify_window	src/dev/tmux/notify.c	/^notify_window(const char *name, struct window *w)$/;"	f	typeref:typename:void
notify_winlink	src/dev/tmux/notify.c	/^notify_winlink(const char *name, struct winlink *wl)$/;"	f	typeref:typename:void
now_	src/dev/ninja/src/test.h	/^  int now_;$/;"	m	struct:VirtualFileSystem	typeref:typename:int
ntests	src/dev/ninja/src/ninja_test.cc	/^static int ntests;$/;"	v	typeref:typename:int	file:
num	src/dev/tmux/tmux.h	/^	u_int		 num;$/;"	m	struct:tty_ctx	typeref:typename:u_int
number	src/dev/tmux/options.c	/^		long long			  number;$/;"	m	union:options_entry::__anone31179a4010a	typeref:typename:long long	file:
number	src/dev/tmux/tmux.h	/^	u_int			 number;$/;"	m	struct:cmdq_item	typeref:typename:u_int
number	src/dev/tmux/tty-term.c	/^		int		number;$/;"	m	union:tty_code::__anonc9119abe010a	typeref:typename:int	file:
number_of_windows	terminals/tmux/plugins/tpm/lib/tmux-test/tests/test_tmux_scripting.sh	/^number_of_windows() {$/;"	f
o	editors/vim/ftplugin/help.vim	/^nmap <buffer> o \/'[a-z]\\{2,\\}'<CR>$/;"	m
o	editors/vim/ftplugin/qf.vim	/^nnoremap <buffer> o    <CR><C-w>p$/;"	m
objext	src/dev/ninja/configure.py	/^    objext = '.obj'$/;"	v
objext	src/dev/ninja/configure.py	/^objext = '.o'$/;"	v
objs	src/dev/ninja/configure.py	/^objs = []$/;"	v
objs	src/dev/ninja/configure.py	/^objs = cxx('build_log_perftest')$/;"	v
objs	src/dev/ninja/configure.py	/^objs = cxx('canon_perftest')$/;"	v
objs	src/dev/ninja/configure.py	/^objs = cxx('depfile_parser_perftest')$/;"	v
objs	src/dev/ninja/configure.py	/^objs = cxx('hash_collision_bench')$/;"	v
objs	src/dev/ninja/configure.py	/^objs = cxx('manifest_parser_perftest')$/;"	v
objs	src/dev/ninja/configure.py	/^objs = cxx('ninja')$/;"	v
ocx	src/dev/tmux/tmux.h	/^	u_int		 ocx;$/;"	m	struct:tty_ctx	typeref:typename:u_int
ocy	src/dev/tmux/tmux.h	/^	u_int		 ocy;$/;"	m	struct:tty_ctx	typeref:typename:u_int
offset	src/dev/tmux/mode-tree.c	/^	u_int			  offset;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
offset	src/dev/tmux/tmux.h	/^		u_int		offset;$/;"	m	union:grid_cell_entry::__anonc903038b020a	typeref:typename:u_int
offset	src/dev/tmux/window-tree.c	/^	int				  offset;$/;"	m	struct:window_tree_modedata	typeref:typename:int	file:
ofs_	src/dev/ninja/src/lexer.h	/^  const char* ofs_;$/;"	m	struct:Lexer	typeref:typename:const char *
old_cell	src/dev/tmux/input.c	/^	struct input_cell	old_cell;$/;"	m	struct:input_ctx	typeref:struct:input_cell	file:
old_compose	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_compose = yaml.compose$/;"	v
old_compose	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_compose = yaml.compose$/;"	v
old_compose_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_compose_all = yaml.compose_all$/;"	v
old_compose_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_compose_all = yaml.compose_all$/;"	v
old_cx	src/dev/tmux/input.c	/^	u_int 			old_cx;$/;"	m	struct:input_ctx	typeref:typename:u_int	file:
old_cy	src/dev/tmux/input.c	/^	u_int			old_cy;$/;"	m	struct:input_ctx	typeref:typename:u_int	file:
old_dump	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_dump = yaml.dump$/;"	v
old_dump	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_dump = yaml.dump$/;"	v
old_dump_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_dump_all = yaml.dump_all$/;"	v
old_dump_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_dump_all = yaml.dump_all$/;"	v
old_emit	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_emit = yaml.emit$/;"	v
old_emit	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_emit = yaml.emit$/;"	v
old_hup_act_	src/dev/ninja/src/subprocess.h	/^  struct sigaction old_hup_act_;$/;"	m	struct:SubprocessSet	typeref:struct:sigaction
old_int_act_	src/dev/ninja/src/subprocess.h	/^  struct sigaction old_int_act_;$/;"	m	struct:SubprocessSet	typeref:struct:sigaction
old_layout	src/dev/tmux/tmux.h	/^	char		*old_layout;$/;"	m	struct:window	typeref:typename:char *
old_load	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_load = yaml.load$/;"	v
old_load	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_load = yaml.load$/;"	v
old_load_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_load_all = yaml.load_all$/;"	v
old_load_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_load_all = yaml.load_all$/;"	v
old_mask_	src/dev/ninja/src/subprocess.h	/^  sigset_t old_mask_;$/;"	m	struct:SubprocessSet	typeref:typename:sigset_t
old_parse	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_parse = yaml.parse$/;"	v
old_parse	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_parse = yaml.parse$/;"	v
old_safe_dump	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_safe_dump = yaml.safe_dump$/;"	v
old_safe_dump	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_safe_dump = yaml.safe_dump$/;"	v
old_safe_dump_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_safe_dump_all = yaml.safe_dump_all$/;"	v
old_safe_dump_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_safe_dump_all = yaml.safe_dump_all$/;"	v
old_safe_load	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_safe_load = yaml.safe_load$/;"	v
old_safe_load	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_safe_load = yaml.safe_load$/;"	v
old_safe_load_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_safe_load_all = yaml.safe_load_all$/;"	v
old_safe_load_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_safe_load_all = yaml.safe_load_all$/;"	v
old_scan	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_scan = yaml.scan$/;"	v
old_scan	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_scan = yaml.scan$/;"	v
old_serialize	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_serialize = yaml.serialize$/;"	v
old_serialize	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_serialize = yaml.serialize$/;"	v
old_serialize_all	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^old_serialize_all = yaml.serialize_all$/;"	v
old_serialize_all	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^old_serialize_all = yaml.serialize_all$/;"	v
old_status	src/dev/tmux/tmux.h	/^	struct screen	*old_status;$/;"	m	struct:client	typeref:struct:screen *
old_term_act_	src/dev/ninja/src/subprocess.h	/^  struct sigaction old_term_act_;$/;"	m	struct:SubprocessSet	typeref:struct:sigaction
oldincludedir	src/dev/tmux/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/dev/tmux/Makefile.in	/^oldincludedir = @oldincludedir@$/;"	m
onMsg	src/crouton-clipboard/background.js	/^function onMsg(msg) {$/;"	f
one#highlight	editors/vim/themes/one.vim	/^function! one#highlight(group, fg, bg, attr)$/;"	f
open	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def open(self):$/;"	m	class:CEmitter
open	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    def open(self):$/;"	m	class:Serializer
open	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    def open(self):$/;"	m	class:Serializer
operator !=	src/dev/ninja/src/string_piece.h	/^  bool operator!=(const StringPiece& other) const {$/;"	f	struct:StringPiece	typeref:typename:bool
operator ()	src/dev/ninja/src/hash_map.h	/^  bool operator()(const StringPiece& a, const StringPiece& b) const {$/;"	f	struct:StringPieceCmp	typeref:typename:bool
operator ()	src/dev/ninja/src/hash_map.h	/^  size_t operator()(StringPiece key) const {$/;"	f	struct:__gnu_cxx::hash	typeref:typename:size_t
operator ()	src/dev/ninja/src/hash_map.h	/^  size_t operator()(StringPiece key) const {$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	src/dev/ninja/src/hash_map.h	/^  size_t operator()(const StringPiece& key) const {$/;"	f	struct:StringPieceCmp	typeref:typename:size_t
operator ==	src/dev/ninja/src/build_log.h	/^    bool operator==(const LogEntry& o) {$/;"	f	struct:BuildLog::LogEntry	typeref:typename:bool
operator ==	src/dev/ninja/src/string_piece.h	/^  bool operator==(const StringPiece& other) const {$/;"	f	struct:StringPiece	typeref:typename:bool
optarg	src/dev/ninja/src/getopt.c	/^char *optarg = NULL;$/;"	v	typeref:typename:char *
optarg	src/dev/tmux/compat.h	/^#define optarg /;"	d
opterr	src/dev/ninja/src/getopt.c	/^int opterr = 1;$/;"	v	typeref:typename:int
opterr	src/dev/tmux/compat.h	/^#define opterr /;"	d
optind	src/dev/ninja/src/getopt.c	/^int optind = 0;$/;"	v	typeref:typename:int
optind	src/dev/tmux/compat.h	/^#define optind /;"	d
option	src/dev/ninja/src/getopt.h	/^typedef GETOPT_LONG_OPTION_T option;$/;"	t	typeref:typename:GETOPT_LONG_OPTION_T
options	src/dev/tmux/options.c	/^struct options {$/;"	s	file:
options	src/dev/tmux/tmux.h	/^	struct options	*options;$/;"	m	struct:session	typeref:struct:options *
options	src/dev/tmux/tmux.h	/^	struct options	*options;$/;"	m	struct:window	typeref:struct:options *
options_add	src/dev/tmux/options.c	/^options_add(struct options *oo, const char *name)$/;"	f	typeref:struct:options_entry *	file:
options_array_assign	src/dev/tmux/options.c	/^options_array_assign(struct options_entry *o, const char *s)$/;"	f	typeref:typename:void
options_array_clear	src/dev/tmux/options.c	/^options_array_clear(struct options_entry *o)$/;"	f	typeref:typename:void
options_array_get	src/dev/tmux/options.c	/^options_array_get(struct options_entry *o, u_int idx)$/;"	f	typeref:typename:const char *
options_array_set	src/dev/tmux/options.c	/^options_array_set(struct options_entry *o, u_int idx, const char *value,$/;"	f	typeref:typename:int
options_array_size	src/dev/tmux/options.c	/^options_array_size(struct options_entry *o, u_int *size)$/;"	f	typeref:typename:int
options_cmp	src/dev/tmux/options.c	/^options_cmp(struct options_entry *lhs, struct options_entry *rhs)$/;"	f	typeref:typename:int	file:
options_create	src/dev/tmux/options.c	/^options_create(struct options *parent)$/;"	f	typeref:struct:options *
options_default	src/dev/tmux/options.c	/^options_default(struct options *oo, const struct options_table_entry *oe)$/;"	f	typeref:struct:options_entry *
options_empty	src/dev/tmux/options.c	/^options_empty(struct options *oo, const struct options_table_entry *oe)$/;"	f	typeref:struct:options_entry *
options_entry	src/dev/tmux/options.c	/^struct options_entry {$/;"	s	file:
options_first	src/dev/tmux/options.c	/^options_first(struct options *oo)$/;"	f	typeref:struct:options_entry *
options_free	src/dev/tmux/options.c	/^options_free(struct options *oo)$/;"	f	typeref:typename:void
options_get	src/dev/tmux/options.c	/^options_get(struct options *oo, const char *name)$/;"	f	typeref:struct:options_entry *
options_get_number	src/dev/tmux/options.c	/^options_get_number(struct options *oo, const char *name)$/;"	f	typeref:typename:long long
options_get_only	src/dev/tmux/options.c	/^options_get_only(struct options *oo, const char *name)$/;"	f	typeref:struct:options_entry *
options_get_string	src/dev/tmux/options.c	/^options_get_string(struct options *oo, const char *name)$/;"	f	typeref:typename:const char *
options_get_style	src/dev/tmux/options.c	/^options_get_style(struct options *oo, const char *name)$/;"	f	typeref:typename:const struct grid_cell *
options_isstring	src/dev/tmux/options.c	/^options_isstring(struct options_entry *o)$/;"	f	typeref:typename:int
options_match	src/dev/tmux/options.c	/^options_match(const char *s, int *idx, int* ambiguous)$/;"	f	typeref:typename:char *
options_match_get	src/dev/tmux/options.c	/^options_match_get(struct options *oo, const char *s, int *idx, int only,$/;"	f	typeref:struct:options_entry *
options_name	src/dev/tmux/options.c	/^options_name(struct options_entry *o)$/;"	f	typeref:typename:const char *
options_next	src/dev/tmux/options.c	/^options_next(struct options_entry *o)$/;"	f	typeref:struct:options_entry *
options_parent_table_entry	src/dev/tmux/options.c	/^options_parent_table_entry(struct options *oo, const char *s)$/;"	f	typeref:typename:const struct options_table_entry *	file:
options_parse	src/dev/tmux/options.c	/^options_parse(const char *name, int *idx)$/;"	f	typeref:typename:char *
options_parse_get	src/dev/tmux/options.c	/^options_parse_get(struct options *oo, const char *s, int *idx, int only)$/;"	f	typeref:struct:options_entry *
options_remove	src/dev/tmux/options.c	/^options_remove(struct options_entry *o)$/;"	f	typeref:typename:void
options_scope_from_flags	src/dev/tmux/options.c	/^options_scope_from_flags(struct args *args, int window,$/;"	f	typeref:enum:options_table_scope
options_set_number	src/dev/tmux/options.c	/^options_set_number(struct options *oo, const char *name, long long value)$/;"	f	typeref:struct:options_entry *
options_set_string	src/dev/tmux/options.c	/^options_set_string(struct options *oo, const char *name, int append,$/;"	f	typeref:struct:options_entry *
options_set_style	src/dev/tmux/options.c	/^options_set_style(struct options *oo, const char *name, int append,$/;"	f	typeref:struct:options_entry *
options_style_update_new	src/dev/tmux/options.c	/^options_style_update_new(struct options *oo, struct options_entry *o)$/;"	f	typeref:typename:void
options_style_update_old	src/dev/tmux/options.c	/^options_style_update_old(struct options *oo, struct options_entry *o)$/;"	f	typeref:typename:void
options_table	src/dev/tmux/options-table.c	/^const struct options_table_entry options_table[] = {$/;"	v	typeref:typename:const struct options_table_entry[]
options_table_bell_action_list	src/dev/tmux/options-table.c	/^static const char *options_table_bell_action_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_clock_mode_style_list	src/dev/tmux/options-table.c	/^static const char *options_table_clock_mode_style_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_entry	src/dev/tmux/options.c	/^options_table_entry(struct options_entry *o)$/;"	f	typeref:typename:const struct options_table_entry *
options_table_entry	src/dev/tmux/tmux.h	/^struct options_table_entry {$/;"	s
options_table_mode_keys_list	src/dev/tmux/options-table.c	/^static const char *options_table_mode_keys_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_pane_status_list	src/dev/tmux/options-table.c	/^static const char *options_table_pane_status_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_scope	src/dev/tmux/tmux.h	/^enum options_table_scope {$/;"	g
options_table_set_clipboard_list	src/dev/tmux/options-table.c	/^static const char *options_table_set_clipboard_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_status_justify_list	src/dev/tmux/options-table.c	/^static const char *options_table_status_justify_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_status_keys_list	src/dev/tmux/options-table.c	/^static const char *options_table_status_keys_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_status_position_list	src/dev/tmux/options-table.c	/^static const char *options_table_status_position_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_table_type	src/dev/tmux/tmux.h	/^enum options_table_type {$/;"	g
options_table_visual_bell_list	src/dev/tmux/options-table.c	/^static const char *options_table_visual_bell_list[] = {$/;"	v	typeref:typename:const char * []	file:
options_tostring	src/dev/tmux/options.c	/^options_tostring(struct options_entry *o, int idx, int numeric)$/;"	f	typeref:typename:const char *
optopt	src/dev/ninja/src/getopt.c	/^int optopt = '?';$/;"	v	typeref:typename:int
optopt	src/dev/tmux/compat.h	/^#define optopt /;"	d
optreset	src/dev/tmux/compat.h	/^#define optreset /;"	d
order	src/dev/tmux/paste.c	/^	u_int		 order;$/;"	m	struct:paste_buffer	typeref:typename:u_int	file:
order	src/dev/tmux/window-buffer.c	/^	u_int		 order;$/;"	m	struct:window_buffer_itemdata	typeref:typename:u_int	file:
order_only_deps_	src/dev/ninja/src/graph.h	/^  int order_only_deps_;$/;"	m	struct:Edge	typeref:typename:int
orlower	src/dev/tmux/tmux.h	/^	u_int		 orlower;$/;"	m	struct:tty_ctx	typeref:typename:u_int
orupper	src/dev/tmux/tmux.h	/^	u_int		 orupper;$/;"	m	struct:tty_ctx	typeref:typename:u_int
os	src/crouton-clipboard/server.js	/^  , os = require('os')$/;"	v
osdep_event_init	src/dev/tmux/osdep-aix.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-cygwin.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-darwin.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-dragonfly.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-freebsd.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-hpux.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-linux.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-netbsd.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-openbsd.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-sunos.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_event_init	src/dev/tmux/osdep-unknown.c	/^osdep_event_init(void)$/;"	f	typeref:struct:event_base *
osdep_get_cwd	src/dev/tmux/osdep-aix.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-cygwin.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-darwin.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-dragonfly.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-freebsd.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-hpux.c	/^osdep_get_cwd(__unused int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-linux.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-netbsd.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-openbsd.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-sunos.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd	src/dev/tmux/osdep-unknown.c	/^osdep_get_cwd(int fd)$/;"	f	typeref:typename:char *
osdep_get_cwd_fallback	src/dev/tmux/osdep-freebsd.c	/^osdep_get_cwd_fallback(int fd)$/;"	f	typeref:typename:char *	file:
osdep_get_name	src/dev/tmux/osdep-aix.c	/^osdep_get_name(__unused int fd, char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-cygwin.c	/^osdep_get_name(int fd, __unused char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-darwin.c	/^osdep_get_name(int fd, __unused char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-dragonfly.c	/^osdep_get_name(int fd, char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-freebsd.c	/^osdep_get_name(int fd, char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-hpux.c	/^osdep_get_name(__unused int fd, __unused char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-linux.c	/^osdep_get_name(int fd, __unused char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-netbsd.c	/^osdep_get_name(int fd, __unused char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-openbsd.c	/^osdep_get_name(int fd, char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-sunos.c	/^osdep_get_name(__unused int fd, char *tty)$/;"	f	typeref:typename:char *
osdep_get_name	src/dev/tmux/osdep-unknown.c	/^osdep_get_name(__unused int fd, __unused char *tty)$/;"	f	typeref:typename:char *
osx	src/dev/tmux/tmux.h	/^	u_int		 osx;$/;"	m	struct:window_pane	typeref:typename:u_int
osy	src/dev/tmux/tmux.h	/^	u_int		 osy;$/;"	m	struct:window_pane	typeref:typename:u_int
out	src/dev/tmux/format.c	/^	char			*out;$/;"	m	struct:format_job	typeref:typename:char *	file:
out	src/dev/tmux/tmux.h	/^	struct evbuffer	*out;$/;"	m	struct:tty	typeref:struct:evbuffer *
out	src/zplug/misc/contrib/getopts.awk	/^function out(k,v) {$/;"	f
out	src/zplug/repos/zplug/zplug/misc/contrib/getopts.awk	/^function out(k,v) {$/;"	f
out_	src/dev/ninja/src/depfile_parser.h	/^  StringPiece out_;$/;"	m	struct:DepfileParser	typeref:typename:StringPiece
out_edges	src/dev/ninja/src/graph.h	/^  const vector<Edge*>& out_edges() const { return out_edges_; }$/;"	f	struct:Node	typeref:typename:const vector<Edge * > &
out_edges_	src/dev/ninja/src/graph.h	/^  vector<Edge*> out_edges_;$/;"	m	struct:Node	typeref:typename:vector<Edge * >
output	shells/general/z.bash	/^            function output(files, out, common) {$/;"	f
output	shells/zsh/z.zsh	/^            function output(files, out, common) {$/;"	f
output	src/dev/ninja/src/build.h	/^    string output;$/;"	m	struct:CommandRunner::Result	typeref:typename:string
output	src/dev/ninja/src/build_log.h	/^    string output;$/;"	m	struct:BuildLog::LogEntry	typeref:typename:string
output_buffer_	src/dev/ninja/src/line_printer.h	/^  string output_buffer_;$/;"	m	struct:LinePrinter	typeref:typename:string
output_handler	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^cdef int output_handler(void *data, char *buffer, int size) except 0:$/;"	f
outputs_	src/dev/ninja/src/graph.h	/^  vector<Node*> outputs_;$/;"	m	struct:Edge	typeref:typename:vector<Node * >
outputs_ready	src/dev/ninja/src/graph.h	/^  bool outputs_ready() const { return outputs_ready_; }$/;"	f	struct:Edge	typeref:typename:bool
outputs_ready_	src/dev/ninja/src/graph.h	/^  bool outputs_ready_;$/;"	m	struct:Edge	typeref:typename:bool
overall_rate_	src/dev/ninja/src/build.h	/^  mutable RateInfo overall_rate_;$/;"	m	struct:BuildStatus	typeref:typename:RateInfo
overlapped_	src/dev/ninja/src/subprocess.h	/^  OVERLAPPED overlapped_;$/;"	m	struct:Subprocess	typeref:typename:OVERLAPPED
overlapped_buf_	src/dev/ninja/src/subprocess.h	/^  char overlapped_buf_[4 << 10];$/;"	m	struct:Subprocess	typeref:typename:char[]
owner	src/dev/tmux/options.c	/^	struct options				 *owner;$/;"	m	struct:options_entry	typeref:struct:options *	file:
oy	src/dev/tmux/window-copy.c	/^	u_int		 oy; \/* number of lines scrolled up *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
p	editors/vim/config/plugins/all.vim	/^	xmap p <Plug>(operator-replace)$/;"	m
p	editors/vim/ftplugin/qf.vim	/^nnoremap <silent><buffer> p  :call <SID>preview_file()<CR>$/;"	m
p	src/dev/ninja/doc/style.css	/^p {$/;"	s
page	src/crouton-clipboard/manifest.json	/^    "page": "background.html"$/;"	s	object:background
palette	src/dev/tmux/tmux.h	/^	int		*palette;$/;"	m	struct:window_pane	typeref:typename:int *
pane	src/dev/tmux/notify.c	/^	int			 pane;$/;"	m	struct:notify_entry	typeref:typename:int	file:
pane	src/dev/tmux/window-tree.c	/^	int			pane;$/;"	m	struct:window_tree_itemdata	typeref:typename:int	file:
pane_id	src/dev/tmux/tmux.h	/^	int			 pane_id;$/;"	m	struct:window_choose_data	typeref:typename:int
panes	src/dev/tmux/tmux.h	/^	struct window_panes panes;$/;"	m	struct:window	typeref:struct:window_panes
parallelism	src/dev/ninja/src/build.h	/^  int parallelism;$/;"	m	struct:BuildConfig	typeref:typename:int
param_buf	src/dev/tmux/input.c	/^	u_char			param_buf[64];$/;"	m	struct:input_ctx	typeref:typename:u_char[64]	file:
param_len	src/dev/tmux/input.c	/^	size_t			param_len;$/;"	m	struct:input_ctx	typeref:typename:size_t	file:
param_list	src/dev/tmux/input.c	/^	int			param_list[24];	\/* -1 not present *\/$/;"	m	struct:input_ctx	typeref:typename:int[24]	file:
param_list_len	src/dev/tmux/input.c	/^	u_int			param_list_len;$/;"	m	struct:input_ctx	typeref:typename:u_int	file:
parent	src/dev/tmux/hooks.c	/^	struct hooks	*parent;$/;"	m	struct:hooks	typeref:struct:hooks *	file:
parent	src/dev/tmux/mode-tree.c	/^	struct mode_tree_item		*parent;$/;"	m	struct:mode_tree_item	typeref:struct:mode_tree_item *	file:
parent	src/dev/tmux/options.c	/^	struct options				*parent;$/;"	m	struct:options	typeref:struct:options *	file:
parent	src/dev/tmux/proc.c	/^	struct tmuxproc	*parent;$/;"	m	struct:tmuxpeer	typeref:struct:tmuxproc *	file:
parent	src/dev/tmux/tmux.h	/^	struct layout_cell *parent;$/;"	m	struct:layout_cell	typeref:struct:layout_cell *
parent_	src/dev/ninja/src/eval_env.h	/^  BindingEnv* parent_;$/;"	m	struct:BindingEnv	typeref:typename:BindingEnv *
paretoint	src/dev/ninja/misc/write_fake_manifests.py	/^def paretoint(avg, alpha):$/;"	f
parse	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def parse(stream, Loader=Loader):$/;"	f
parse	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def parse(stream, Loader=Loader):$/;"	f
parse	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def parse(self):$/;"	m	class:CanonicalParser
parse	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def parse(self):$/;"	m	class:CanonicalParser
parse	src/dev/ninja/src/browse.py	/^def parse(text):$/;"	f
parse_arguments	meta/dotbot/lib/pyyaml/tests/lib/test_appliance.py	/^def parse_arguments(args):$/;"	f
parse_arguments	meta/dotbot/lib/pyyaml/tests/lib3/test_appliance.py	/^def parse_arguments(args):$/;"	f
parse_arguments	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^parse_arguments() {$/;"	f
parse_block_mapping_first_key	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_block_mapping_first_key(self):$/;"	m	class:Parser
parse_block_mapping_first_key	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_block_mapping_first_key(self):$/;"	m	class:Parser
parse_block_mapping_key	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_block_mapping_key(self):$/;"	m	class:Parser
parse_block_mapping_key	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_block_mapping_key(self):$/;"	m	class:Parser
parse_block_mapping_value	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_block_mapping_value(self):$/;"	m	class:Parser
parse_block_mapping_value	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_block_mapping_value(self):$/;"	m	class:Parser
parse_block_node	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_block_node(self):$/;"	m	class:Parser
parse_block_node	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_block_node(self):$/;"	m	class:Parser
parse_block_node_or_indentless_sequence	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_block_node_or_indentless_sequence(self):$/;"	m	class:Parser
parse_block_node_or_indentless_sequence	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_block_node_or_indentless_sequence(self):$/;"	m	class:Parser
parse_block_scalar_empty_line	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def parse_block_scalar_empty_line(IndentTokenClass, ContentTokenClass):$/;"	f
parse_block_scalar_indent	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def parse_block_scalar_indent(TokenClass):$/;"	f
parse_block_sequence_entry	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_block_sequence_entry(self):$/;"	m	class:Parser
parse_block_sequence_entry	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_block_sequence_entry(self):$/;"	m	class:Parser
parse_block_sequence_first_entry	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_block_sequence_first_entry(self):$/;"	m	class:Parser
parse_block_sequence_first_entry	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_block_sequence_first_entry(self):$/;"	m	class:Parser
parse_document	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def parse_document(self):$/;"	m	class:CanonicalParser
parse_document	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def parse_document(self):$/;"	m	class:CanonicalParser
parse_document_content	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_document_content(self):$/;"	m	class:Parser
parse_document_content	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_document_content(self):$/;"	m	class:Parser
parse_document_end	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_document_end(self):$/;"	m	class:Parser
parse_document_end	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_document_end(self):$/;"	m	class:Parser
parse_document_start	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_document_start(self):$/;"	m	class:Parser
parse_document_start	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_document_start(self):$/;"	m	class:Parser
parse_flow_mapping_empty_value	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_mapping_empty_value(self):$/;"	m	class:Parser
parse_flow_mapping_empty_value	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_mapping_empty_value(self):$/;"	m	class:Parser
parse_flow_mapping_first_key	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_mapping_first_key(self):$/;"	m	class:Parser
parse_flow_mapping_first_key	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_mapping_first_key(self):$/;"	m	class:Parser
parse_flow_mapping_key	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_mapping_key(self, first=False):$/;"	m	class:Parser
parse_flow_mapping_key	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_mapping_key(self, first=False):$/;"	m	class:Parser
parse_flow_mapping_value	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_mapping_value(self):$/;"	m	class:Parser
parse_flow_mapping_value	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_mapping_value(self):$/;"	m	class:Parser
parse_flow_node	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_node(self):$/;"	m	class:Parser
parse_flow_node	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_node(self):$/;"	m	class:Parser
parse_flow_sequence_entry	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_sequence_entry(self, first=False):$/;"	m	class:Parser
parse_flow_sequence_entry	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_sequence_entry(self, first=False):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_end	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_end(self):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_end	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_end(self):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_key	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_key(self):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_key	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_key(self):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_value	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_value(self):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_value	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_sequence_entry_mapping_value(self):$/;"	m	class:Parser
parse_flow_sequence_first_entry	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_flow_sequence_first_entry(self):$/;"	m	class:Parser
parse_flow_sequence_first_entry	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_flow_sequence_first_entry(self):$/;"	m	class:Parser
parse_git_dirty	src/zplug/base/utils/theme.zsh	/^parse_git_dirty()$/;"	f
parse_git_dirty	src/zplug/repos/zplug/zplug/base/utils/theme.zsh	/^parse_git_dirty()$/;"	f
parse_implicit_document_start	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_implicit_document_start(self):$/;"	m	class:Parser
parse_implicit_document_start	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_implicit_document_start(self):$/;"	m	class:Parser
parse_indentless_sequence_entry	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_indentless_sequence_entry(self):$/;"	m	class:Parser
parse_indentless_sequence_entry	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_indentless_sequence_entry(self):$/;"	m	class:Parser
parse_map_entry	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def parse_map_entry(self):$/;"	m	class:CanonicalParser
parse_map_entry	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def parse_map_entry(self):$/;"	m	class:CanonicalParser
parse_mapping	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def parse_mapping(self):$/;"	m	class:CanonicalParser
parse_mapping	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def parse_mapping(self):$/;"	m	class:CanonicalParser
parse_node	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_node(self, block=False, indentless_sequence=False):$/;"	m	class:Parser
parse_node	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_node(self, block=False, indentless_sequence=False):$/;"	m	class:Parser
parse_node	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def parse_node(self):$/;"	m	class:CanonicalParser
parse_node	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def parse_node(self):$/;"	m	class:CanonicalParser
parse_plain_scalar_indent	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def parse_plain_scalar_indent(TokenClass):$/;"	f
parse_sequence	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def parse_sequence(self):$/;"	m	class:CanonicalParser
parse_sequence	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def parse_sequence(self):$/;"	m	class:CanonicalParser
parse_stream	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def parse_stream(self):$/;"	m	class:CanonicalParser
parse_stream	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def parse_stream(self):$/;"	m	class:CanonicalParser
parse_stream_start	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def parse_stream_start(self):$/;"	m	class:Parser
parse_stream_start	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def parse_stream_start(self):$/;"	m	class:Parser
parse_window_name	src/dev/tmux/names.c	/^parse_window_name(const char *in)$/;"	f	typeref:typename:char *
parsed_	src/dev/ninja/src/eval_env.h	/^  TokenList parsed_;$/;"	m	struct:EvalString	typeref:typename:TokenList
parser	meta/dotbot/lib/pyyaml/examples/yaml-highlight/yaml_hl.py	/^    parser = optparse.OptionParser()$/;"	v
parser	src/dev/ninja/configure.py	/^parser = OptionParser()$/;"	v
parser	src/dev/ninja/src/browse.py	/^parser = argparse.ArgumentParser(prog='ninja -t browse')$/;"	v
parser_	src/dev/ninja/src/depfile_parser_test.cc	/^  DepfileParser parser_;$/;"	m	struct:DepfileParserTest	typeref:typename:DepfileParser	file:
pass	meta/dotbot/test/driver-lib.bash	/^pass() {$/;"	f
paste_add	src/dev/tmux/paste.c	/^paste_add(char *data, size_t size)$/;"	f	typeref:typename:void
paste_buffer	src/dev/tmux/paste.c	/^struct paste_buffer {$/;"	s	file:
paste_buffer_created	src/dev/tmux/paste.c	/^paste_buffer_created(struct paste_buffer *pb)$/;"	f	typeref:typename:time_t
paste_buffer_data	src/dev/tmux/paste.c	/^paste_buffer_data(struct paste_buffer *pb, size_t *size)$/;"	f	typeref:typename:const char *
paste_buffer_name	src/dev/tmux/paste.c	/^paste_buffer_name(struct paste_buffer *pb)$/;"	f	typeref:typename:const char *
paste_buffer_order	src/dev/tmux/paste.c	/^paste_buffer_order(struct paste_buffer *pb)$/;"	f	typeref:typename:u_int
paste_cmp_names	src/dev/tmux/paste.c	/^paste_cmp_names(const struct paste_buffer *a, const struct paste_buffer *b)$/;"	f	typeref:typename:int	file:
paste_cmp_times	src/dev/tmux/paste.c	/^paste_cmp_times(const struct paste_buffer *a, const struct paste_buffer *b)$/;"	f	typeref:typename:int	file:
paste_free	src/dev/tmux/paste.c	/^paste_free(struct paste_buffer *pb)$/;"	f	typeref:typename:void
paste_get_name	src/dev/tmux/paste.c	/^paste_get_name(const char *name)$/;"	f	typeref:struct:paste_buffer *
paste_get_top	src/dev/tmux/paste.c	/^paste_get_top(const char **name)$/;"	f	typeref:struct:paste_buffer *
paste_make_sample	src/dev/tmux/paste.c	/^paste_make_sample(struct paste_buffer *pb)$/;"	f	typeref:typename:char *
paste_next_index	src/dev/tmux/paste.c	/^static u_int	paste_next_index;$/;"	v	typeref:typename:u_int	file:
paste_next_order	src/dev/tmux/paste.c	/^static u_int	paste_next_order;$/;"	v	typeref:typename:u_int	file:
paste_num_automatic	src/dev/tmux/paste.c	/^static u_int	paste_num_automatic;$/;"	v	typeref:typename:u_int	file:
paste_rename	src/dev/tmux/paste.c	/^paste_rename(const char *oldname, const char *newname, char **cause)$/;"	f	typeref:typename:int
paste_set	src/dev/tmux/paste.c	/^paste_set(char *data, size_t size, const char *name, char **cause)$/;"	f	typeref:typename:int
paste_string	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def paste_string(str)$/;"	f	class:TerminalSession
paste_walk	src/dev/tmux/paste.c	/^paste_walk(struct paste_buffer *pb)$/;"	f	typeref:struct:paste_buffer *
pasting using bracketed-paste-magic	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/bracketed_paste_magic_spec.rb	/^describe 'pasting using bracketed-paste-magic' do$/;"	d
path	src/dev/ninja/misc/write_fake_manifests.py	/^    def path(self):$/;"	m	class:GenRandom
path	src/dev/ninja/src/graph.h	/^  const string& path() const { return path_; }$/;"	f	struct:Node	typeref:typename:const string &
path_	src/dev/ninja/src/graph.h	/^  string path_;$/;"	m	struct:Node	typeref:typename:string
paths_	src/dev/ninja/src/state.h	/^  Paths paths_;$/;"	m	struct:State	typeref:typename:Paths
pdf	src/dev/tmux/Makefile	/^pdf: pdf-am$/;"	t
pdf	src/dev/tmux/Makefile.in	/^pdf: pdf-am$/;"	t
pdf-am	src/dev/tmux/Makefile	/^pdf-am:$/;"	t
pdf-am	src/dev/tmux/Makefile.in	/^pdf-am:$/;"	t
pdfdir	src/dev/tmux/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/dev/tmux/Makefile.in	/^pdfdir = @pdfdir@$/;"	m
peek	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def peek(self, index=0):$/;"	m	class:Reader
peek	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def peek(self, index=0):$/;"	m	class:Reader
peek_event	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def peek_event(self):$/;"	m	class:CParser
peek_event	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def peek_event(self):$/;"	m	class:Parser
peek_event	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def peek_event(self):$/;"	m	class:Parser
peek_event	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def peek_event(self):$/;"	m	class:CanonicalParser
peek_event	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def peek_event(self):$/;"	m	class:CanonicalParser
peek_token	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def peek_token(self):$/;"	m	class:CParser
peek_token	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def peek_token(self):$/;"	m	class:Scanner
peek_token	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def peek_token(self):$/;"	m	class:Scanner
peek_token	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def peek_token(self):$/;"	m	class:CanonicalScanner
peek_token	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def peek_token(self):$/;"	m	class:CanonicalScanner
peer	src/dev/tmux/tmux.h	/^	struct tmuxpeer	*peer;$/;"	m	struct:client	typeref:struct:tmuxpeer *
peer_check_version	src/dev/tmux/proc.c	/^peer_check_version(struct tmuxpeer *peer, struct imsg *imsg)$/;"	f	typeref:typename:int	file:
peerid	src/dev/tmux/compat/imsg.h	/^	uint32_t	 peerid;$/;"	m	struct:imsg_hdr	typeref:typename:uint32_t
perf	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^perf:$/;"	t
permute	src/dev/ninja/src/getopt.c	/^permute (char **argv, int len1, int len2)$/;"	f	typeref:typename:void	file:
pid	src/dev/tmux/compat/imsg.h	/^	pid_t			 pid;$/;"	m	struct:imsgbuf	typeref:typename:pid_t
pid	src/dev/tmux/compat/imsg.h	/^	uint32_t	 pid;$/;"	m	struct:imsg_hdr	typeref:typename:uint32_t
pid	src/dev/tmux/tmux.h	/^	pid_t			 pid;$/;"	m	struct:job	typeref:typename:pid_t
pid	src/dev/tmux/tmux.h	/^	pid_t		 pid;$/;"	m	struct:client	typeref:typename:pid_t
pid	src/dev/tmux/tmux.h	/^	pid_t		 pid;$/;"	m	struct:window_pane	typeref:typename:pid_t
pid_	src/dev/ninja/src/subprocess.h	/^  pid_t pid_;$/;"	m	struct:Subprocess	typeref:typename:pid_t
pipe_	src/dev/ninja/src/subprocess.h	/^  HANDLE pipe_;$/;"	m	struct:Subprocess	typeref:typename:HANDLE
pipe_event	src/dev/tmux/tmux.h	/^	struct bufferevent *pipe_event;$/;"	m	struct:window_pane	typeref:struct:bufferevent *
pipe_fd	src/dev/tmux/tmux.h	/^	int		 pipe_fd;$/;"	m	struct:window_pane	typeref:typename:int
pipe_off	src/dev/tmux/tmux.h	/^	size_t		 pipe_off;$/;"	m	struct:window_pane	typeref:typename:size_t
pkgdatadir	src/dev/tmux/Makefile	/^pkgdatadir = $(datadir)\/tmux$/;"	m
pkgdatadir	src/dev/tmux/Makefile.in	/^pkgdatadir = $(datadir)\/@PACKAGE@$/;"	m
pkgincludedir	src/dev/tmux/Makefile	/^pkgincludedir = $(includedir)\/tmux$/;"	m
pkgincludedir	src/dev/tmux/Makefile.in	/^pkgincludedir = $(includedir)\/@PACKAGE@$/;"	m
pkglibdir	src/dev/tmux/Makefile	/^pkglibdir = $(libdir)\/tmux$/;"	m
pkglibdir	src/dev/tmux/Makefile.in	/^pkglibdir = $(libdir)\/@PACKAGE@$/;"	m
pkglibexecdir	src/dev/tmux/Makefile	/^pkglibexecdir = $(libexecdir)\/tmux$/;"	m
pkglibexecdir	src/dev/tmux/Makefile.in	/^pkglibexecdir = $(libexecdir)\/@PACKAGE@$/;"	m
plan_	src/dev/ninja/src/build.h	/^  Plan plan_;$/;"	m	struct:Builder	typeref:typename:Plan
plan_	src/dev/ninja/src/build_test.cc	/^  Plan plan_;$/;"	m	struct:PlanTest	typeref:typename:Plan	file:
platform	src/dev/ninja/configure.py	/^    def platform(self):$/;"	m	class:Platform
platform	src/dev/ninja/configure.py	/^platform = Platform(options.platform)$/;"	v
pledge	src/dev/tmux/compat.h	/^#define pledge(/;"	d
plugin_already_installed	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_already_installed() {$/;"	f
plugin_dir_exists	terminals/tmux/plugins/tpm/scripts/source_plugins.sh	/^plugin_dir_exists() {$/;"	f
plugin_name_helper	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_name_helper() {$/;"	f
plugin_path_helper	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_path_helper() {$/;"	f
pmodload	src/zplug/base/sources/prezto.zsh	/^        pmodload() {$/;"	f
pmodload	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^        pmodload() {$/;"	f
pool	src/dev/ninja/misc/ninja_syntax.py	/^    def pool(self, name, depth):$/;"	m	class:Writer
pool	src/dev/ninja/src/graph.h	/^  Pool* pool() const { return pool_; }$/;"	f	struct:Edge	typeref:typename:Pool *
pool_	src/dev/ninja/src/graph.h	/^  Pool* pool_;$/;"	m	struct:Edge	typeref:typename:Pool *
pools_	src/dev/ninja/src/state.h	/^  map<string, Pool*> pools_;$/;"	m	struct:State	typeref:typename:map<string,Pool * >
pop	src/zplug/misc/contrib/getopts.awk	/^function pop() {$/;"	f
pop	src/zplug/repos/zplug/zplug/misc/contrib/getopts.awk	/^function pop() {$/;"	f
port	src/dev/ninja/src/browse.py	/^port = args.port$/;"	v
pre	src/dev/ninja/doc/style.css	/^pre {$/;"	s
pre	src/dev/ninja/doc/style.css	/^pre, code {$/;"	s
pre_formats=	src/zplug/base/io/print.zsh	/^                        pre_formats=()$/;"	f
pre_formats=	src/zplug/repos/zplug/zplug/base/io/print.zsh	/^                        pre_formats=()$/;"	f
precmd	shells/zsh/theme/prompt.zsh	/^precmd() {$/;"	f
prefix	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def prefix(self, length=1):$/;"	m	class:Reader
prefix	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def prefix(self, length=1):$/;"	m	class:Reader
prefix	src/dev/tmux/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/dev/tmux/Makefile.in	/^prefix = @prefix@$/;"	m
prepare_anchor	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def prepare_anchor(self, anchor):$/;"	m	class:Emitter
prepare_anchor	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def prepare_anchor(self, anchor):$/;"	m	class:Emitter
prepare_tag	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def prepare_tag(self, tag):$/;"	m	class:Emitter
prepare_tag	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def prepare_tag(self, tag):$/;"	m	class:Emitter
prepare_tag_handle	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def prepare_tag_handle(self, handle):$/;"	m	class:Emitter
prepare_tag_handle	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def prepare_tag_handle(self, handle):$/;"	m	class:Emitter
prepare_tag_prefix	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def prepare_tag_prefix(self, prefix):$/;"	m	class:Emitter
prepare_tag_prefix	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def prepare_tag_prefix(self, prefix):$/;"	m	class:Emitter
prepare_version	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def prepare_version(self, version):$/;"	m	class:Emitter
prepare_version	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def prepare_version(self, version):$/;"	m	class:Emitter
preview	src/dev/tmux/mode-tree.c	/^	int			  preview;$/;"	m	struct:mode_tree_data	typeref:typename:int	file:
printer	src/dev/ninja/src/ninja_test.cc	/^static LinePrinter printer;$/;"	v	typeref:typename:LinePrinter	file:
printer_	src/dev/ninja/src/build.h	/^  LinePrinter printer_;$/;"	m	struct:BuildStatus	typeref:typename:LinePrinter
printflike	src/dev/tmux/tmux.h	/^#define printflike(/;"	d
proc_add_peer	src/dev/tmux/proc.c	/^proc_add_peer(struct tmuxproc *tp, int fd,$/;"	f	typeref:struct:tmuxpeer *
proc_clear_signals	src/dev/tmux/proc.c	/^proc_clear_signals(struct tmuxproc *tp, int defaults)$/;"	f	typeref:typename:void
proc_event_cb	src/dev/tmux/proc.c	/^proc_event_cb(__unused int fd, short events, void *arg)$/;"	f	typeref:typename:void	file:
proc_exit	src/dev/tmux/proc.c	/^proc_exit(struct tmuxproc *tp)$/;"	f	typeref:typename:void
proc_kill_peer	src/dev/tmux/proc.c	/^proc_kill_peer(struct tmuxpeer *peer)$/;"	f	typeref:typename:void
proc_loop	src/dev/tmux/proc.c	/^proc_loop(struct tmuxproc *tp, int (*loopcb)(void))$/;"	f	typeref:typename:void
proc_remove_peer	src/dev/tmux/proc.c	/^proc_remove_peer(struct tmuxpeer *peer)$/;"	f	typeref:typename:void
proc_send	src/dev/tmux/proc.c	/^proc_send(struct tmuxpeer *peer, enum msgtype type, int fd, const void *buf,$/;"	f	typeref:typename:int
proc_set_signals	src/dev/tmux/proc.c	/^proc_set_signals(struct tmuxproc *tp, void (*signalcb)(int))$/;"	f	typeref:typename:void
proc_signal_cb	src/dev/tmux/proc.c	/^proc_signal_cb(int signo, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
proc_start	src/dev/tmux/proc.c	/^proc_start(const char *name)$/;"	f	typeref:struct:tmuxproc *
proc_toggle_log	src/dev/tmux/proc.c	/^proc_toggle_log(struct tmuxproc *tp)$/;"	f	typeref:typename:void
proc_update_event	src/dev/tmux/proc.c	/^proc_update_event(struct tmuxpeer *peer)$/;"	f	typeref:typename:void	file:
process_anchor	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def process_anchor(self, indicator):$/;"	m	class:Emitter
process_anchor	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def process_anchor(self, indicator):$/;"	m	class:Emitter
process_directives	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def process_directives(self):$/;"	m	class:Parser
process_directives	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def process_directives(self):$/;"	m	class:Parser
process_empty_scalar	meta/dotbot/lib/pyyaml/lib/yaml/parser.py	/^    def process_empty_scalar(self, mark):$/;"	m	class:Parser
process_empty_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/parser.py	/^    def process_empty_scalar(self, mark):$/;"	m	class:Parser
process_scalar	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def process_scalar(self):$/;"	m	class:Emitter
process_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def process_scalar(self):$/;"	m	class:Emitter
process_tag	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def process_tag(self):$/;"	m	class:Emitter
process_tag	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def process_tag(self):$/;"	m	class:Emitter
profilers	src/dev/ninja/configure.py	/^profilers = ['gmon', 'pprof']$/;"	v
program_details	src/dev/tmux/etc/missing	/^program_details ()$/;"	f
program_transform_name	src/dev/tmux/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/dev/tmux/Makefile.in	/^program_transform_name = @program_transform_name@$/;"	m
progress_status_format_	src/dev/ninja/src/build.h	/^  const char* progress_status_format_;$/;"	m	struct:BuildStatus	typeref:typename:const char *
prompt_buffer	src/dev/tmux/tmux.h	/^	struct utf8_data *prompt_buffer;$/;"	m	struct:client	typeref:struct:utf8_data *
prompt_data	src/dev/tmux/tmux.h	/^	void		*prompt_data;$/;"	m	struct:client	typeref:typename:void *
prompt_flags	src/dev/tmux/tmux.h	/^	int		 prompt_flags;$/;"	m	struct:client	typeref:typename:int
prompt_free_cb	src/dev/tmux/tmux.h	/^typedef void (*prompt_free_cb)(void *);$/;"	t	typeref:typename:void (*)(void *)
prompt_freecb	src/dev/tmux/tmux.h	/^	prompt_free_cb	 prompt_freecb;$/;"	m	struct:client	typeref:typename:prompt_free_cb
prompt_hindex	src/dev/tmux/tmux.h	/^	u_int		 prompt_hindex;$/;"	m	struct:client	typeref:typename:u_int
prompt_index	src/dev/tmux/tmux.h	/^	size_t		 prompt_index;$/;"	m	struct:client	typeref:typename:size_t
prompt_input_cb	src/dev/tmux/tmux.h	/^typedef int (*prompt_input_cb)(struct client *, void *, const char *, int);$/;"	t	typeref:typename:int (*)(struct client *,void *,const char *,int)
prompt_inputcb	src/dev/tmux/tmux.h	/^	prompt_input_cb	 prompt_inputcb;$/;"	m	struct:client	typeref:typename:prompt_input_cb
prompt_mode	src/dev/tmux/tmux.h	/^	enum { PROMPT_ENTRY, PROMPT_COMMAND } prompt_mode;$/;"	m	struct:client	typeref:enum:client::__anonc903038b0803
prompt_string	src/dev/tmux/tmux.h	/^	char		*prompt_string;$/;"	m	struct:client	typeref:typename:char *
prompts	src/dev/tmux/cmd-command-prompt.c	/^	char	*prompts;$/;"	m	struct:cmd_command_prompt_cdata	typeref:typename:char *	file:
ps	src/dev/tmux/Makefile	/^ps: ps-am$/;"	t
ps	src/dev/tmux/Makefile.in	/^ps: ps-am$/;"	t
ps-am	src/dev/tmux/Makefile	/^ps-am:$/;"	t
ps-am	src/dev/tmux/Makefile.in	/^ps-am:$/;"	t
psdir	src/dev/tmux/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/dev/tmux/Makefile.in	/^psdir = @psdir@$/;"	m
ptm_fd	src/dev/tmux/tmux.c	/^int		 ptm_fd = -1;$/;"	v	typeref:typename:int
ptr	src/dev/tmux/tmux.h	/^	void		*ptr;$/;"	m	struct:tty_ctx	typeref:typename:void *
pull_changes	terminals/tmux/plugins/tpm/scripts/update_plugin.sh	/^pull_changes() {$/;"	f
pyclean	shells/zsh/python.zsh	/^function pyclean() {$/;"	f
pyfind	shells/zsh/python.zsh	/^alias pyfind='find . -name "*.py"'$/;"	a
pygrep	shells/zsh/python.zsh	/^alias pygrep='grep --include="*.py"'$/;"	a
q	editors/vim/config/mappings.vim	/^nnoremap <silent> q :<C-u>:quit<CR>$/;"	m
q	editors/vim/ftplugin/qf.vim	/^nnoremap <silent><buffer> q  :pclose!<CR>:quit<CR>$/;"	m
queue	src/dev/tmux/tmux.h	/^	struct cmdq_list	*queue;$/;"	m	struct:cmdq_item	typeref:struct:cmdq_list *
queue	src/dev/tmux/tmux.h	/^	struct cmdq_list queue;$/;"	m	struct:client	typeref:struct:cmdq_list
queued	src/dev/tmux/compat/imsg.h	/^	uint32_t		 queued;$/;"	m	struct:msgbuf	typeref:typename:uint32_t
quick_sort	src/zplug/misc/contrib/cache.awk	/^function quick_sort(array, left, right,     i, j, tmp, pivot) {$/;"	f
quick_sort	src/zplug/repos/zplug/zplug/misc/contrib/cache.awk	/^function quick_sort(array, left, right,     i, j, tmp, pivot) {$/;"	f
quiet-test	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^quiet-test:$/;"	t
quiet_	src/dev/ninja/src/manifest_parser.h	/^  bool quiet_;$/;"	m	struct:ManifestParser	typeref:typename:bool
r	src/dev/tmux/compat/imsg.h	/^	struct ibuf_read	 r;$/;"	m	struct:imsgbuf	typeref:struct:ibuf_read
rainbowColor	src/dev/tmux/tools/24-bit-color.sh	/^rainbowColor()$/;"	f
random	src/dev/ninja/src/hash_collision_bench.cc	/^int random(int low, int high) {$/;"	f	typeref:typename:int
random_targets	src/dev/ninja/misc/write_fake_manifests.py	/^def random_targets(num_targets, src_dir):$/;"	f
rate	src/dev/ninja/src/build.h	/^    double rate() { return rate_; }$/;"	f	struct:BuildStatus::RateInfo	typeref:typename:double
rate	src/dev/ninja/src/build.h	/^    double rate() { return rate_; }$/;"	f	struct:BuildStatus::SlidingRateInfo	typeref:typename:double
rate_	src/dev/ninja/src/build.h	/^    double rate_;$/;"	m	struct:BuildStatus::RateInfo	typeref:typename:double
rate_	src/dev/ninja/src/build.h	/^    double rate_;$/;"	m	struct:BuildStatus::SlidingRateInfo	typeref:typename:double
raw_parse	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def raw_parse(self):$/;"	m	class:CParser
raw_scan	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def raw_scan(self):$/;"	m	class:CParser
read_config	meta/dotbot/dotbot/cli.py	/^def read_config(config_file):$/;"	f
ready_	src/dev/ninja/src/build.h	/^  set<Edge*> ready_;$/;"	m	struct:Plan	typeref:typename:set<Edge * >
real_main	src/dev/ninja/src/ninja.cc	/^int real_main(int argc, char** argv) {$/;"	f	namespace:__anon193baac40110	typeref:typename:int
reallocarray	src/dev/tmux/compat/reallocarray.c	/^reallocarray(void *optr, size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
rebinding [	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/rebound_bracket_spec.rb	/^describe 'rebinding [' do$/;"	d
rebuild_args	src/dev/ninja/configure.py	/^    rebuild_args = []$/;"	v
recalculate_sizes	src/dev/tmux/resize.c	/^recalculate_sizes(void)$/;"	f	typeref:typename:void
recallocarray	src/dev/tmux/compat/recallocarray.c	/^recallocarray(void *ptr, size_t oldnmemb, size_t newnmemb, size_t size)$/;"	f	typeref:typename:void *
reconstruct	src/zplug/misc/contrib/cache.awk	/^function reconstruct(line,    tags) {$/;"	f
reconstruct	src/zplug/repos/zplug/zplug/misc/contrib/cache.awk	/^function reconstruct(line,    tags) {$/;"	f
rectflag	src/dev/tmux/tmux.h	/^	int		 rectflag;$/;"	m	struct:screen_sel	typeref:typename:int
rectflag	src/dev/tmux/window-copy.c	/^	int		 rectflag;	\/* in rectangle copy mode? *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
recursive_	src/dev/ninja/src/graph.cc	/^  bool recursive_;$/;"	m	struct:EdgeEnv	typeref:typename:bool	file:
red	meta/dotbot/test/driver-lib.bash	/^red() {$/;"	f
redraw	src/dev/tmux/tmux.h	/^	size_t		 redraw;$/;"	m	struct:client	typeref:typename:size_t
references	src/dev/tmux/mode-tree.c	/^	u_int			  references;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
references	src/dev/tmux/tmux.h	/^	int			 references;$/;"	m	struct:cmd_list	typeref:typename:int
references	src/dev/tmux/tmux.h	/^	int			 references;$/;"	m	struct:cmdq_shared	typeref:typename:int
references	src/dev/tmux/tmux.h	/^	int		 references;$/;"	m	struct:client	typeref:typename:int
references	src/dev/tmux/tmux.h	/^	int		 references;$/;"	m	struct:session	typeref:typename:int
references	src/dev/tmux/tmux.h	/^	u_int			 references;$/;"	m	struct:key_table	typeref:typename:u_int
references	src/dev/tmux/tmux.h	/^	u_int		 references;$/;"	m	struct:tty_term	typeref:typename:u_int
references	src/dev/tmux/tmux.h	/^	u_int		 references;$/;"	m	struct:window	typeref:typename:u_int
references	src/dev/tmux/window-tree.c	/^	int				  references;$/;"	m	struct:window_tree_modedata	typeref:typename:int	file:
region_highlight=	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^      region_highlight=()$/;"	f
region_highlight=	src/zplug/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh	/^    region_highlight=()$/;"	f
region_highlight=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/generate.zsh	/^  region_highlight=()$/;"	f
region_highlight=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^        region_highlight=()$/;"	f
region_highlight=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^    region_highlight=()$/;"	f
region_highlight=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^  region_highlight=();$/;"	f
register_failing_tests	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^register_failing_tests() {$/;"	f
release	src/zplug/Makefile	/^release: ## Create new GitHub Releases$/;"	t
release	src/zplug/repos/zplug/zplug/Makefile	/^release: ## Create new GitHub Releases$/;"	t
reload	shells/general/aliases.bash	/^alias reload='export RELOAD=1 && source $SHELLRC'$/;"	a
reload	shells/zsh/aliases.zsh	/^alias reload='export RELOAD=1 && source $SHELLRC'$/;"	a
reload_tmux_environment	terminals/tmux/plugins/tpm/scripts/helpers/tmux_utils.sh	/^reload_tmux_environment() {$/;"	f
remove_from_gitignore	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^remove_from_gitignore() {$/;"	f
remove_possible_simple_key	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def remove_possible_simple_key(self):$/;"	m	class:Scanner
remove_possible_simple_key	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def remove_possible_simple_key(self):$/;"	m	class:Scanner
removed_	src/dev/ninja/src/clean.h	/^  set<string> removed_;$/;"	m	struct:Cleaner	typeref:typename:set<string>
repeat_timer	src/dev/tmux/tmux.h	/^	struct event	 repeat_timer;$/;"	m	struct:client	typeref:struct:event
reply=	src/zplug/base/core/arguments.zsh	/^    reply=()$/;"	f
reply=	src/zplug/base/core/commands.zsh	/^    reply=()$/;"	f
reply=	src/zplug/base/core/core.zsh	/^    reply=()$/;"	f
reply=	src/zplug/base/sources/github.zsh	/^    reply=()$/;"	f
reply=	src/zplug/base/sources/oh-my-zsh.zsh	/^    reply=()$/;"	f
reply=	src/zplug/base/sources/prezto.zsh	/^    reply=()$/;"	f
reply=	src/zplug/repos/zplug/zplug/base/core/arguments.zsh	/^    reply=()$/;"	f
reply=	src/zplug/repos/zplug/zplug/base/core/commands.zsh	/^    reply=()$/;"	f
reply=	src/zplug/repos/zplug/zplug/base/core/core.zsh	/^    reply=()$/;"	f
reply=	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^    reply=()$/;"	f
reply=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    reply=()$/;"	f
reply=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    reply=()$/;"	f
reply=	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^  reply=()$/;"	f
reply_cmds=	src/zplug/base/core/arguments.zsh	/^    reply_cmds=()$/;"	f
reply_cmds=	src/zplug/repos/zplug/zplug/base/core/arguments.zsh	/^    reply_cmds=()$/;"	f
repo_pids=	src/zplug/base/job/handle.zsh	/^                repo_pids=()$/;"	f
repo_pids=	src/zplug/repos/zplug/zplug/base/job/handle.zsh	/^                repo_pids=()$/;"	f
report	meta/dotbot/test/driver-lib.bash	/^report() {$/;"	f
represent	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent(self, data):$/;"	m	class:BaseRepresenter
represent	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent(self, data):$/;"	m	class:BaseRepresenter
represent1	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    def represent1(representer, native):$/;"	f	function:_make_objects	file:
represent1	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^    def represent1(representer, native):$/;"	f	function:_make_objects	file:
represent_binary	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_binary(self, data):$/;"	m	class:SafeRepresenter
represent_bool	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_bool(self, data):$/;"	m	class:SafeRepresenter
represent_bool	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_bool(self, data):$/;"	m	class:SafeRepresenter
represent_complex	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_complex(self, data):$/;"	m	class:Representer
represent_complex	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_complex(self, data):$/;"	m	class:Representer
represent_data	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_data(self, data):$/;"	m	class:BaseRepresenter
represent_data	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_data(self, data):$/;"	m	class:BaseRepresenter
represent_date	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_date(self, data):$/;"	m	class:SafeRepresenter
represent_date	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_date(self, data):$/;"	m	class:SafeRepresenter
represent_datetime	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_datetime(self, data):$/;"	m	class:SafeRepresenter
represent_datetime	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_datetime(self, data):$/;"	m	class:SafeRepresenter
represent_dict	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_dict(self, data):$/;"	m	class:SafeRepresenter
represent_dict	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_dict(self, data):$/;"	m	class:SafeRepresenter
represent_float	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_float(self, data):$/;"	m	class:SafeRepresenter
represent_float	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_float(self, data):$/;"	m	class:SafeRepresenter
represent_instance	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_instance(self, data):$/;"	m	class:Representer
represent_int	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_int(self, data):$/;"	m	class:SafeRepresenter
represent_int	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_int(self, data):$/;"	m	class:SafeRepresenter
represent_list	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_list(self, data):$/;"	m	class:SafeRepresenter
represent_list	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_list(self, data):$/;"	m	class:SafeRepresenter
represent_long	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_long(self, data):$/;"	m	class:Representer
represent_long	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_long(self, data):$/;"	m	class:SafeRepresenter
represent_mapping	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_mapping(self, tag, mapping, flow_style=None):$/;"	m	class:BaseRepresenter
represent_mapping	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_mapping(self, tag, mapping, flow_style=None):$/;"	m	class:BaseRepresenter
represent_module	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_module(self, data):$/;"	m	class:Representer
represent_module	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_module(self, data):$/;"	m	class:Representer
represent_name	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_name(self, data):$/;"	m	class:Representer
represent_name	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_name(self, data):$/;"	m	class:Representer
represent_none	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_none(self, data):$/;"	m	class:SafeRepresenter
represent_none	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_none(self, data):$/;"	m	class:SafeRepresenter
represent_object	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_object(self, data):$/;"	m	class:Representer
represent_object	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_object(self, data):$/;"	m	class:Representer
represent_scalar	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_scalar(self, tag, value, style=None):$/;"	m	class:BaseRepresenter
represent_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_scalar(self, tag, value, style=None):$/;"	m	class:BaseRepresenter
represent_sequence	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_sequence(self, tag, sequence, flow_style=None):$/;"	m	class:BaseRepresenter
represent_sequence	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_sequence(self, tag, sequence, flow_style=None):$/;"	m	class:BaseRepresenter
represent_set	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_set(self, data):$/;"	m	class:SafeRepresenter
represent_set	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_set(self, data):$/;"	m	class:SafeRepresenter
represent_str	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_str(self, data):$/;"	m	class:Representer
represent_str	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_str(self, data):$/;"	m	class:SafeRepresenter
represent_str	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_str(self, data):$/;"	m	class:SafeRepresenter
represent_tuple	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_tuple(self, data):$/;"	m	class:Representer
represent_tuple	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_tuple(self, data):$/;"	m	class:Representer
represent_undefined	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_undefined(self, data):$/;"	m	class:SafeRepresenter
represent_undefined	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_undefined(self, data):$/;"	m	class:SafeRepresenter
represent_unicode	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_unicode(self, data):$/;"	m	class:Representer
represent_unicode	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_unicode(self, data):$/;"	m	class:SafeRepresenter
represent_yaml_object	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    def represent_yaml_object(self, tag, data, cls, flow_style=None):$/;"	m	class:SafeRepresenter
represent_yaml_object	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    def represent_yaml_object(self, tag, data, cls, flow_style=None):$/;"	m	class:SafeRepresenter
required_argument	src/dev/ninja/src/getopt.h	/^#define required_argument /;"	d
resetOutput	src/dev/tmux/tools/24-bit-color.sh	/^resetOutput()$/;"	f
reset_indent	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def reset_indent(TokenClass):$/;"	f
resize	src/dev/tmux/tmux.h	/^	void		 (*resize)(struct window_pane *, u_int, u_int);$/;"	m	struct:window_mode	typeref:typename:void (*)(struct window_pane *,u_int,u_int)
resize_timer	src/dev/tmux/tmux.h	/^	struct event	 resize_timer;$/;"	m	struct:window_pane	typeref:struct:event
resolve	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    def resolve(self, kind, value, implicit):$/;"	m	class:BaseResolver
resolve	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    def resolve(self, kind, value, implicit):$/;"	m	class:BaseResolver
restat_mtime	src/dev/ninja/src/build_log.h	/^    TimeStamp restat_mtime;$/;"	m	struct:BuildLog::LogEntry	typeref:typename:TimeStamp
restore	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^restore() {$/;"	f
result_type	src/dev/ninja/src/hash_map.h	/^  typedef size_t result_type;$/;"	t	struct:std::hash	typeref:typename:size_t
retval	src/dev/tmux/tmux.h	/^	int		 retval;$/;"	m	struct:client	typeref:typename:int
reverse_argv_elements	src/dev/ninja/src/getopt.c	/^reverse_argv_elements (char **argv, int num)$/;"	f	typeref:typename:void	file:
rgb	editors/vim/themes/one.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb_color	editors/vim/themes/one.vim	/^  fun <SID>rgb_color(x, y, z)$/;"	f
rgb_level	editors/vim/themes/one.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_number	editors/vim/themes/one.vim	/^  fun <SID>rgb_number(x)$/;"	f
right	src/dev/tmux/tmux.h	/^	struct tty_key	*right;$/;"	m	struct:tty_key	typeref:struct:tty_key *
rleft	src/dev/tmux/tmux.h	/^	u_int		 rleft;$/;"	m	struct:tty	typeref:typename:u_int
rlower	src/dev/tmux/tmux.h	/^	u_int			 rlower;	\/* scroll region bottom *\/$/;"	m	struct:screen	typeref:typename:u_int
rlower	src/dev/tmux/tmux.h	/^	u_int		 rlower;$/;"	m	struct:tty	typeref:typename:u_int
rmf	shells/general/aliases.bash	/^alias rmf="rm -rf"$/;"	a
rmf	shells/zsh/aliases.zsh	/^alias rmf="rm -rf"$/;"	a
rollback	meta/dotbot/test/driver-lib.bash	/^rollback() {$/;"	f
root	src/dev/ninja/configure.py	/^    root = '.'$/;"	v
root	src/dev/ninja/configure.py	/^root = sourcedir$/;"	v
rpos	src/dev/tmux/compat/imsg.h	/^	size_t			 rpos;$/;"	m	struct:ibuf	typeref:typename:size_t
rptr	src/dev/tmux/compat/imsg.h	/^	u_char			*rptr;$/;"	m	struct:ibuf_read	typeref:typename:u_char *
rright	src/dev/tmux/tmux.h	/^	u_int		 rright;$/;"	m	struct:tty	typeref:typename:u_int
rule	src/dev/ninja/configure.py	/^    def rule(self, name, **kwargs):$/;"	m	class:Bootstrap
rule	src/dev/ninja/misc/ninja_syntax.py	/^    def rule(self, name, command, description=None, depfile=None,$/;"	m	class:Writer
rule	src/dev/ninja/src/graph.h	/^  const Rule& rule() const { return *rule_; }$/;"	f	struct:Edge	typeref:typename:const Rule &
rule_	src/dev/ninja/src/graph.h	/^  const Rule* rule_;$/;"	m	struct:Edge	typeref:typename:const Rule *
rules_	src/dev/ninja/src/eval_env.h	/^  map<string, const Rule*> rules_;$/;"	m	struct:BindingEnv	typeref:typename:map<string,const Rule * >
run	meta/dotbot/lib/pyyaml/setup.py	/^    def run(self):$/;"	m	class:build_ext
run	meta/dotbot/lib/pyyaml/setup.py	/^    def run(self):$/;"	m	class:test
run	meta/dotbot/lib/pyyaml/tests/lib/test_appliance.py	/^def run(collections, args=None):$/;"	f
run	meta/dotbot/lib/pyyaml/tests/lib3/test_appliance.py	/^def run(collections, args=None):$/;"	f
run	src/dev/ninja/misc/measure.py	/^def run(cmd, repeat=10):$/;"	f
run_command	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def run_command(command)$/;"	f	class:TerminalSession
run_dotbot	meta/dotbot/test/test-lib.bash	/^run_dotbot() {$/;"	f
run_dotbot_json	meta/dotbot/test/test-lib.bash	/^run_dotbot_json() {$/;"	f
run_test	meta/dotbot/test/driver-lib.bash	/^run_test() {$/;"	f
run_test	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test() {$/;"	f
run_test	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test() {$/;"	f
run_test_internal	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test_internal() {$/;"	f
run_test_internal	src/zplug/repos/zsh-users/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test_internal() {$/;"	f
run_tests	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests() {$/;"	f
run_tests	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^run_tests() {$/;"	f
run_tests	terminals/tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^run_tests() {$/;"	f
run_tests_on_virtual_machines	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests_on_virtual_machines() {$/;"	f
run_tests_on_vm	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests_on_vm() {$/;"	f
run_vagrant	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_vagrant() {$/;"	f
running_	src/dev/ninja/src/subprocess.h	/^  vector<Subprocess*> running_;$/;"	m	struct:SubprocessSet	typeref:typename:vector<Subprocess * >
running_edges_	src/dev/ninja/src/build.h	/^  RunningEdgeMap running_edges_;$/;"	m	struct:BuildStatus	typeref:typename:RunningEdgeMap
runstatedir	src/dev/tmux/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	src/dev/tmux/Makefile.in	/^runstatedir = @runstatedir@$/;"	m
rupper	src/dev/tmux/tmux.h	/^	u_int			 rupper;	\/* scroll region top *\/$/;"	m	struct:screen	typeref:typename:u_int
rupper	src/dev/tmux/tmux.h	/^	u_int		 rupper;$/;"	m	struct:tty	typeref:typename:u_int
s	editors/vim/config/mappings.vim	/^nmap      s [Window]$/;"	m
s	editors/vim/config/mappings.vim	/^xnoremap s :s\/\/g<Left><Left>$/;"	m
s	editors/vim/ftplugin/help.vim	/^nmap <buffer><nowait> s \/\\|\\S\\+\\|<CR>l$/;"	m
s	src/dev/tmux/format.c	/^	struct session		*s;$/;"	m	struct:format_tree	typeref:struct:session *	file:
s	src/dev/tmux/tmux.h	/^	int		s;$/;"	m	struct:mouse_event	typeref:typename:int
s	src/dev/tmux/tmux.h	/^	struct screen		*s;$/;"	m	struct:screen_write_ctx	typeref:struct:screen *
s	src/dev/tmux/tmux.h	/^	struct session		*s;$/;"	m	struct:cmd_find_state	typeref:struct:session *
s/	editors/vim/config/plugins/all.vim	/^	map  s\/ <Plug>(easymotion-sn)$/;"	m
s/	editors/vim/config/plugins/all.vim	/^	omap s\/ <Plug>(easymotion-tn)$/;"	m
s:BufferEmpty	editors/vim/config/mappings.vim	/^function! s:BufferEmpty()$/;"	f
s:NERDTreeHighlight	editors/vim/themes/rafi-2016.vim	/^function! s:NERDTreeHighlight()$/;"	f
s:NERDTreeHighlight	editors/vim/themes/rafi-2017.vim	/^function! s:NERDTreeHighlight()$/;"	f
s:NERDTreeUnfocus	editors/vim/config/plugins/nerdtree.vim	/^function! s:NERDTreeUnfocus()$/;"	f
s:SID	editors/vim/config/plugins/nerdtree.vim	/^function! s:SID()$/;"	f
s:SNR	editors/vim/config/plugins/nerdtree.vim	/^let s:SNR = '<SNR>'.s:SID().'_'$/;"	v
s:StartHL	editors/vim/plugin/hlsearch.vim	/^function! s:StartHL()$/;"	f
s:StopHL	editors/vim/plugin/hlsearch.vim	/^function! s:StopHL()$/;"	f
s:SweepBuffers	editors/vim/config/mappings.vim	/^function! s:SweepBuffers()$/;"	f
s:ToggleWhitespace	editors/vim/plugin/whitespace.vim	/^function! s:ToggleWhitespace(mode)$/;"	f
s:WhitespaceErase	editors/vim/plugin/whitespace.vim	/^function! s:WhitespaceErase(line1, line2)$/;"	f
s:XTermPasteBegin	editors/vim/config/terminal.vim	/^function! s:XTermPasteBegin(ret) abort$/;"	f
s:_set_root	editors/vim/config/plugins/nerdtree.vim	/^function! s:_set_root(dir)$/;"	f
s:append_modeline	editors/vim/config/mappings.vim	/^function! s:append_modeline() "{{{$/;"	f
s:ascendTree	editors/vim/config/plugins/nerdtree.vim	/^function! s:ascendTree(node)$/;"	f
s:cache	editors/vim/config/theme.vim	/^let s:cache = $VARPATH.'\/theme.txt'$/;"	v
s:closeOrAscendTree	editors/vim/config/plugins/nerdtree.vim	/^function! s:closeOrAscendTree(dirnode)$/;"	f
s:cpo_save	src/dev/ninja/misc/ninja.vim	/^let s:cpo_save = &cpo$/;"	v
s:create_in_path	editors/vim/config/plugins/nerdtree.vim	/^function! s:create_in_path(node)$/;"	f
s:cursor_shape_to_vte_shape	editors/vim/config/terminal.vim	/^	let s:cursor_shape_to_vte_shape = {1: 6, 2: 4, 0: 2, 5: 6, 3: 4}$/;"	v
s:dark	editors/vim/themes/one.vim	/^    let s:dark = 1$/;"	v
s:dark	editors/vim/themes/one.vim	/^  let s:dark = 0$/;"	v
s:dein_check_ruby	editors/vim/config/fullrc.vim	/^function! s:dein_check_ruby() abort$/;"	f
s:dein_check_yaml2json	editors/vim/config/fullrc.vim	/^function! s:dein_check_yaml2json()$/;"	f
s:dein_dir	editors/vim/config/init.vim	/^	let s:dein_dir = expand('$VARPATH\/dein').'\/repos\/github.com\/Shougo\/dein.vim'$/;"	v
s:dein_load_yaml	editors/vim/config/fullrc.vim	/^function! s:dein_load_yaml(filename) abort$/;"	f
s:descendTree	editors/vim/config/plugins/nerdtree.vim	/^function! s:descendTree(dirnode)$/;"	f
s:diff	editors/vim/config/plugins/nerdtree.vim	/^function! s:diff(node)$/;"	f
s:disable_statusline	editors/vim/themes/rafi-2016.vim	/^let s:disable_statusline =$/;"	v
s:disable_statusline	editors/vim/themes/rafi-2017.vim	/^let s:disable_statusline =$/;"	v
s:end_insert	editors/vim/config/terminal.vim	/^	let s:end_insert = "\\<Esc>[" . s:normal_shape . ' q'$/;"	v
s:end_insert	editors/vim/config/terminal.vim	/^	let s:end_insert = "\\<Esc>]1337;CursorShape=" . s:normal_shape . "\\x7"$/;"	v
s:end_insert	editors/vim/config/terminal.vim	/^	let s:end_insert = "\\<Esc>]50;CursorShape=" . s:normal_shape . "\\x7"$/;"	v
s:end_insert	editors/vim/config/terminal.vim	/^	let s:end_insert = s:tmux_wrap(s:end_insert)$/;"	v
s:execute_system_associated	editors/vim/config/plugins/nerdtree.vim	/^function! s:execute_system_associated(filenode)$/;"	f
s:find_in_path	editors/vim/config/plugins/nerdtree.vim	/^function! s:find_in_path(node)$/;"	f
s:get_containing_dir	editors/vim/config/plugins/nerdtree.vim	/^function! s:get_containing_dir(node)$/;"	f
s:get_selection	editors/vim/config/mappings.vim	/^function! s:get_selection(cmdtype) "{{{$/;"	f
s:get_selection	editors/vim/config/plugins/all.vim	/^	function! s:get_selection(cmdtype)$/;"	f
s:goyo_enter	editors/vim/config/plugins/goyo.vim	/^function! s:goyo_enter()$/;"	f
s:goyo_leave	editors/vim/config/plugins/goyo.vim	/^function! s:goyo_leave()$/;"	f
s:grep_dir	editors/vim/config/plugins/nerdtree.vim	/^function! s:grep_dir(node)$/;"	f
s:hue_1	editors/vim/themes/one.vim	/^    let s:hue_1  = '0184bc' " cyan$/;"	v
s:hue_1	editors/vim/themes/one.vim	/^    let s:hue_1  = '56b6c2' " cyan$/;"	v
s:hue_2	editors/vim/themes/one.vim	/^    let s:hue_2  = '4078f2' " blue$/;"	v
s:hue_2	editors/vim/themes/one.vim	/^    let s:hue_2  = '61afef' " blue$/;"	v
s:hue_3	editors/vim/themes/one.vim	/^    let s:hue_3  = 'a626a4' " purple$/;"	v
s:hue_3	editors/vim/themes/one.vim	/^    let s:hue_3  = 'c678dd' " purple$/;"	v
s:hue_4	editors/vim/themes/one.vim	/^    let s:hue_4  = '50a14f' " green$/;"	v
s:hue_4	editors/vim/themes/one.vim	/^    let s:hue_4  = '98c379' " green$/;"	v
s:hue_5	editors/vim/themes/one.vim	/^    let s:hue_5   = 'e06c75' " red 1$/;"	v
s:hue_5	editors/vim/themes/one.vim	/^    let s:hue_5   = 'e45649' " red 1$/;"	v
s:hue_5_2	editors/vim/themes/one.vim	/^    let s:hue_5_2 = 'be5046' " red 2$/;"	v
s:hue_5_2	editors/vim/themes/one.vim	/^    let s:hue_5_2 = 'ca1243' " red 2$/;"	v
s:hue_6	editors/vim/themes/one.vim	/^    let s:hue_6   = '986801' " orange 1$/;"	v
s:hue_6	editors/vim/themes/one.vim	/^    let s:hue_6   = 'd19a66' " orange 1$/;"	v
s:hue_6_2	editors/vim/themes/one.vim	/^    let s:hue_6_2 = 'c18401' " orange 2$/;"	v
s:hue_6_2	editors/vim/themes/one.vim	/^    let s:hue_6_2 = 'e5c07b' " orange 2$/;"	v
s:insert_shape	editors/vim/config/terminal.vim	/^	let s:insert_shape = s:cursor_shape_to_vte_shape[s:insert_shape]$/;"	v
s:insert_shape	editors/vim/config/terminal.vim	/^let s:insert_shape = 5$/;"	v
s:is_whitespace	editors/vim/config/plugins/deoplete.vim	/^function! s:is_whitespace() "{{{$/;"	f
s:is_whitespace	editors/vim/config/plugins/neocomplete.vim	/^function! s:is_whitespace() "{{{$/;"	f
s:iterm	editors/vim/config/terminal.vim	/^let s:iterm = exists('$ITERM_PROFILE') || exists('$ITERM_SESSION_ID')$/;"	v
s:iterm2	editors/vim/config/terminal.vim	/^let s:iterm2 = s:iterm && exists('$TERM_PROGRAM_VERSION') &&$/;"	v
s:jump_home	editors/vim/config/plugins/nerdtree.vim	/^function! s:jump_home()$/;"	f
s:jump_project_root	editors/vim/config/plugins/nerdtree.vim	/^function! s:jump_project_root()$/;"	f
s:konsole	editors/vim/config/terminal.vim	/^let s:konsole = exists('$KONSOLE_DBUS_SESSION') ||$/;"	v
s:modify_localvimrc	editors/vim/config/plugins/nerdtree.vim	/^function! s:modify_localvimrc()$/;"	f
s:mono_1	editors/vim/themes/one.vim	/^    let s:mono_1 = '494b53'$/;"	v
s:mono_1	editors/vim/themes/one.vim	/^    let s:mono_1 = 'abb2bf'$/;"	v
s:mono_2	editors/vim/themes/one.vim	/^    let s:mono_2 = '696c77'$/;"	v
s:mono_2	editors/vim/themes/one.vim	/^    let s:mono_2 = '828997'$/;"	v
s:mono_3	editors/vim/themes/one.vim	/^    let s:mono_3 = '5c6370'$/;"	v
s:mono_3	editors/vim/themes/one.vim	/^    let s:mono_3 = 'a0a1a7'$/;"	v
s:mono_4	editors/vim/themes/one.vim	/^    let s:mono_4 = '4b5263'$/;"	v
s:mono_4	editors/vim/themes/one.vim	/^    let s:mono_4 = 'c2c2c3'$/;"	v
s:nerdtree_settings	editors/vim/config/plugins/nerdtree.vim	/^function! s:nerdtree_settings() abort$/;"	f
s:normal_shape	editors/vim/config/terminal.vim	/^	let s:normal_shape = s:cursor_shape_to_vte_shape[s:normal_shape]$/;"	v
s:normal_shape	editors/vim/config/terminal.vim	/^let s:normal_shape = 0$/;"	v
s:openFile	editors/vim/config/plugins/nerdtree.vim	/^function! s:openFile(filenode)$/;"	f
s:path	editors/vim/config/fullrc.vim	/^let s:path = expand('$VARPATH\/dein')$/;"	v
s:plugins_path	editors/vim/config/fullrc.vim	/^let s:plugins_path = expand('$VIMPATH\/config\/plugins.yaml')$/;"	v
s:pmenu	editors/vim/themes/one.vim	/^    let s:pmenu        = '333841'$/;"	v
s:pmenu	editors/vim/themes/one.vim	/^    let s:pmenu        = 'dfdfdf'$/;"	v
s:preview_file	editors/vim/ftplugin/qf.vim	/^function! s:preview_file()$/;"	f
s:replace_shape	editors/vim/config/terminal.vim	/^	let s:replace_shape = s:cursor_shape_to_vte_shape[s:replace_shape]$/;"	v
s:replace_shape	editors/vim/config/terminal.vim	/^let s:replace_shape = 3$/;"	v
s:save_cpo	editors/vim/ftplugin/help.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	editors/vim/ftplugin/qf.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	editors/vim/ftplugin/vim.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	editors/vim/plugin/hlsearch.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:session_complete	editors/vim/plugin/sessions.vim	/^function! s:session_complete(A, C, P)$/;"	f
s:session_load	editors/vim/plugin/sessions.vim	/^function! s:session_load(name) abort$/;"	f
s:session_save	editors/vim/plugin/sessions.vim	/^function! s:session_save(name) abort$/;"	f
s:source_file	editors/vim/config/fullrc.vim	/^function! s:source_file(path, ...) abort$/;"	f
s:source_file	editors/vim/config/minrc.vim	/^function! s:source_file(path, ...) abort$/;"	f
s:special_grey	editors/vim/themes/one.vim	/^    let s:special_grey = '3b4048'$/;"	v
s:special_grey	editors/vim/themes/one.vim	/^    let s:special_grey = 'd3d3d3'$/;"	v
s:start_insert	editors/vim/config/terminal.vim	/^	let s:start_insert = "\\<Esc>[" . s:insert_shape . ' q'$/;"	v
s:start_insert	editors/vim/config/terminal.vim	/^	let s:start_insert = "\\<Esc>]1337;CursorShape=" . s:insert_shape . "\\x7"$/;"	v
s:start_insert	editors/vim/config/terminal.vim	/^	let s:start_insert = "\\<Esc>]50;CursorShape=" . s:insert_shape . "\\x7"$/;"	v
s:start_insert	editors/vim/config/terminal.vim	/^	let s:start_insert = s:tmux_wrap(s:start_insert)$/;"	v
s:start_replace	editors/vim/config/terminal.vim	/^	let s:start_replace = "\\<Esc>[" . s:replace_shape . ' q'$/;"	v
s:start_replace	editors/vim/config/terminal.vim	/^	let s:start_replace = "\\<Esc>]1337;CursorShape=" . s:replace_shape . "\\x7"$/;"	v
s:start_replace	editors/vim/config/terminal.vim	/^	let s:start_replace = "\\<Esc>]50;CursorShape=" . s:replace_shape . "\\x7"$/;"	v
s:start_replace	editors/vim/config/terminal.vim	/^	let s:start_replace = s:tmux_wrap(s:start_replace)$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl =" %7*%{&paste?'=':''}%*"        "| Paste symbol       | =$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.="%4*%{&ro?'':'#'}%*"            "| Modifiable symbol  | #$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.=' %1*%{badge#filename()}%*'     "| Relative supername | cor\/app.js$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.=' %<'                           "| Truncate here      |$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%( %{&fenc} %)'                "| File encoding      | utf-8$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%(%{badge#syntax()} %)%*'      "| syntax error\/warn  | E:1W:1$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%( %{badge#branch()} %)'      "| Git branch name    |  master$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%*%n'                          "| Buffer number      | 3$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%3*%2* %l\/%2c%4p%% %*'        "| Line and column    | 69:77\/ 90%$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%4*%(%{badge#trails()} %)'     "| Space and indent   | trail34$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%4*%*%( %{&ft} %)'            "| File type          |  python$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%6*%{badge#mode()}'            "| Readonly symbol    | $/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%6*%{badge#modified()}%0*'     "| Write symbol       | +$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%='                            "| Align to right     |$/;"	v
s:stl	editors/vim/themes/rafi-2015.vim	/^let s:stl.='%{badge#format()} %4*%*'      "| File format        | unix $/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl  = " %7*%{&paste ? '=' : ''}%*"         " Paste symbol$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= "%4*%(%{badge#trails('WS:%s')} %)"  " Whitespace$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= "%4*%{&readonly ? '' : '#'}%*"       " Modifide symbol$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= "%6*%{badge#modified('+')}%0*"       " Write symbol$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= ' %1*%{badge#filename()}%*'          " Filename$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= ' %<'                                " Truncate here$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%( %{&fenc} %)'                     " File encoding$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%(%{badge#syntax()} %)%*'           " syntax check$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%( %{badge#branch()} %)'           " Git branch name$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%*%n'                               " Buffer number$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%3*%2* %l\/%2c%4p%% '               " Line and column$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%4*%*%( %{&ft} %)'                 " File type$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%6*%{badge#mode()}'                 " Readonly symbol$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%='                                 " Align to right$/;"	v
s:stl	editors/vim/themes/rafi-2016.vim	/^let s:stl .= '%{badge#format()} %4*%*'           " File format$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl  = " %7*%{&paste ? '=' : ''}%*"         " Paste symbol$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= "%4*%(%{badge#trails('⤐ %s')} %)"  " Whitespace$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= "%4*%{&readonly ? '' : '#'}%*"       " Modifide symbol$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= "%6*%{badge#mode('⚠ ', 'Z')}"        " Read-only symbol$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= "%6*%{badge#modified('+')}%0*"       " Write symbol$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= ' %1*%{badge#filename()}%*'          " Filename$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= ' %<'                                " Truncate here$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%( %{&fenc} %)'                     " File encoding$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%(%{badge#syntax()} %)%*'           " syntax check$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%( %{badge#branch()} %)'           " Git branch name$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%*%n'                               " Buffer number$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%3*%2* %l\/%2c%4p%% '               " Line and column$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%4*%*%( %{&ft} %)'                 " File type$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%='                                 " Align to right$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%{badge#format()} %4*%*'           " File format$/;"	v
s:stl	editors/vim/themes/rafi-2017.vim	/^let s:stl .= '%{badge#indexing()}%*'              " Indexing tags indicator$/;"	v
s:stl_nc	editors/vim/themes/rafi-2015.vim	/^let s:stl_nc = " %{&paste?'=':''}"         "| Paste symbol       | =$/;"	v
s:stl_nc	editors/vim/themes/rafi-2015.vim	/^let s:stl_nc.= ' %{badge#filename()}'      "| Relative supername | src\/main.py$/;"	v
s:stl_nc	editors/vim/themes/rafi-2015.vim	/^let s:stl_nc.= '%6*%{badge#modified()}%*'  "| Write symbol       | +$/;"	v
s:stl_nc	editors/vim/themes/rafi-2015.vim	/^let s:stl_nc.= '%='                        "| Align to right     |$/;"	v
s:stl_nc	editors/vim/themes/rafi-2015.vim	/^let s:stl_nc.= '%{&ft} '                   "| File type          | python$/;"	v
s:stl_nc	editors/vim/themes/rafi-2015.vim	/^let s:stl_nc.= '%{badge#mode()}%n'         "| Readonly & buffer  | 7$/;"	v
s:stl_nc	editors/vim/themes/rafi-2016.vim	/^let s:stl_nc .= "%6*%{badge#modified('+')}%*"  " Write symbol$/;"	v
s:stl_nc	editors/vim/themes/rafi-2016.vim	/^let s:stl_nc .= ' %{badge#filename()}'         " Relative supername$/;"	v
s:stl_nc	editors/vim/themes/rafi-2016.vim	/^let s:stl_nc .= '%='                           " Align to right$/;"	v
s:stl_nc	editors/vim/themes/rafi-2016.vim	/^let s:stl_nc .= '%{&ft} '                      " File type$/;"	v
s:stl_nc	editors/vim/themes/rafi-2016.vim	/^let s:stl_nc = " %{badge#mode('⚒', 'Z')}%n"    " Readonly & buffer$/;"	v
s:stl_nc	editors/vim/themes/rafi-2017.vim	/^let s:stl_nc .= "%6*%{badge#modified('+')}%*"  " Write symbol$/;"	v
s:stl_nc	editors/vim/themes/rafi-2017.vim	/^let s:stl_nc .= ' %{badge#filename()}'         " Relative supername$/;"	v
s:stl_nc	editors/vim/themes/rafi-2017.vim	/^let s:stl_nc .= '%='                           " Align to right$/;"	v
s:stl_nc	editors/vim/themes/rafi-2017.vim	/^let s:stl_nc .= '%{&ft} '                      " File type$/;"	v
s:stl_nc	editors/vim/themes/rafi-2017.vim	/^let s:stl_nc = " %{badge#mode('⚠ ', 'Z')}%n"   " Readonly & buffer$/;"	v
s:syntax_accent	editors/vim/themes/one.vim	/^    let s:syntax_accent = '526fff'$/;"	v
s:syntax_accent	editors/vim/themes/one.vim	/^    let s:syntax_accent = '528bff'$/;"	v
s:syntax_accent_2	editors/vim/themes/one.vim	/^    let s:syntax_accent_2 = '0083be'$/;"	v
s:syntax_bg	editors/vim/themes/one.vim	/^    let s:syntax_bg     = '282c34'$/;"	v
s:syntax_bg	editors/vim/themes/one.vim	/^    let s:syntax_bg     = 'fafafa'$/;"	v
s:syntax_cursor	editors/vim/themes/one.vim	/^    let s:syntax_cursor = '2c323c'$/;"	v
s:syntax_cursor	editors/vim/themes/one.vim	/^    let s:syntax_cursor = 'f0f0f0'$/;"	v
s:syntax_fg	editors/vim/themes/one.vim	/^  let s:syntax_fg = s:mono_1$/;"	v
s:syntax_fold_bg	editors/vim/themes/one.vim	/^  let s:syntax_fold_bg = s:mono_3$/;"	v
s:syntax_gutter	editors/vim/themes/one.vim	/^    let s:syntax_gutter = '636d83'$/;"	v
s:syntax_gutter	editors/vim/themes/one.vim	/^    let s:syntax_gutter = '9e9e9e'$/;"	v
s:tag_ESP	editors/vim/config/env.vim	/^let s:tag_ESP='None'$/;"	v
s:theme_reload	editors/vim/config/theme.vim	/^function! s:theme_reload(name)$/;"	f
s:tmux	editors/vim/config/terminal.vim	/^let s:tmux = exists('$TMUX')$/;"	v
s:tmux_wrap	editors/vim/config/terminal.vim	/^function! s:tmux_wrap(string)$/;"	f
s:toggle	editors/vim/plugin/hlsearch.vim	/^function! s:toggle(old, new)$/;"	f
s:toggle_verbose	editors/vim/config/mappings.vim	/^function! s:toggle_verbose()$/;"	f
s:toggle_width	editors/vim/config/plugins/nerdtree.vim	/^function! s:toggle_width()$/;"	f
s:user_plugins_path	editors/vim/config/fullrc.vim	/^let s:user_plugins_path = expand('$VIMPATH\/config\/local.plugins.yaml')$/;"	v
s:vertsplit	editors/vim/themes/one.vim	/^    let s:vertsplit    = '181a1f'$/;"	v
s:vertsplit	editors/vim/themes/one.vim	/^    let s:vertsplit    = 'e7e9e1'$/;"	v
s:visual_grey	editors/vim/themes/one.vim	/^    let s:visual_grey  = '3e4452'$/;"	v
s:visual_grey	editors/vim/themes/one.vim	/^    let s:visual_grey  = 'd0d0d0'$/;"	v
s:yank_path	editors/vim/config/plugins/nerdtree.vim	/^function! s:yank_path(node)$/;"	f
sa	editors/vim/config/plugins/all.vim	/^	map <silent>sa <Plug>(operator-surround-append)$/;"	m
saa	editors/vim/config/plugins/all.vim	/^	nmap <silent>saa <Plug>(operator-surround-append)<Plug>(textobj-multiblock-i)$/;"	m
safe_dump	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def safe_dump(data, stream=None, **kwds):$/;"	f
safe_dump	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def safe_dump(data, stream=None, **kwds):$/;"	f
safe_dump_all	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def safe_dump_all(documents, stream=None, **kwds):$/;"	f
safe_dump_all	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def safe_dump_all(documents, stream=None, **kwds):$/;"	f
safe_load	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def safe_load(stream):$/;"	f
safe_load	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def safe_load(stream):$/;"	f
safe_load_all	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def safe_load_all(stream):$/;"	f
safe_load_all	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def safe_load_all(stream):$/;"	f
save_indent	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def save_indent(TokenClass, start=False):$/;"	f
save_possible_simple_key	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def save_possible_simple_key(self):$/;"	m	class:Scanner
save_possible_simple_key	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def save_possible_simple_key(self):$/;"	m	class:Scanner
saved	src/dev/tmux/mode-tree.c	/^	struct mode_tree_list	  saved;$/;"	m	struct:mode_tree_data	typeref:struct:mode_tree_list	file:
saved_cell	src/dev/tmux/tmux.h	/^	struct grid_cell saved_cell;$/;"	m	struct:window_pane	typeref:struct:grid_cell
saved_cx	src/dev/tmux/tmux.h	/^	u_int		 saved_cx;$/;"	m	struct:window_pane	typeref:typename:u_int
saved_cy	src/dev/tmux/tmux.h	/^	u_int		 saved_cy;$/;"	m	struct:window_pane	typeref:typename:u_int
saved_grid	src/dev/tmux/tmux.h	/^	struct grid	*saved_grid;$/;"	m	struct:window_pane	typeref:struct:grid *
saved_layout_cell	src/dev/tmux/tmux.h	/^	struct layout_cell *saved_layout_cell;$/;"	m	struct:window_pane	typeref:struct:layout_cell *
saved_layout_root	src/dev/tmux/tmux.h	/^	struct layout_cell *saved_layout_root;$/;"	m	struct:window	typeref:struct:layout_cell *
sbindir	src/dev/tmux/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/dev/tmux/Makefile.in	/^sbindir = @sbindir@$/;"	m
scan	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def scan(stream, Loader=Loader):$/;"	f
scan	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def scan(stream, Loader=Loader):$/;"	f
scan	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def scan(self):$/;"	m	class:CanonicalScanner
scan	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def scan(self):$/;"	m	class:CanonicalScanner
scan_	src/dev/ninja/src/build.h	/^  DependencyScan scan_;$/;"	m	struct:Builder	typeref:typename:DependencyScan
scan_	src/dev/ninja/src/disk_interface_test.cc	/^  DependencyScan scan_;$/;"	m	struct:__anonebbddeae0110::StatTest	typeref:typename:DependencyScan	file:
scan_	src/dev/ninja/src/graph_test.cc	/^  DependencyScan scan_;$/;"	m	struct:GraphTest	typeref:typename:DependencyScan	file:
scan_alias	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def scan_alias(self):$/;"	m	class:CanonicalScanner
scan_alias	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def scan_alias(self):$/;"	m	class:CanonicalScanner
scan_anchor	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_anchor(self, TokenClass):$/;"	m	class:Scanner
scan_anchor	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_anchor(self, TokenClass):$/;"	m	class:Scanner
scan_block_scalar	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_block_scalar(self, style):$/;"	m	class:Scanner
scan_block_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_block_scalar(self, style):$/;"	m	class:Scanner
scan_block_scalar_breaks	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_block_scalar_breaks(self, indent):$/;"	m	class:Scanner
scan_block_scalar_breaks	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_block_scalar_breaks(self, indent):$/;"	m	class:Scanner
scan_block_scalar_ignored_line	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_block_scalar_ignored_line(self, start_mark):$/;"	m	class:Scanner
scan_block_scalar_ignored_line	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_block_scalar_ignored_line(self, start_mark):$/;"	m	class:Scanner
scan_block_scalar_indentation	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_block_scalar_indentation(self):$/;"	m	class:Scanner
scan_block_scalar_indentation	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_block_scalar_indentation(self):$/;"	m	class:Scanner
scan_block_scalar_indicators	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_block_scalar_indicators(self, start_mark):$/;"	m	class:Scanner
scan_block_scalar_indicators	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_block_scalar_indicators(self, start_mark):$/;"	m	class:Scanner
scan_directive	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_directive(self):$/;"	m	class:Scanner
scan_directive	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_directive(self):$/;"	m	class:Scanner
scan_directive	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def scan_directive(self):$/;"	m	class:CanonicalScanner
scan_directive	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def scan_directive(self):$/;"	m	class:CanonicalScanner
scan_directive_ignored_line	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_directive_ignored_line(self, start_mark):$/;"	m	class:Scanner
scan_directive_ignored_line	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_directive_ignored_line(self, start_mark):$/;"	m	class:Scanner
scan_directive_name	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_directive_name(self, start_mark):$/;"	m	class:Scanner
scan_directive_name	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_directive_name(self, start_mark):$/;"	m	class:Scanner
scan_flow_scalar	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_flow_scalar(self, style):$/;"	m	class:Scanner
scan_flow_scalar	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_flow_scalar(self, style):$/;"	m	class:Scanner
scan_flow_scalar_breaks	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_flow_scalar_breaks(self, double, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_breaks	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_flow_scalar_breaks(self, double, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_non_spaces	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_flow_scalar_non_spaces(self, double, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_non_spaces	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_flow_scalar_non_spaces(self, double, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_spaces	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_flow_scalar_spaces(self, double, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_spaces	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_flow_scalar_spaces(self, double, start_mark):$/;"	m	class:Scanner
scan_line_break	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_line_break(self):$/;"	m	class:Scanner
scan_line_break	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_line_break(self):$/;"	m	class:Scanner
scan_plain	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_plain(self):$/;"	m	class:Scanner
scan_plain	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_plain(self):$/;"	m	class:Scanner
scan_plain_spaces	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_plain_spaces(self, indent, start_mark):$/;"	m	class:Scanner
scan_plain_spaces	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_plain_spaces(self, indent, start_mark):$/;"	m	class:Scanner
scan_scalar	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def scan_scalar(self):$/;"	m	class:CanonicalScanner
scan_scalar	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def scan_scalar(self):$/;"	m	class:CanonicalScanner
scan_tag	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_tag(self):$/;"	m	class:Scanner
scan_tag	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_tag(self):$/;"	m	class:Scanner
scan_tag	meta/dotbot/lib/pyyaml/tests/lib/canonical.py	/^    def scan_tag(self):$/;"	m	class:CanonicalScanner
scan_tag	meta/dotbot/lib/pyyaml/tests/lib3/canonical.py	/^    def scan_tag(self):$/;"	m	class:CanonicalScanner
scan_tag_directive_handle	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_tag_directive_handle(self, start_mark):$/;"	m	class:Scanner
scan_tag_directive_handle	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_tag_directive_handle(self, start_mark):$/;"	m	class:Scanner
scan_tag_directive_prefix	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_tag_directive_prefix(self, start_mark):$/;"	m	class:Scanner
scan_tag_directive_prefix	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_tag_directive_prefix(self, start_mark):$/;"	m	class:Scanner
scan_tag_directive_value	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_tag_directive_value(self, start_mark):$/;"	m	class:Scanner
scan_tag_directive_value	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_tag_directive_value(self, start_mark):$/;"	m	class:Scanner
scan_tag_handle	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_tag_handle(self, name, start_mark):$/;"	m	class:Scanner
scan_tag_handle	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_tag_handle(self, name, start_mark):$/;"	m	class:Scanner
scan_tag_uri	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_tag_uri(self, name, start_mark):$/;"	m	class:Scanner
scan_tag_uri	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_tag_uri(self, name, start_mark):$/;"	m	class:Scanner
scan_to_next_token	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_to_next_token(self):$/;"	m	class:Scanner
scan_to_next_token	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_to_next_token(self):$/;"	m	class:Scanner
scan_uri_escapes	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_uri_escapes(self, name, start_mark):$/;"	m	class:Scanner
scan_uri_escapes	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_uri_escapes(self, name, start_mark):$/;"	m	class:Scanner
scan_yaml_directive_number	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_yaml_directive_number(self, start_mark):$/;"	m	class:Scanner
scan_yaml_directive_number	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_yaml_directive_number(self, start_mark):$/;"	m	class:Scanner
scan_yaml_directive_value	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def scan_yaml_directive_value(self, start_mark):$/;"	m	class:Scanner
scan_yaml_directive_value	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def scan_yaml_directive_value(self, start_mark):$/;"	m	class:Scanner
scope	src/dev/tmux/tmux.h	/^	enum options_table_scope  scope;$/;"	m	struct:options_table_entry	typeref:enum:options_table_scope
scpp	shells/general/functions.bash	/^function scpp() {$/;"	f
scpp	shells/zsh/functions.zsh	/^function scpp() {$/;"	f
screen	src/dev/tmux/logo/tmux-logo-1-color.svg	/^                <path d="M83,70 L83,0 L77,0 L77,146 L83,146 L83,76 L160,76 L160,70 L83,70 Z M0,1/;"	i
screen	src/dev/tmux/logo/tmux-logo.svg	/^                <path d="M83,70 L83,0 L77,0 L77,146 L83,146 L83,76 L160,76 L160,70 L83,70 Z M0,1/;"	i
screen	src/dev/tmux/logo/tmux-logomark.svg	/^            <path d="M83,70 L83,0 L77,0 L77,146 L83,146 L83,76 L160,76 L160,70 L83,70 Z M0,15.00/;"	i
screen	src/dev/tmux/mode-tree.c	/^	struct screen		  screen;$/;"	m	struct:mode_tree_data	typeref:struct:screen	file:
screen	src/dev/tmux/tmux.h	/^	struct screen	*screen;$/;"	m	struct:window_pane	typeref:struct:screen *
screen	src/dev/tmux/tmux.h	/^struct screen {$/;"	s
screen	src/dev/tmux/window-clock.c	/^	struct screen	        screen;$/;"	m	struct:window_clock_mode_data	typeref:struct:screen	file:
screen	src/dev/tmux/window-copy.c	/^	struct screen	 screen;$/;"	m	struct:window_copy_mode_data	typeref:struct:screen	file:
screen_check_selection	src/dev/tmux/screen.c	/^screen_check_selection(struct screen *s, u_int px, u_int py)$/;"	f	typeref:typename:int
screen_clear_selection	src/dev/tmux/screen.c	/^screen_clear_selection(struct screen *s)$/;"	f	typeref:typename:void
screen_free	src/dev/tmux/screen.c	/^screen_free(struct screen *s)$/;"	f	typeref:typename:void
screen_hide_selection	src/dev/tmux/screen.c	/^screen_hide_selection(struct screen *s)$/;"	f	typeref:typename:void
screen_hlimit	src/dev/tmux/tmux.h	/^#define screen_hlimit(/;"	d
screen_hsize	src/dev/tmux/tmux.h	/^#define screen_hsize(/;"	d
screen_init	src/dev/tmux/screen.c	/^screen_init(struct screen *s, u_int sx, u_int sy, u_int hlimit)$/;"	f	typeref:typename:void
screen_redraw_cell_border	src/dev/tmux/screen-redraw.c	/^screen_redraw_cell_border(struct client *c, u_int px, u_int py)$/;"	f	typeref:typename:int	file:
screen_redraw_cell_border1	src/dev/tmux/screen-redraw.c	/^screen_redraw_cell_border1(struct window_pane *wp, u_int px, u_int py)$/;"	f	typeref:typename:int	file:
screen_redraw_check_cell	src/dev/tmux/screen-redraw.c	/^screen_redraw_check_cell(struct client *c, u_int px, u_int py, int pane_status,$/;"	f	typeref:typename:int	file:
screen_redraw_check_is	src/dev/tmux/screen-redraw.c	/^screen_redraw_check_is(u_int px, u_int py, int type, int pane_status,$/;"	f	typeref:typename:int	file:
screen_redraw_draw_borders	src/dev/tmux/screen-redraw.c	/^screen_redraw_draw_borders(struct client *c, int status, int pane_status,$/;"	f	typeref:typename:void	file:
screen_redraw_draw_number	src/dev/tmux/screen-redraw.c	/^screen_redraw_draw_number(struct client *c, struct window_pane *wp, u_int top)$/;"	f	typeref:typename:void	file:
screen_redraw_draw_pane_status	src/dev/tmux/screen-redraw.c	/^screen_redraw_draw_pane_status(struct client *c, int pane_status)$/;"	f	typeref:typename:void	file:
screen_redraw_draw_panes	src/dev/tmux/screen-redraw.c	/^screen_redraw_draw_panes(struct client *c, u_int top)$/;"	f	typeref:typename:void	file:
screen_redraw_draw_status	src/dev/tmux/screen-redraw.c	/^screen_redraw_draw_status(struct client *c, u_int top)$/;"	f	typeref:typename:void	file:
screen_redraw_make_pane_status	src/dev/tmux/screen-redraw.c	/^screen_redraw_make_pane_status(struct client *c, struct window *w,$/;"	f	typeref:typename:int	file:
screen_redraw_pane	src/dev/tmux/screen-redraw.c	/^screen_redraw_pane(struct client *c, struct window_pane *wp)$/;"	f	typeref:typename:void
screen_redraw_screen	src/dev/tmux/screen-redraw.c	/^screen_redraw_screen(struct client *c, int draw_panes, int draw_status,$/;"	f	typeref:typename:void
screen_redraw_update	src/dev/tmux/screen-redraw.c	/^screen_redraw_update(struct client *c)$/;"	f	typeref:typename:void
screen_reflow	src/dev/tmux/screen.c	/^screen_reflow(struct screen *s, u_int new_x)$/;"	f	typeref:typename:void	file:
screen_reinit	src/dev/tmux/screen.c	/^screen_reinit(struct screen *s)$/;"	f	typeref:typename:void
screen_reset_tabs	src/dev/tmux/screen.c	/^screen_reset_tabs(struct screen *s)$/;"	f	typeref:typename:void
screen_resize	src/dev/tmux/screen.c	/^screen_resize(struct screen *s, u_int sx, u_int sy, int reflow)$/;"	f	typeref:typename:void
screen_resize_x	src/dev/tmux/screen.c	/^screen_resize_x(struct screen *s, u_int sx)$/;"	f	typeref:typename:void	file:
screen_resize_y	src/dev/tmux/screen.c	/^screen_resize_y(struct screen *s, u_int sy)$/;"	f	typeref:typename:void	file:
screen_sel	src/dev/tmux/tmux.h	/^struct screen_sel {$/;"	s
screen_select_cell	src/dev/tmux/screen.c	/^screen_select_cell(struct screen *s, struct grid_cell *dst,$/;"	f	typeref:typename:void
screen_set_cursor_colour	src/dev/tmux/screen.c	/^screen_set_cursor_colour(struct screen *s, const char *colour)$/;"	f	typeref:typename:void
screen_set_cursor_style	src/dev/tmux/screen.c	/^screen_set_cursor_style(struct screen *s, u_int style)$/;"	f	typeref:typename:void
screen_set_selection	src/dev/tmux/screen.c	/^screen_set_selection(struct screen *s, u_int sx, u_int sy,$/;"	f	typeref:typename:void
screen_set_title	src/dev/tmux/screen.c	/^screen_set_title(struct screen *s, const char *title)$/;"	f	typeref:typename:void
screen_size_x	src/dev/tmux/tmux.h	/^#define screen_size_x(/;"	d
screen_size_y	src/dev/tmux/tmux.h	/^#define screen_size_y(/;"	d
screen_write_alignmenttest	src/dev/tmux/screen-write.c	/^screen_write_alignmenttest(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void
screen_write_backspace	src/dev/tmux/screen-write.c	/^screen_write_backspace(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void
screen_write_box	src/dev/tmux/screen-write.c	/^screen_write_box(struct screen_write_ctx *ctx, u_int nx, u_int ny)$/;"	f	typeref:typename:void
screen_write_carriagereturn	src/dev/tmux/screen-write.c	/^screen_write_carriagereturn(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void
screen_write_cell	src/dev/tmux/screen-write.c	/^screen_write_cell(struct screen_write_ctx *ctx, const struct grid_cell *gc)$/;"	f	typeref:typename:void
screen_write_clearcharacter	src/dev/tmux/screen-write.c	/^screen_write_clearcharacter(struct screen_write_ctx *ctx, u_int nx, u_int bg)$/;"	f	typeref:typename:void
screen_write_clearendofline	src/dev/tmux/screen-write.c	/^screen_write_clearendofline(struct screen_write_ctx *ctx, u_int bg)$/;"	f	typeref:typename:void
screen_write_clearendofscreen	src/dev/tmux/screen-write.c	/^screen_write_clearendofscreen(struct screen_write_ctx *ctx, u_int bg)$/;"	f	typeref:typename:void
screen_write_clearhistory	src/dev/tmux/screen-write.c	/^screen_write_clearhistory(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void
screen_write_clearline	src/dev/tmux/screen-write.c	/^screen_write_clearline(struct screen_write_ctx *ctx, u_int bg)$/;"	f	typeref:typename:void
screen_write_clearscreen	src/dev/tmux/screen-write.c	/^screen_write_clearscreen(struct screen_write_ctx *ctx, u_int bg)$/;"	f	typeref:typename:void
screen_write_clearstartofline	src/dev/tmux/screen-write.c	/^screen_write_clearstartofline(struct screen_write_ctx *ctx, u_int bg)$/;"	f	typeref:typename:void
screen_write_clearstartofscreen	src/dev/tmux/screen-write.c	/^screen_write_clearstartofscreen(struct screen_write_ctx *ctx, u_int bg)$/;"	f	typeref:typename:void
screen_write_cnputs	src/dev/tmux/screen-write.c	/^screen_write_cnputs(struct screen_write_ctx *ctx, ssize_t maxlen,$/;"	f	typeref:typename:void
screen_write_collect_add	src/dev/tmux/screen-write.c	/^screen_write_collect_add(struct screen_write_ctx *ctx,$/;"	f	typeref:typename:void
screen_write_collect_clear	src/dev/tmux/screen-write.c	/^screen_write_collect_clear(struct screen_write_ctx *ctx, u_int y, u_int n)$/;"	f	typeref:typename:void	file:
screen_write_collect_end	src/dev/tmux/screen-write.c	/^screen_write_collect_end(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void
screen_write_collect_flush	src/dev/tmux/screen-write.c	/^screen_write_collect_flush(struct screen_write_ctx *ctx, int scroll_only)$/;"	f	typeref:typename:void	file:
screen_write_collect_item	src/dev/tmux/screen-write.c	/^struct screen_write_collect_item {$/;"	s	file:
screen_write_collect_line	src/dev/tmux/screen-write.c	/^struct screen_write_collect_line {$/;"	s	file:
screen_write_collect_scroll	src/dev/tmux/screen-write.c	/^screen_write_collect_scroll(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void	file:
screen_write_combine	src/dev/tmux/screen-write.c	/^screen_write_combine(struct screen_write_ctx *ctx, const struct utf8_data *ud,$/;"	f	typeref:typename:const struct grid_cell *	file:
screen_write_copy	src/dev/tmux/screen-write.c	/^screen_write_copy(struct screen_write_ctx *ctx, struct screen *src, u_int px,$/;"	f	typeref:typename:void
screen_write_cstrlen	src/dev/tmux/screen-write.c	/^screen_write_cstrlen(const char *fmt, ...)$/;"	f	typeref:typename:size_t
screen_write_ctx	src/dev/tmux/tmux.h	/^struct screen_write_ctx {$/;"	s
screen_write_cursordown	src/dev/tmux/screen-write.c	/^screen_write_cursordown(struct screen_write_ctx *ctx, u_int ny)$/;"	f	typeref:typename:void
screen_write_cursorleft	src/dev/tmux/screen-write.c	/^screen_write_cursorleft(struct screen_write_ctx *ctx, u_int nx)$/;"	f	typeref:typename:void
screen_write_cursormove	src/dev/tmux/screen-write.c	/^screen_write_cursormove(struct screen_write_ctx *ctx, u_int px, u_int py)$/;"	f	typeref:typename:void
screen_write_cursorright	src/dev/tmux/screen-write.c	/^screen_write_cursorright(struct screen_write_ctx *ctx, u_int nx)$/;"	f	typeref:typename:void
screen_write_cursorup	src/dev/tmux/screen-write.c	/^screen_write_cursorup(struct screen_write_ctx *ctx, u_int ny)$/;"	f	typeref:typename:void
screen_write_deletecharacter	src/dev/tmux/screen-write.c	/^screen_write_deletecharacter(struct screen_write_ctx *ctx, u_int nx, u_int bg)$/;"	f	typeref:typename:void
screen_write_deleteline	src/dev/tmux/screen-write.c	/^screen_write_deleteline(struct screen_write_ctx *ctx, u_int ny, u_int bg)$/;"	f	typeref:typename:void
screen_write_hline	src/dev/tmux/screen-write.c	/^screen_write_hline(struct screen_write_ctx *ctx, u_int nx, int left, int right)$/;"	f	typeref:typename:void
screen_write_initctx	src/dev/tmux/screen-write.c	/^screen_write_initctx(struct screen_write_ctx *ctx, struct tty_ctx *ttyctx)$/;"	f	typeref:typename:void	file:
screen_write_insertcharacter	src/dev/tmux/screen-write.c	/^screen_write_insertcharacter(struct screen_write_ctx *ctx, u_int nx, u_int bg)$/;"	f	typeref:typename:void
screen_write_insertline	src/dev/tmux/screen-write.c	/^screen_write_insertline(struct screen_write_ctx *ctx, u_int ny, u_int bg)$/;"	f	typeref:typename:void
screen_write_linefeed	src/dev/tmux/screen-write.c	/^screen_write_linefeed(struct screen_write_ctx *ctx, int wrapped, u_int bg)$/;"	f	typeref:typename:void
screen_write_mode_clear	src/dev/tmux/screen-write.c	/^screen_write_mode_clear(struct screen_write_ctx *ctx, int mode)$/;"	f	typeref:typename:void
screen_write_mode_set	src/dev/tmux/screen-write.c	/^screen_write_mode_set(struct screen_write_ctx *ctx, int mode)$/;"	f	typeref:typename:void
screen_write_nputs	src/dev/tmux/screen-write.c	/^screen_write_nputs(struct screen_write_ctx *ctx, ssize_t maxlen,$/;"	f	typeref:typename:void
screen_write_overwrite	src/dev/tmux/screen-write.c	/^screen_write_overwrite(struct screen_write_ctx *ctx, struct grid_cell *gc,$/;"	f	typeref:typename:int	file:
screen_write_pad_cell	src/dev/tmux/screen-write.c	/^static const struct grid_cell screen_write_pad_cell = {$/;"	v	typeref:typename:const struct grid_cell	file:
screen_write_preview	src/dev/tmux/screen-write.c	/^screen_write_preview(struct screen_write_ctx *ctx, struct screen *src, u_int nx,$/;"	f	typeref:typename:void
screen_write_putc	src/dev/tmux/screen-write.c	/^screen_write_putc(struct screen_write_ctx *ctx, const struct grid_cell *gcp,$/;"	f	typeref:typename:void
screen_write_puts	src/dev/tmux/screen-write.c	/^screen_write_puts(struct screen_write_ctx *ctx, const struct grid_cell *gcp,$/;"	f	typeref:typename:void
screen_write_rawstring	src/dev/tmux/screen-write.c	/^screen_write_rawstring(struct screen_write_ctx *ctx, u_char *str, u_int len)$/;"	f	typeref:typename:void
screen_write_reset	src/dev/tmux/screen-write.c	/^screen_write_reset(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void
screen_write_reverseindex	src/dev/tmux/screen-write.c	/^screen_write_reverseindex(struct screen_write_ctx *ctx, u_int bg)$/;"	f	typeref:typename:void
screen_write_scrollregion	src/dev/tmux/screen-write.c	/^screen_write_scrollregion(struct screen_write_ctx *ctx, u_int rupper,$/;"	f	typeref:typename:void
screen_write_scrollup	src/dev/tmux/screen-write.c	/^screen_write_scrollup(struct screen_write_ctx *ctx, u_int lines, u_int bg)$/;"	f	typeref:typename:void
screen_write_setselection	src/dev/tmux/screen-write.c	/^screen_write_setselection(struct screen_write_ctx *ctx, u_char *str, u_int len)$/;"	f	typeref:typename:void
screen_write_start	src/dev/tmux/screen-write.c	/^screen_write_start(struct screen_write_ctx *ctx, struct window_pane *wp,$/;"	f	typeref:typename:void
screen_write_stop	src/dev/tmux/screen-write.c	/^screen_write_stop(struct screen_write_ctx *ctx)$/;"	f	typeref:typename:void
screen_write_strlen	src/dev/tmux/screen-write.c	/^screen_write_strlen(const char *fmt, ...)$/;"	f	typeref:typename:size_t
screen_write_vline	src/dev/tmux/screen-write.c	/^screen_write_vline(struct screen_write_ctx *ctx, u_int ny, int top, int bottom)$/;"	f	typeref:typename:void
screen_write_vnputs	src/dev/tmux/screen-write.c	/^screen_write_vnputs(struct screen_write_ctx *ctx, ssize_t maxlen,$/;"	f	typeref:typename:void
script_run_helper	terminals/tmux/plugins/tpm/tests/helpers/tpm.sh	/^script_run_helper() {$/;"	f
scroll_exit	src/dev/tmux/window-copy.c	/^	int		 scroll_exit;	\/* exit on scroll to end? *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
scrolled	src/dev/tmux/tmux.h	/^	u_int			 scrolled;$/;"	m	struct:screen_write_ctx	typeref:typename:u_int
sd	editors/vim/config/plugins/all.vim	/^	map <silent>sd <Plug>(operator-surround-delete)$/;"	m
sd	editors/vim/config/plugins/all.vim	/^	nmap sd <Plug>(easymotion-s)$/;"	m
sdd	editors/vim/config/plugins/all.vim	/^	nmap <silent>sdd <Plug>(operator-surround-delete)<Plug>(textobj-multiblock-a)$/;"	m
search	src/dev/tmux/mode-tree.c	/^	char			 *search;$/;"	m	struct:mode_tree_data	typeref:typename:char *	file:
searchcb	src/dev/tmux/mode-tree.c	/^	int			 (*searchcb)(void*, void *, const char *);$/;"	m	struct:mode_tree_data	typeref:typename:int (*)(void *,void *,const char *)	file:
searchcount	src/dev/tmux/window-copy.c	/^	u_int		 searchcount;$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
searchmark	src/dev/tmux/window-copy.c	/^	bitstr_t        *searchmark;$/;"	m	struct:window_copy_mode_data	typeref:typename:bitstr_t *	file:
searcho	src/dev/tmux/window-copy.c	/^	int		 searcho;$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
searchstr	src/dev/tmux/tmux.h	/^	char		*searchstr;$/;"	m	struct:window_pane	typeref:typename:char *
searchstr	src/dev/tmux/window-copy.c	/^	char		*searchstr;$/;"	m	struct:window_copy_mode_data	typeref:typename:char *	file:
searchthis	src/dev/tmux/window-copy.c	/^	int		 searchthis;$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
searchtype	src/dev/tmux/window-copy.c	/^	int		 searchtype;$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
searchx	src/dev/tmux/window-copy.c	/^	int		 searchx;$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
searchy	src/dev/tmux/window-copy.c	/^	int		 searchy;$/;"	m	struct:window_copy_mode_data	typeref:typename:int	file:
sel	src/dev/tmux/tmux.h	/^	struct screen_sel	 sel;$/;"	m	struct:screen	typeref:struct:screen_sel
selx	src/dev/tmux/window-copy.c	/^	u_int		 selx; \/* beginning of selection *\/$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
sely	src/dev/tmux/window-copy.c	/^	u_int		 sely;$/;"	m	struct:window_copy_mode_data	typeref:typename:u_int	file:
send_keys	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def send_keys(*keys)$/;"	f	class:TerminalSession
send_string	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def send_string(str)$/;"	f	class:TerminalSession
separator	src/dev/tmux/tmux.h	/^	const char		 *separator;$/;"	m	struct:options_table_entry	typeref:typename:const char *
serialize	meta/dotbot/lib/pyyaml/ext/_yaml.pyx	/^    def serialize(self, node):$/;"	m	class:CEmitter
serialize	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def serialize(node, stream=None, Dumper=Dumper, **kwds):$/;"	f
serialize	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    def serialize(self, node):$/;"	m	class:Serializer
serialize	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def serialize(node, stream=None, Dumper=Dumper, **kwds):$/;"	f
serialize	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    def serialize(self, node):$/;"	m	class:Serializer
serialize_all	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^def serialize_all(nodes, stream=None, Dumper=Dumper,$/;"	f
serialize_all	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^def serialize_all(nodes, stream=None, Dumper=Dumper,$/;"	f
serialize_node	meta/dotbot/lib/pyyaml/lib/yaml/serializer.py	/^    def serialize_node(self, node, parent, index):$/;"	m	class:Serializer
serialize_node	meta/dotbot/lib/pyyaml/lib3/yaml/serializer.py	/^    def serialize_node(self, node, parent, index):$/;"	m	class:Serializer
server	shells/general/functions.bash	/^function server() {$/;"	f
server	shells/zsh/functions.zsh	/^function server() {$/;"	f
server_accept	src/dev/tmux/server.c	/^server_accept(int fd, short events, __unused void *data)$/;"	f	typeref:typename:void	file:
server_add_accept	src/dev/tmux/server.c	/^server_add_accept(int timeout)$/;"	f	typeref:typename:void
server_check_marked	src/dev/tmux/server.c	/^server_check_marked(void)$/;"	f	typeref:typename:int
server_check_unattached	src/dev/tmux/server-fn.c	/^server_check_unattached(void)$/;"	f	typeref:typename:void
server_child_exited	src/dev/tmux/server.c	/^server_child_exited(pid_t pid, int status)$/;"	f	typeref:typename:void	file:
server_child_signal	src/dev/tmux/server.c	/^server_child_signal(void)$/;"	f	typeref:typename:void	file:
server_child_stopped	src/dev/tmux/server.c	/^server_child_stopped(pid_t pid, int status)$/;"	f	typeref:typename:void	file:
server_clear_marked	src/dev/tmux/server.c	/^server_clear_marked(void)$/;"	f	typeref:typename:void
server_client_add_message	src/dev/tmux/server-client.c	/^server_client_add_message(struct client *c, const char *fmt, ...)$/;"	f	typeref:typename:void
server_client_assume_paste	src/dev/tmux/server-client.c	/^server_client_assume_paste(struct session *s)$/;"	f	typeref:typename:int	file:
server_client_callback_identify	src/dev/tmux/server-client.c	/^server_client_callback_identify(__unused int fd, __unused short events,$/;"	f	typeref:typename:void	file:
server_client_check_exit	src/dev/tmux/server-client.c	/^server_client_check_exit(struct client *c)$/;"	f	typeref:typename:void	file:
server_client_check_focus	src/dev/tmux/server-client.c	/^server_client_check_focus(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
server_client_check_mouse	src/dev/tmux/server-client.c	/^server_client_check_mouse(struct client *c)$/;"	f	typeref:typename:key_code	file:
server_client_check_nested	src/dev/tmux/server-client.c	/^server_client_check_nested(struct client *c)$/;"	f	typeref:typename:int
server_client_check_redraw	src/dev/tmux/server-client.c	/^server_client_check_redraw(struct client *c)$/;"	f	typeref:typename:void	file:
server_client_check_resize	src/dev/tmux/server-client.c	/^server_client_check_resize(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
server_client_clear_identify	src/dev/tmux/server-client.c	/^server_client_clear_identify(struct client *c, struct window_pane *wp)$/;"	f	typeref:typename:void
server_client_click_timer	src/dev/tmux/server-client.c	/^server_client_click_timer(__unused int fd, __unused short events, void *data)$/;"	f	typeref:typename:void	file:
server_client_command_done	src/dev/tmux/server-client.c	/^server_client_command_done(struct cmdq_item *item, __unused void *data)$/;"	f	typeref:enum:cmd_retval	file:
server_client_command_error	src/dev/tmux/server-client.c	/^server_client_command_error(struct cmdq_item *item, void *data)$/;"	f	typeref:enum:cmd_retval	file:
server_client_create	src/dev/tmux/server-client.c	/^server_client_create(int fd)$/;"	f	typeref:typename:void
server_client_detach	src/dev/tmux/server-client.c	/^server_client_detach(struct client *c, enum msgtype msgtype)$/;"	f	typeref:typename:void
server_client_dispatch	src/dev/tmux/server-client.c	/^server_client_dispatch(struct imsg *imsg, void *arg)$/;"	f	typeref:typename:void	file:
server_client_dispatch_command	src/dev/tmux/server-client.c	/^server_client_dispatch_command(struct client *c, struct imsg *imsg)$/;"	f	typeref:typename:void	file:
server_client_dispatch_identify	src/dev/tmux/server-client.c	/^server_client_dispatch_identify(struct client *c, struct imsg *imsg)$/;"	f	typeref:typename:void	file:
server_client_dispatch_shell	src/dev/tmux/server-client.c	/^server_client_dispatch_shell(struct client *c)$/;"	f	typeref:typename:void	file:
server_client_exec	src/dev/tmux/server-client.c	/^server_client_exec(struct client *c, const char *cmd)$/;"	f	typeref:typename:void
server_client_free	src/dev/tmux/server-client.c	/^server_client_free(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
server_client_get_cwd	src/dev/tmux/server-client.c	/^server_client_get_cwd(struct client *c)$/;"	f	typeref:typename:const char *
server_client_get_key_table	src/dev/tmux/server-client.c	/^server_client_get_key_table(struct client *c)$/;"	f	typeref:typename:const char *
server_client_get_path	src/dev/tmux/server-client.c	/^server_client_get_path(struct client *c, const char *file)$/;"	f	typeref:typename:char *
server_client_handle_key	src/dev/tmux/server-client.c	/^server_client_handle_key(struct client *c, key_code key)$/;"	f	typeref:typename:void
server_client_how_many	src/dev/tmux/server-client.c	/^server_client_how_many(void)$/;"	f	typeref:typename:u_int
server_client_is_default_key_table	src/dev/tmux/server-client.c	/^server_client_is_default_key_table(struct client *c, struct key_table *table)$/;"	f	typeref:typename:int	file:
server_client_loop	src/dev/tmux/server-client.c	/^server_client_loop(void)$/;"	f	typeref:typename:void
server_client_lost	src/dev/tmux/server-client.c	/^server_client_lost(struct client *c)$/;"	f	typeref:typename:void
server_client_open	src/dev/tmux/server-client.c	/^server_client_open(struct client *c, char **cause)$/;"	f	typeref:typename:int
server_client_push_stderr	src/dev/tmux/server-client.c	/^server_client_push_stderr(struct client *c)$/;"	f	typeref:typename:void
server_client_push_stdout	src/dev/tmux/server-client.c	/^server_client_push_stdout(struct client *c)$/;"	f	typeref:typename:void
server_client_redraw_timer	src/dev/tmux/server-client.c	/^server_client_redraw_timer(__unused int fd, __unused short events,$/;"	f	typeref:typename:void	file:
server_client_repeat_timer	src/dev/tmux/server-client.c	/^server_client_repeat_timer(__unused int fd, __unused short events, void *data)$/;"	f	typeref:typename:void	file:
server_client_reset_state	src/dev/tmux/server-client.c	/^server_client_reset_state(struct client *c)$/;"	f	typeref:typename:void	file:
server_client_resize_event	src/dev/tmux/server-client.c	/^server_client_resize_event(__unused int fd, __unused short events, void *data)$/;"	f	typeref:typename:void	file:
server_client_resize_force	src/dev/tmux/server-client.c	/^server_client_resize_force(struct window_pane *wp)$/;"	f	typeref:typename:int	file:
server_client_set_identify	src/dev/tmux/server-client.c	/^server_client_set_identify(struct client *c, u_int delay)$/;"	f	typeref:typename:void
server_client_set_key_table	src/dev/tmux/server-client.c	/^server_client_set_key_table(struct client *c, const char *name)$/;"	f	typeref:typename:void
server_client_set_title	src/dev/tmux/server-client.c	/^server_client_set_title(struct client *c)$/;"	f	typeref:typename:void	file:
server_client_stderr_cb	src/dev/tmux/server-client.c	/^server_client_stderr_cb(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
server_client_stdout_cb	src/dev/tmux/server-client.c	/^server_client_stdout_cb(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
server_client_suspend	src/dev/tmux/server-client.c	/^server_client_suspend(struct client *c)$/;"	f	typeref:typename:void
server_client_unref	src/dev/tmux/server-client.c	/^server_client_unref(struct client *c)$/;"	f	typeref:typename:void
server_create_socket	src/dev/tmux/server.c	/^server_create_socket(void)$/;"	f	typeref:typename:int	file:
server_destroy_pane	src/dev/tmux/server-fn.c	/^server_destroy_pane(struct window_pane *wp, int notify)$/;"	f	typeref:typename:void
server_destroy_session	src/dev/tmux/server-fn.c	/^server_destroy_session(struct session *s)$/;"	f	typeref:typename:void
server_destroy_session_group	src/dev/tmux/server-fn.c	/^server_destroy_session_group(struct session *s)$/;"	f	typeref:typename:void	file:
server_ev_accept	src/dev/tmux/server.c	/^static struct event	 server_ev_accept;$/;"	v	typeref:struct:event	file:
server_exit	src/dev/tmux/server.c	/^static int		 server_exit;$/;"	v	typeref:typename:int	file:
server_fd	src/dev/tmux/server.c	/^static int		 server_fd;$/;"	v	typeref:typename:int	file:
server_is_marked	src/dev/tmux/server.c	/^server_is_marked(struct session *s, struct winlink *wl, struct window_pane *wp)$/;"	f	typeref:typename:int
server_kill_window	src/dev/tmux/server-fn.c	/^server_kill_window(struct window *w)$/;"	f	typeref:typename:void
server_link_window	src/dev/tmux/server-fn.c	/^server_link_window(struct session *src, struct winlink *srcwl,$/;"	f	typeref:typename:int
server_lock	src/dev/tmux/server-fn.c	/^server_lock(void)$/;"	f	typeref:typename:void
server_lock_client	src/dev/tmux/server-fn.c	/^server_lock_client(struct client *c)$/;"	f	typeref:typename:void
server_lock_session	src/dev/tmux/server-fn.c	/^server_lock_session(struct session *s)$/;"	f	typeref:typename:void
server_loop	src/dev/tmux/server.c	/^server_loop(void)$/;"	f	typeref:typename:int	file:
server_next_session	src/dev/tmux/server-fn.c	/^server_next_session(struct session *s)$/;"	f	typeref:struct:session *	file:
server_proc	src/dev/tmux/server.c	/^struct tmuxproc		*server_proc;$/;"	v	typeref:struct:tmuxproc *
server_redraw_client	src/dev/tmux/server-fn.c	/^server_redraw_client(struct client *c)$/;"	f	typeref:typename:void
server_redraw_session	src/dev/tmux/server-fn.c	/^server_redraw_session(struct session *s)$/;"	f	typeref:typename:void
server_redraw_session_group	src/dev/tmux/server-fn.c	/^server_redraw_session_group(struct session *s)$/;"	f	typeref:typename:void
server_redraw_window	src/dev/tmux/server-fn.c	/^server_redraw_window(struct window *w)$/;"	f	typeref:typename:void
server_redraw_window_borders	src/dev/tmux/server-fn.c	/^server_redraw_window_borders(struct window *w)$/;"	f	typeref:typename:void
server_send_exit	src/dev/tmux/server.c	/^server_send_exit(void)$/;"	f	typeref:typename:void	file:
server_set_marked	src/dev/tmux/server.c	/^server_set_marked(struct session *s, struct winlink *wl, struct window_pane *wp)$/;"	f	typeref:typename:void
server_set_stdin_callback	src/dev/tmux/server-fn.c	/^server_set_stdin_callback(struct client *c, void (*cb)(struct client *, int,$/;"	f	typeref:typename:int
server_signal	src/dev/tmux/server.c	/^server_signal(int sig)$/;"	f	typeref:typename:void	file:
server_start	src/dev/tmux/server.c	/^server_start(struct tmuxproc *client, struct event_base *base, int lockfd,$/;"	f	typeref:typename:int
server_status_client	src/dev/tmux/server-fn.c	/^server_status_client(struct client *c)$/;"	f	typeref:typename:void
server_status_session	src/dev/tmux/server-fn.c	/^server_status_session(struct session *s)$/;"	f	typeref:typename:void
server_status_session_group	src/dev/tmux/server-fn.c	/^server_status_session_group(struct session *s)$/;"	f	typeref:typename:void
server_status_window	src/dev/tmux/server-fn.c	/^server_status_window(struct window *w)$/;"	f	typeref:typename:void
server_unlink_window	src/dev/tmux/server-fn.c	/^server_unlink_window(struct session *s, struct winlink *wl)$/;"	f	typeref:typename:void
server_unzoom_window	src/dev/tmux/server-fn.c	/^server_unzoom_window(struct window *w)$/;"	f	typeref:typename:void
server_update_socket	src/dev/tmux/server.c	/^server_update_socket(void)$/;"	f	typeref:typename:void
session	src/dev/tmux/notify.c	/^	struct session		*session;$/;"	m	struct:notify_entry	typeref:struct:session *	file:
session	src/dev/tmux/tmux.h	/^	struct session	*session;$/;"	m	struct:client	typeref:struct:session *
session	src/dev/tmux/tmux.h	/^	struct session	*session;$/;"	m	struct:winlink	typeref:struct:session *
session	src/dev/tmux/tmux.h	/^struct session {$/;"	s
session	src/dev/tmux/window-tree.c	/^	int			session;$/;"	m	struct:window_tree_itemdata	typeref:typename:int	file:
session_add_ref	src/dev/tmux/session.c	/^session_add_ref(struct session *s, const char *from)$/;"	f	typeref:typename:void
session_alive	src/dev/tmux/session.c	/^session_alive(struct session *s)$/;"	f	typeref:typename:int
session_attach	src/dev/tmux/session.c	/^session_attach(struct session *s, struct window *w, int idx, char **cause)$/;"	f	typeref:struct:winlink *
session_check_name	src/dev/tmux/session.c	/^session_check_name(const char *name)$/;"	f	typeref:typename:int
session_cmp	src/dev/tmux/session.c	/^session_cmp(struct session *s1, struct session *s2)$/;"	f	typeref:typename:int
session_create	src/dev/tmux/session.c	/^session_create(const char *prefix, const char *name, int argc, char **argv,$/;"	f	typeref:struct:session *
session_destroy	src/dev/tmux/session.c	/^session_destroy(struct session *s, const char *from)$/;"	f	typeref:typename:void
session_detach	src/dev/tmux/session.c	/^session_detach(struct session *s, struct winlink *wl)$/;"	f	typeref:typename:int
session_find	src/dev/tmux/session.c	/^session_find(const char *name)$/;"	f	typeref:struct:session *
session_find_by_id	src/dev/tmux/session.c	/^session_find_by_id(u_int id)$/;"	f	typeref:struct:session *
session_find_by_id_str	src/dev/tmux/session.c	/^session_find_by_id_str(const char *s)$/;"	f	typeref:struct:session *
session_free	src/dev/tmux/session.c	/^session_free(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
session_group	src/dev/tmux/tmux.h	/^struct session_group {$/;"	s
session_group_add	src/dev/tmux/session.c	/^session_group_add(struct session_group *sg, struct session *s)$/;"	f	typeref:typename:void
session_group_cmp	src/dev/tmux/session.c	/^session_group_cmp(struct session_group *s1, struct session_group *s2)$/;"	f	typeref:typename:int
session_group_contains	src/dev/tmux/session.c	/^session_group_contains(struct session *target)$/;"	f	typeref:struct:session_group *
session_group_count	src/dev/tmux/session.c	/^session_group_count(struct session_group *sg)$/;"	f	typeref:typename:u_int	file:
session_group_find	src/dev/tmux/session.c	/^session_group_find(const char *name)$/;"	f	typeref:struct:session_group *
session_group_new	src/dev/tmux/session.c	/^session_group_new(const char *name)$/;"	f	typeref:struct:session_group *
session_group_remove	src/dev/tmux/session.c	/^session_group_remove(struct session *s)$/;"	f	typeref:typename:void	file:
session_group_synchronize1	src/dev/tmux/session.c	/^session_group_synchronize1(struct session *target, struct session *s)$/;"	f	typeref:typename:void	file:
session_group_synchronize_from	src/dev/tmux/session.c	/^session_group_synchronize_from(struct session *target)$/;"	f	typeref:typename:void
session_group_synchronize_to	src/dev/tmux/session.c	/^session_group_synchronize_to(struct session *s)$/;"	f	typeref:typename:void
session_groups	src/dev/tmux/session.c	/^struct session_groups	session_groups;$/;"	v	typeref:struct:session_groups
session_has	src/dev/tmux/session.c	/^session_has(struct session *s, struct window *w)$/;"	f	typeref:typename:int
session_is_linked	src/dev/tmux/session.c	/^session_is_linked(struct session *s, struct window *w)$/;"	f	typeref:typename:int
session_last	src/dev/tmux/session.c	/^session_last(struct session *s)$/;"	f	typeref:typename:int
session_lock_timer	src/dev/tmux/session.c	/^session_lock_timer(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
session_new	src/dev/tmux/session.c	/^session_new(struct session *s, const char *name, int argc, char **argv,$/;"	f	typeref:struct:winlink *
session_next	src/dev/tmux/session.c	/^session_next(struct session *s, int alert)$/;"	f	typeref:typename:int
session_next_alert	src/dev/tmux/session.c	/^session_next_alert(struct winlink *wl)$/;"	f	typeref:struct:winlink *	file:
session_next_session	src/dev/tmux/session.c	/^session_next_session(struct session *s)$/;"	f	typeref:struct:session *
session_previous	src/dev/tmux/session.c	/^session_previous(struct session *s, int alert)$/;"	f	typeref:typename:int
session_previous_alert	src/dev/tmux/session.c	/^session_previous_alert(struct winlink *wl)$/;"	f	typeref:struct:winlink *	file:
session_previous_session	src/dev/tmux/session.c	/^session_previous_session(struct session *s)$/;"	f	typeref:struct:session *
session_remove_ref	src/dev/tmux/session.c	/^session_remove_ref(struct session *s, const char *from)$/;"	f	typeref:typename:void
session_renumber_windows	src/dev/tmux/session.c	/^session_renumber_windows(struct session *s)$/;"	f	typeref:typename:void
session_select	src/dev/tmux/session.c	/^session_select(struct session *s, int idx)$/;"	f	typeref:typename:int
session_set_current	src/dev/tmux/session.c	/^session_set_current(struct session *s, struct winlink *wl)$/;"	f	typeref:typename:int
session_update_activity	src/dev/tmux/session.c	/^session_update_activity(struct session *s, struct timeval *from)$/;"	f	typeref:typename:void
sessions	src/dev/tmux/session.c	/^struct sessions		sessions;$/;"	v	typeref:struct:sessions
sessionsave	editors/vim/plugin/sessions.vim	/^augroup sessionsave$/;"	a
set	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^    from sets import Set as set$/;"	x
set	src/dev/tmux/input.c	/^	int			set;$/;"	m	struct:input_cell	typeref:typename:int	file:
set	terminals/tmux/themes/one-dark.sh	/^set() {$/;"	f
setBackgroundColor	src/dev/tmux/tools/24-bit-color.sh	/^setBackgroundColor()$/;"	f
setUp	src/dev/ninja/misc/ninja_syntax_test.py	/^    def setUp(self):$/;"	m	class:TestBuild
setUp	src/dev/ninja/misc/ninja_syntax_test.py	/^    def setUp(self):$/;"	m	class:TestLineWordWrap
set_base_directory	meta/dotbot/dotbot/context.py	/^    def set_base_directory(self, base_directory):$/;"	m	class:Context
set_base_from	src/dev/tmux/etc/depcomp	/^set_base_from ()$/;"	f
set_block_scalar_indent	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def set_block_scalar_indent(TokenClass):$/;"	f
set_build_log	src/dev/ninja/src/graph.h	/^  void set_build_log(BuildLog* log) {$/;"	f	struct:DependencyScan	typeref:typename:void
set_cfg_file	src/dev/tmux/cfg.c	/^set_cfg_file(const char *path)$/;"	f	typeref:typename:void
set_default_tpm_path	terminals/tmux/plugins/tpm/tpm	/^set_default_tpm_path() {$/;"	f
set_defaults	meta/dotbot/dotbot/context.py	/^    def set_defaults(self, defaults):$/;"	m	class:Context
set_dir_from	src/dev/tmux/etc/depcomp	/^set_dir_from ()$/;"	f
set_dirty	src/dev/ninja/src/graph.h	/^  void set_dirty(bool dirty) { dirty_ = dirty; }$/;"	f	struct:Node	typeref:typename:void
set_exit_val_to_false	terminals/tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^set_exit_val_to_false() {$/;"	f
set_id	src/dev/ninja/src/graph.h	/^  void set_id(int id) { id_ = id; }$/;"	f	struct:Node	typeref:typename:void
set_in_edge	src/dev/ninja/src/graph.h	/^  void set_in_edge(Edge* edge) { in_edge_ = edge; }$/;"	f	struct:Node	typeref:typename:void
set_indent	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def set_indent(TokenClass, implicit=False):$/;"	f
set_level	meta/dotbot/dotbot/messenger/messenger.py	/^    def set_level(self, level):$/;"	m	class:Messenger
set_python_instance_state	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    def set_python_instance_state(self, instance, state):$/;"	m	class:Constructor
set_python_instance_state	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    def set_python_instance_state(self, instance, state):$/;"	m	class:Constructor
set_smart_terminal	src/dev/ninja/src/line_printer.h	/^  void set_smart_terminal(bool smart) { smart_terminal_ = smart; }$/;"	f	struct:LinePrinter	typeref:typename:void
set_tmux_conf_helper	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^set_tmux_conf_helper() {$/;"	f
set_tpm_key_bindings	terminals/tmux/plugins/tpm/tpm	/^set_tpm_key_bindings() {$/;"	f
set_tpm_path	terminals/tmux/plugins/tpm/tpm	/^set_tpm_path() {$/;"	f
setblocking	src/dev/tmux/tmux.c	/^setblocking(int fd, int state)$/;"	f	typeref:typename:void
setenv	src/dev/tmux/compat/setenv.c	/^setenv(const char *name, const char *value, __unused int overwrite)$/;"	f	typeref:typename:int
setproctitle	src/dev/tmux/compat/setproctitle.c	/^setproctitle(__unused const char *fmt, ...)$/;"	f	typeref:typename:void
setproctitle	src/dev/tmux/compat/setproctitle.c	/^setproctitle(const char *fmt, ...)$/;"	f	typeref:typename:void
setup	languages/python/pdbrc.py	/^    def setup(self, pdb):$/;"	m	class:Config
setw	terminals/tmux/themes/one-dark.sh	/^setw() {$/;"	f
sf	editors/vim/config/plugins/all.vim	/^	nmap sf <Plug>(easymotion-overwin-f)$/;"	m
sg	editors/vim/ftplugin/qf.vim	/^nnoremap <buffer> sg   <C-w><Enter><C-w>L$/;"	m
sgr_b	src/dev/tmux/tmux.h	/^	u_int		sgr_b;$/;"	m	struct:mouse_event	typeref:typename:u_int
sgr_type	src/dev/tmux/tmux.h	/^	u_int		sgr_type;$/;"	m	struct:mouse_event	typeref:typename:u_int
sh	editors/vim/config/plugins/all.vim	/^	map  sh <Plug>(easymotion-linebackward)$/;"	m
shared	src/dev/tmux/tmux.h	/^	struct cmdq_shared	*shared;$/;"	m	struct:cmdq_item	typeref:struct:cmdq_shared *
sharedstatedir	src/dev/tmux/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/dev/tmux/Makefile.in	/^sharedstatedir = @sharedstatedir@$/;"	m
shell	src/dev/tmux/tmux.h	/^	char		*shell;$/;"	m	struct:window_pane	typeref:typename:char *
shell_command	src/dev/tmux/tmux.c	/^const char	*shell_command;$/;"	v	typeref:typename:const char *
shell_escape	src/dev/ninja/configure.py	/^def shell_escape(str):$/;"	f
should_run	src/dev/ninja/src/ninja_test.cc	/^  bool should_run;$/;"	m	struct:RegisteredTest	typeref:typename:bool	file:
shove	src/zplug/Makefile	/^shove: # Grab shove from GitHub and grant execution$/;"	t
shove	src/zplug/repos/zplug/zplug/Makefile	/^shove: # Grab shove from GitHub and grant execution$/;"	t
signalcb	src/dev/tmux/proc.c	/^	void		(*signalcb)(int);$/;"	m	struct:tmuxproc	typeref:typename:void (*)(int)	file:
silently_source_all_tmux_files	terminals/tmux/plugins/tpm/scripts/source_plugins.sh	/^silently_source_all_tmux_files() {$/;"	f
since_ground	src/dev/tmux/input.c	/^	struct evbuffer	 	*since_ground;$/;"	m	struct:input_ctx	typeref:struct:evbuffer *	file:
size	src/dev/tmux/compat/imsg.h	/^	size_t			 size;$/;"	m	struct:ibuf	typeref:typename:size_t
size	src/dev/tmux/paste.c	/^	size_t		 size;$/;"	m	struct:paste_buffer	typeref:typename:size_t	file:
size	src/dev/tmux/tmux.h	/^	ssize_t	size;$/;"	m	struct:msg_stderr_data	typeref:typename:ssize_t
size	src/dev/tmux/tmux.h	/^	ssize_t	size;$/;"	m	struct:msg_stdin_data	typeref:typename:ssize_t
size	src/dev/tmux/tmux.h	/^	ssize_t	size;$/;"	m	struct:msg_stdout_data	typeref:typename:ssize_t
size	src/dev/tmux/tmux.h	/^	u_char	size;$/;"	m	struct:utf8_data	typeref:typename:u_char
size	src/dev/tmux/window-buffer.c	/^	size_t		 size;$/;"	m	struct:window_buffer_itemdata	typeref:typename:size_t	file:
sj	editors/vim/config/plugins/all.vim	/^	nmap sj :SplitjoinJoin<CR>$/;"	m
sk	editors/vim/config/plugins/all.vim	/^	nmap sk :SplitjoinSplit<CR>$/;"	m
skipped	src/dev/tmux/tmux.h	/^	u_int			 skipped;$/;"	m	struct:screen_write_ctx	typeref:typename:u_int
sl	editors/vim/config/plugins/all.vim	/^	map  sl <Plug>(easymotion-lineforward)$/;"	m
slash_bits	src/dev/ninja/src/graph.h	/^  unsigned int slash_bits() const { return slash_bits_; }$/;"	f	struct:Node	typeref:typename:unsigned int
slash_bits_	src/dev/ninja/src/graph.h	/^  unsigned int slash_bits_;$/;"	m	struct:Node	typeref:typename:unsigned int
smart_terminal_	src/dev/ninja/src/line_printer.h	/^  bool smart_terminal_;$/;"	m	struct:LinePrinter	typeref:typename:bool
sn	editors/vim/config/plugins/all.vim	/^	map  sn <Plug>(easymotion-next)$/;"	m
snprintf	src/dev/ninja/src/util.h	/^#define snprintf /;"	d
socket_path	src/dev/tmux/tmux.c	/^const char	*socket_path;$/;"	v	typeref:typename:const char *
something	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^def something(TokenClass):$/;"	f
sort_list	src/dev/tmux/mode-tree.c	/^	const char		**sort_list;$/;"	m	struct:mode_tree_data	typeref:typename:const char **	file:
sort_size	src/dev/tmux/mode-tree.c	/^	u_int			  sort_size;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
sort_type	src/dev/tmux/mode-tree.c	/^	u_int			  sort_type;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
source	src/dev/tmux/tmux.h	/^	struct cmd_entry_flag	 source;$/;"	m	struct:cmd_entry	typeref:struct:cmd_entry_flag
source	src/dev/tmux/tmux.h	/^	struct cmd_find_state	 source;$/;"	m	struct:cmdq_item	typeref:struct:cmd_find_state
source_plugins	terminals/tmux/plugins/tpm/scripts/source_plugins.sh	/^source_plugins() {$/;"	f
source_plugins	terminals/tmux/plugins/tpm/tpm	/^source_plugins() {$/;"	f
sourcedir	src/dev/ninja/configure.py	/^sourcedir = os.path.dirname(os.path.realpath(__file__))$/;"	v
sp	editors/vim/config/plugins/all.vim	/^	map  sp <Plug>(easymotion-prev)$/;"	m
spectrum_ls	shells/zsh/theme/spectrum.zsh	/^function spectrum_ls() {$/;"	f
sr	editors/vim/config/plugins/all.vim	/^	map <silent>sr <Plug>(operator-surround-replace)$/;"	m
src	src/dev/ninja/configure.py	/^def src(filename):$/;"	f
src_obj_pairs	src/dev/ninja/misc/write_fake_manifests.py	/^    def src_obj_pairs(self, path, name):$/;"	m	class:GenRandom
srcdir	src/dev/tmux/Makefile	/^srcdir = .$/;"	m
srcdir	src/dev/tmux/Makefile.in	/^srcdir = @srcdir@$/;"	m
srr	editors/vim/config/plugins/all.vim	/^	nmap <silent>srr <Plug>(operator-surround-replace)<Plug>(textobj-multiblock-a)$/;"	m
ss	editors/vim/config/plugins/all.vim	/^	nmap ss <Plug>(easymotion-s2)$/;"	m
st	editors/vim/ftplugin/qf.vim	/^nnoremap <buffer> st   <C-w><CR><C-w>T$/;"	m
stale_possible_simple_keys	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def stale_possible_simple_keys(self):$/;"	m	class:Scanner
stale_possible_simple_keys	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def stale_possible_simple_keys(self):$/;"	m	class:Scanner
start_	src/dev/ninja/src/metrics.h	/^  int64_t start_;$/;"	m	struct:ScopedMetric	typeref:typename:int64_t
start_cfg	src/dev/tmux/cfg.c	/^start_cfg(void)$/;"	f	typeref:typename:void
start_client	src/dev/tmux/tmux.h	/^	struct client		*start_client;$/;"	m	struct:window_choose_data	typeref:struct:client *
start_dir_	src/dev/ninja/src/test.h	/^  string start_dir_;$/;"	m	struct:ScopedTempDir	typeref:typename:string
start_session	src/dev/tmux/tmux.h	/^	struct session		*start_session;$/;"	m	struct:window_choose_data	typeref:struct:session *
start_time	src/dev/ninja/src/build_log.h	/^    int start_time;$/;"	m	struct:BuildLog::LogEntry	typeref:typename:int
start_time	src/dev/tmux/tmux.c	/^struct timeval	 start_time;$/;"	v	typeref:struct:timeval
start_time_millis_	src/dev/ninja/src/build.h	/^  int64_t start_time_millis_;$/;"	m	struct:BuildStatus	typeref:typename:int64_t
started_	src/dev/ninja/src/metrics.h	/^  uint64_t started_;$/;"	m	struct:Stopwatch	typeref:typename:uint64_t
started_edges_	src/dev/ninja/src/build.h	/^  int started_edges_, finished_edges_, total_edges_;$/;"	m	struct:BuildStatus	typeref:typename:int
stat_error	src/dev/ninja/src/test.h	/^    string stat_error;  \/\/ If mtime is -1.$/;"	m	struct:VirtualFileSystem::Entry	typeref:typename:string
state	src/dev/ninja/src/manifest_parser_test.cc	/^  State state;$/;"	m	struct:ParserTest	typeref:typename:State	file:
state	src/dev/tmux/input.c	/^	const struct input_state       *state;$/;"	m	struct:input_transition	typeref:typename:const struct input_state *	file:
state	src/dev/tmux/input.c	/^	const struct input_state *state;$/;"	m	struct:input_ctx	typeref:typename:const struct input_state *	file:
state	src/dev/tmux/tmux.h	/^	} state;$/;"	m	struct:job	typeref:enum:job::__anonc903038b0403
state_	src/dev/ninja/src/build.h	/^  State* state_;$/;"	m	struct:Builder	typeref:typename:State *
state_	src/dev/ninja/src/clean.h	/^  State* state_;$/;"	m	struct:Cleaner	typeref:typename:State *
state_	src/dev/ninja/src/graph.h	/^  State* state_;$/;"	m	struct:ImplicitDepLoader	typeref:typename:State *
state_	src/dev/ninja/src/manifest_parser.h	/^  State* state_;$/;"	m	struct:ManifestParser	typeref:typename:State *
state_	src/dev/ninja/src/ninja.cc	/^  State state_;$/;"	m	struct:__anon193baac40110::NinjaMain	typeref:typename:State	file:
state_	src/dev/ninja/src/test.h	/^  State state_;$/;"	m	struct:StateTestWithBuiltinRules	typeref:typename:State
static	src/dev/tmux/configure.ac	/^	static,$/;"	e
stats_	src/dev/ninja/src/disk_interface_test.cc	/^  mutable vector<string> stats_;$/;"	m	struct:__anonebbddeae0110::StatTest	typeref:typename:vector<string>	file:
status	src/dev/ninja/src/build.h	/^    ExitStatus status;$/;"	m	struct:CommandRunner::Result	typeref:typename:ExitStatus
status	src/dev/tmux/format.c	/^	int			 status;$/;"	m	struct:format_job	typeref:typename:int	file:
status	src/dev/tmux/tmux.h	/^	int			 status;$/;"	m	struct:job	typeref:typename:int
status	src/dev/tmux/tmux.h	/^	int		 status;$/;"	m	struct:window_pane	typeref:typename:int
status	src/dev/tmux/tmux.h	/^	struct screen	 status;$/;"	m	struct:client	typeref:struct:screen
status-bar	src/dev/tmux/logo/tmux-logo-1-color.svg	/^                <g id="status-bar" transform="translate(0.000000, 144.000000)">$/;"	i
status-bar	src/dev/tmux/logo/tmux-logo.svg	/^                <g id="status-bar" fill="#1BB91F">$/;"	i
status-bar	src/dev/tmux/logo/tmux-logomark.svg	/^            <g id="status-bar" transform="translate(0.000000, 116.000000)" fill="#1BB91F" sketch/;"	i
status_	src/dev/ninja/src/build.h	/^  BuildStatus* status_;$/;"	m	struct:Builder	typeref:typename:BuildStatus *
status_	src/dev/ninja/src/build_test.cc	/^  BuildStatus status_;$/;"	m	struct:BuildTest	typeref:typename:BuildStatus	file:
status_	src/dev/ninja/src/clean.h	/^  int status_;$/;"	m	struct:Cleaner	typeref:typename:int
status_at_line	src/dev/tmux/status.c	/^status_at_line(struct client *c)$/;"	f	typeref:typename:int
status_cell	src/dev/tmux/tmux.h	/^	struct grid_cell status_cell;$/;"	m	struct:winlink	typeref:struct:grid_cell
status_get_window_at	src/dev/tmux/status.c	/^status_get_window_at(struct client *c, u_int x)$/;"	f	typeref:struct:window *
status_known	src/dev/ninja/src/graph.h	/^  bool status_known() const {$/;"	f	struct:Node	typeref:typename:bool
status_message_callback	src/dev/tmux/status.c	/^status_message_callback(__unused int fd, __unused short event, void *data)$/;"	f	typeref:typename:void	file:
status_message_clear	src/dev/tmux/status.c	/^status_message_clear(struct client *c)$/;"	f	typeref:typename:void
status_message_redraw	src/dev/tmux/status.c	/^status_message_redraw(struct client *c)$/;"	f	typeref:typename:int
status_message_set	src/dev/tmux/status.c	/^status_message_set(struct client *c, const char *fmt, ...)$/;"	f	typeref:typename:void
status_print	src/dev/tmux/status.c	/^status_print(struct client *c, struct winlink *wl, time_t t,$/;"	f	typeref:typename:char *	file:
status_prompt_add_history	src/dev/tmux/status.c	/^status_prompt_add_history(const char *line)$/;"	f	typeref:typename:void	file:
status_prompt_clear	src/dev/tmux/status.c	/^status_prompt_clear(struct client *c)$/;"	f	typeref:typename:void
status_prompt_complete	src/dev/tmux/status.c	/^status_prompt_complete(struct session *session, const char *s)$/;"	f	typeref:typename:char *	file:
status_prompt_complete_list	src/dev/tmux/status.c	/^status_prompt_complete_list(u_int *size, const char *s)$/;"	f	typeref:typename:const char **	file:
status_prompt_complete_prefix	src/dev/tmux/status.c	/^status_prompt_complete_prefix(const char **list, u_int size)$/;"	f	typeref:typename:char *	file:
status_prompt_down_history	src/dev/tmux/status.c	/^status_prompt_down_history(u_int *idx)$/;"	f	typeref:typename:const char *	file:
status_prompt_find_history_file	src/dev/tmux/status.c	/^status_prompt_find_history_file(void)$/;"	f	typeref:typename:char *	file:
status_prompt_hlist	src/dev/tmux/status.c	/^static char	**status_prompt_hlist;$/;"	v	typeref:typename:char **	file:
status_prompt_hsize	src/dev/tmux/status.c	/^static u_int	  status_prompt_hsize;$/;"	v	typeref:typename:u_int	file:
status_prompt_in_list	src/dev/tmux/status.c	/^status_prompt_in_list(const char *ws, const struct utf8_data *ud)$/;"	f	typeref:typename:int	file:
status_prompt_key	src/dev/tmux/status.c	/^status_prompt_key(struct client *c, key_code key)$/;"	f	typeref:typename:int
status_prompt_load_history	src/dev/tmux/status.c	/^status_prompt_load_history(void)$/;"	f	typeref:typename:void
status_prompt_redraw	src/dev/tmux/status.c	/^status_prompt_redraw(struct client *c)$/;"	f	typeref:typename:int
status_prompt_save_history	src/dev/tmux/status.c	/^status_prompt_save_history(void)$/;"	f	typeref:typename:void
status_prompt_set	src/dev/tmux/status.c	/^status_prompt_set(struct client *c, const char *msg, const char *input,$/;"	f	typeref:typename:void
status_prompt_space	src/dev/tmux/status.c	/^status_prompt_space(const struct utf8_data *ud)$/;"	f	typeref:typename:int	file:
status_prompt_translate_key	src/dev/tmux/status.c	/^status_prompt_translate_key(struct client *c, key_code key, key_code *new_key)$/;"	f	typeref:typename:int	file:
status_prompt_up_history	src/dev/tmux/status.c	/^status_prompt_up_history(u_int *idx)$/;"	f	typeref:typename:const char *	file:
status_prompt_update	src/dev/tmux/status.c	/^status_prompt_update(struct client *c, const char *msg, const char *input)$/;"	f	typeref:typename:void
status_redraw	src/dev/tmux/status.c	/^status_redraw(struct client *c)$/;"	f	typeref:typename:int
status_redraw_get_left	src/dev/tmux/status.c	/^status_redraw_get_left(struct client *c, time_t t, struct grid_cell *gc,$/;"	f	typeref:typename:char *	file:
status_redraw_get_right	src/dev/tmux/status.c	/^status_redraw_get_right(struct client *c, time_t t, struct grid_cell *gc,$/;"	f	typeref:typename:char *	file:
status_replace	src/dev/tmux/status.c	/^status_replace(struct client *c, struct winlink *wl, const char *fmt, time_t t)$/;"	f	typeref:typename:char *	file:
status_screen	src/dev/tmux/tmux.h	/^	struct screen	 status_screen;$/;"	m	struct:window_pane	typeref:struct:screen
status_size	src/dev/tmux/tmux.h	/^	size_t		 status_size;$/;"	m	struct:window_pane	typeref:typename:size_t
status_text	src/dev/tmux/tmux.h	/^	char		*status_text;$/;"	m	struct:winlink	typeref:typename:char *
status_timer	src/dev/tmux/tmux.h	/^	struct event	 status_timer;$/;"	m	struct:client	typeref:struct:event
status_timer_callback	src/dev/tmux/status.c	/^status_timer_callback(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
status_timer_start	src/dev/tmux/status.c	/^status_timer_start(struct client *c)$/;"	f	typeref:typename:void
status_timer_start_all	src/dev/tmux/status.c	/^status_timer_start_all(void)$/;"	f	typeref:typename:void
status_update_saved	src/dev/tmux/status.c	/^status_update_saved(struct session *s)$/;"	f	typeref:typename:void
status_width	src/dev/tmux/tmux.h	/^	size_t		 status_width;$/;"	m	struct:winlink	typeref:typename:size_t
statusat	src/dev/tmux/tmux.h	/^	int		 statusat;$/;"	m	struct:session	typeref:typename:int
statusat	src/dev/tmux/tmux.h	/^	int		statusat;$/;"	m	struct:mouse_event	typeref:typename:int
statusline	editors/vim/themes/rafi-2015.vim	/^augroup statusline$/;"	a
statusline	editors/vim/themes/rafi-2016.vim	/^augroup statusline$/;"	a
statusline	editors/vim/themes/rafi-2017.vim	/^augroup statusline$/;"	a
std	src/dev/ninja/src/hash_map.h	/^namespace std {$/;"	n
stderr	src/dev/ninja/src/gen_doxygen_mainpage.sh	/^stderr()$/;"	f
stderr_data	src/dev/tmux/tmux.h	/^	struct evbuffer	*stderr_data;$/;"	m	struct:client	typeref:struct:evbuffer *
stdin_callback	src/dev/tmux/tmux.h	/^	void		(*stdin_callback)(struct client *, int, void *);$/;"	m	struct:client	typeref:typename:void (*)(struct client *,int,void *)
stdin_callback_data	src/dev/tmux/tmux.h	/^	void		*stdin_callback_data;$/;"	m	struct:client	typeref:typename:void *
stdin_closed	src/dev/tmux/tmux.h	/^	int		 stdin_closed;$/;"	m	struct:client	typeref:typename:int
stdin_data	src/dev/tmux/tmux.h	/^	struct evbuffer	*stdin_data;$/;"	m	struct:client	typeref:struct:evbuffer *
stdin_paste	languages/python/pdbrc.py	/^    stdin_paste = 'epaste'$/;"	v	class:Config
stdout_data	src/dev/tmux/tmux.h	/^	struct evbuffer	*stdout_data;$/;"	m	struct:client	typeref:struct:evbuffer *
sticky_by_default	languages/python/pdbrc.py	/^    sticky_by_default = True # start in sticky mode$/;"	v	class:Config
stop_vagrant	terminals/tmux/plugins/tpm/lib/tmux-test/run_tests	/^stop_vagrant() {$/;"	f
stopwatch_	src/dev/ninja/src/build.h	/^    Stopwatch stopwatch_;$/;"	m	struct:BuildStatus::RateInfo	typeref:typename:Stopwatch
stopwatch_	src/dev/ninja/src/build.h	/^    Stopwatch stopwatch_;$/;"	m	struct:BuildStatus::SlidingRateInfo	typeref:typename:Stopwatch
str_	src/dev/ninja/src/string_piece.h	/^  const char* str_;$/;"	m	struct:StringPiece	typeref:typename:const char *
stravis	src/dev/tmux/compat/vis.c	/^stravis(char **outp, const char *src, int flag)$/;"	f	typeref:typename:int
strcasestr	src/dev/tmux/compat/strcasestr.c	/^strcasestr(const char *s, const char *find)$/;"	f	typeref:typename:char *
string	src/dev/tmux/key-string.c	/^	const char     *string;$/;"	m	struct:__anon6128e3050108	typeref:typename:const char *	file:
string	src/dev/tmux/options.c	/^		char				 *string;$/;"	m	union:options_entry::__anone31179a4010a	typeref:typename:char *	file:
string	src/dev/tmux/tty-acs.c	/^	const char	*string;$/;"	m	struct:tty_acs_entry	typeref:typename:const char *	file:
string	src/dev/tmux/tty-keys.c	/^	const char	       *string;$/;"	m	struct:tty_default_key_raw	typeref:typename:const char *	file:
string	src/dev/tmux/tty-term.c	/^		char	       *string;$/;"	m	union:tty_code::__anonc9119abe010a	typeref:typename:char *	file:
strlcat	src/dev/tmux/compat/strlcat.c	/^strlcat(char *dst, const char *src, size_t siz)$/;"	f	typeref:typename:size_t
strlcpy	src/dev/tmux/compat/strlcpy.c	/^strlcpy(char *dst, const char *src, size_t siz)$/;"	f	typeref:typename:size_t
strndup	src/dev/tmux/compat/strndup.c	/^strndup(const char *str, size_t maxlen)$/;"	f	typeref:typename:char *
strnlen	src/dev/tmux/compat/strnlen.c	/^strnlen(const char *str, size_t maxlen)$/;"	f	typeref:typename:size_t
strnunvis	src/dev/tmux/compat/unvis.c	/^strnunvis(char *dst, const char *src, size_t sz)$/;"	f	typeref:typename:ssize_t
strnvis	src/dev/tmux/compat/vis.c	/^strnvis(char *dst, const char *src, size_t siz, int flag)$/;"	f	typeref:typename:int
strsep	src/dev/tmux/compat/strsep.c	/^strsep(char **stringp, const char *delim)$/;"	f	typeref:typename:char *
strtonum	src/dev/tmux/compat/strtonum.c	/^strtonum(const char *numstr, long long minval, long long maxval,$/;"	f	typeref:typename:long long
strtoull	src/dev/ninja/src/util.h	/^#define strtoull /;"	d
strunvis	src/dev/tmux/compat/unvis.c	/^strunvis(char *dst, const char *src)$/;"	f	typeref:typename:int
strvis	src/dev/tmux/compat/vis.c	/^strvis(char *dst, const char *src, int flag)$/;"	f	typeref:typename:int
strvisx	src/dev/tmux/compat/vis.c	/^strvisx(char *dst, const char *src, size_t len, int flag)$/;"	f	typeref:typename:int
style	src/dev/tmux/options.c	/^		struct grid_cell		  style;$/;"	m	union:options_entry::__anone31179a4010a	typeref:struct:grid_cell	file:
style	src/dev/tmux/tmux.h	/^	const char		 *style;$/;"	m	struct:options_table_entry	typeref:typename:const char *
style	src/dev/tmux/tmux.h	/^	struct grid_cell style;$/;"	m	struct:window	typeref:struct:grid_cell
style_apply	src/dev/tmux/style.c	/^style_apply(struct grid_cell *gc, struct options *oo, const char *name)$/;"	f	typeref:typename:void
style_apply_update	src/dev/tmux/style.c	/^style_apply_update(struct grid_cell *gc, struct options *oo, const char *name)$/;"	f	typeref:typename:void
style_equal	src/dev/tmux/style.c	/^style_equal(const struct grid_cell *gc1, const struct grid_cell *gc2)$/;"	f	typeref:typename:int
style_parse	src/dev/tmux/style.c	/^style_parse(const struct grid_cell *defgc, struct grid_cell *gc,$/;"	f	typeref:typename:int
style_tostring	src/dev/tmux/style.c	/^style_tostring(struct grid_cell *gc)$/;"	f	typeref:typename:const char *
subdir	src/dev/tmux/Makefile	/^subdir = .$/;"	m
subdir	src/dev/tmux/Makefile.in	/^subdir = .$/;"	m
subninja	src/dev/ninja/misc/ninja_syntax.py	/^    def subninja(self, path):$/;"	m	class:Writer
subproc_to_edge_	src/dev/ninja/src/build.cc	/^  map<Subprocess*, Edge*> subproc_to_edge_;$/;"	m	struct:RealCommandRunner	typeref:typename:map<Subprocess *,Edge * >	file:
subprocs_	src/dev/ninja/src/build.cc	/^  SubprocessSet subprocs_;$/;"	m	struct:RealCommandRunner	typeref:typename:SubprocessSet	file:
subprocs_	src/dev/ninja/src/subprocess_test.cc	/^  SubprocessSet subprocs_;$/;"	m	struct:__anon5bb798dc0110::SubprocessTest	typeref:typename:SubprocessSet	file:
success	src/dev/ninja/src/build.h	/^    bool success() const { return status == ExitSuccess; }$/;"	f	struct:CommandRunner::Result	typeref:typename:bool
sudo	src/zplug/base/job/hook.zsh	/^        alias sudo=__zplug::utils::shell::sudo$/;"	a
sudo	src/zplug/repos/zplug/zplug/base/job/hook.zsh	/^        alias sudo=__zplug::utils::shell::sudo$/;"	a
sudo	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/sudo-command.zsh	/^sudo(){}$/;"	f
sudo	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/sudo-comment.zsh	/^sudo(){}$/;"	f
sudo	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection.zsh	/^sudo(){}$/;"	f
sudo	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection2.zsh	/^sudo(){}$/;"	f
sudo	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection3.zsh	/^sudo(){}$/;"	f
suggestion fetching	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/use_async_spec.rb	/^describe 'suggestion fetching' do$/;"	d
sum	src/dev/ninja/src/metrics.h	/^  int64_t sum;$/;"	m	struct:Metric	typeref:typename:int64_t
supported_tmux_version_ok	terminals/tmux/plugins/tpm/tpm	/^supported_tmux_version_ok() {$/;"	f
supports_ninja_browse	src/dev/ninja/configure.py	/^    def supports_ninja_browse(self):$/;"	m	class:Platform
supports_ppoll	src/dev/ninja/configure.py	/^    def supports_ppoll(self):$/;"	m	class:Platform
suspended_jobs	shells/zsh/theme/prompt.zsh	/^suspended_jobs() {$/;"	f
sv	editors/vim/ftplugin/qf.vim	/^nnoremap <buffer> sv   <C-w><CR>$/;"	m
swapskip	editors/vim/plugin/vault.vim	/^augroup swapskip$/;"	a
sx	src/dev/tmux/tmux.h	/^	u_int			 sx;$/;"	m	struct:grid	typeref:typename:u_int
sx	src/dev/tmux/tmux.h	/^	u_int		 sx;$/;"	m	struct:layout_cell	typeref:typename:u_int
sx	src/dev/tmux/tmux.h	/^	u_int		 sx;$/;"	m	struct:screen_sel	typeref:typename:u_int
sx	src/dev/tmux/tmux.h	/^	u_int		 sx;$/;"	m	struct:session	typeref:typename:u_int
sx	src/dev/tmux/tmux.h	/^	u_int		 sx;$/;"	m	struct:tty	typeref:typename:u_int
sx	src/dev/tmux/tmux.h	/^	u_int		 sx;$/;"	m	struct:window	typeref:typename:u_int
sx	src/dev/tmux/tmux.h	/^	u_int		 sx;$/;"	m	struct:window_pane	typeref:typename:u_int
sy	src/dev/tmux/tmux.h	/^	u_int			 sy;$/;"	m	struct:grid	typeref:typename:u_int
sy	src/dev/tmux/tmux.h	/^	u_int		 sy;$/;"	m	struct:layout_cell	typeref:typename:u_int
sy	src/dev/tmux/tmux.h	/^	u_int		 sy;$/;"	m	struct:screen_sel	typeref:typename:u_int
sy	src/dev/tmux/tmux.h	/^	u_int		 sy;$/;"	m	struct:session	typeref:typename:u_int
sy	src/dev/tmux/tmux.h	/^	u_int		 sy;$/;"	m	struct:tty	typeref:typename:u_int
sy	src/dev/tmux/tmux.h	/^	u_int		 sy;$/;"	m	struct:window	typeref:typename:u_int
sy	src/dev/tmux/tmux.h	/^	u_int		 sy;$/;"	m	struct:window_pane	typeref:typename:u_int
symlink_internal_test_runner	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_internal_test_runner() {$/;"	f
symlink_test_helpers	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_test_helpers() {$/;"	f
symlink_user_test_runner	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_user_test_runner() {$/;"	f
sys.stdin.read	src/zplug/base/utils/shell.zsh	/^print(json.dumps(sys.stdin.read()))' \\$/;"	f
sys.stdin.read	src/zplug/repos/zplug/zplug/base/utils/shell.zsh	/^print(json.dumps(sys.stdin.read()))' \\$/;"	f
sysconfdir	src/dev/tmux/Makefile	/^sysconfdir = \/etc$/;"	m
sysconfdir	src/dev/tmux/Makefile.in	/^sysconfdir = @sysconfdir@$/;"	m
t	editors/vim/ftplugin/help.vim	/^nmap <buffer> t \/\\*\\S\\+\\*<CR>l$/;"	m
t	src/dev/tmux/example_tmux.conf	/^bind F1 selectw -t:10$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F10 selectw -t:19$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F11 selectw -t:20$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F12 selectw -t:21$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F2 selectw -t:11$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F3 selectw -t:12$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F4 selectw -t:13$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F5 selectw -t:14$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F6 selectw -t:15$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F7 selectw -t:16$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F8 selectw -t:17$/;"	k
t	src/dev/tmux/example_tmux.conf	/^bind F9 selectw -t:18$/;"	k
t	src/dev/tmux/format.c	/^	time_t			 t;$/;"	m	struct:format_entry	typeref:typename:time_t	file:
t0	src/dev/tmux/example_tmux.conf	/^set  -t0:0 aggressive-resize on$/;"	k
t0	src/dev/tmux/example_tmux.conf	/^set -t0:0 monitor-activity on$/;"	k
t0	src/dev/tmux/example_tmux.conf	/^setw -t0:1 aggressive-resize on$/;"	k
t0	src/dev/tmux/example_tmux.conf	/^setw -t0:2 aggressive-resize on$/;"	k
ta	shells/zsh/tmux.zsh	/^alias ta='tmux attach'$/;"	a
tableentry	src/dev/tmux/options.c	/^	const struct options_table_entry	 *tableentry;$/;"	m	struct:options_entry	typeref:typename:const struct options_table_entry *	file:
tabs	src/dev/tmux/tmux.h	/^	bitstr_t		*tabs;$/;"	m	struct:screen	typeref:typename:bitstr_t *
tag	src/dev/tmux/format.c	/^	u_int			 tag;$/;"	m	struct:format_job	typeref:typename:u_int	file:
tag	src/dev/tmux/format.c	/^	u_int			 tag;$/;"	m	struct:format_tree	typeref:typename:u_int	file:
tag	src/dev/tmux/mode-tree.c	/^	uint64_t			 tag;$/;"	m	struct:mode_tree_item	typeref:typename:uint64_t	file:
tagged	src/dev/tmux/mode-tree.c	/^	int				 tagged;$/;"	m	struct:mode_tree_item	typeref:typename:int	file:
tagit	util-scripts/mk_tags.sh	/^function tagit(){$/;"	f
tags	src/dev/tmux/Makefile	/^tags: tags-am$/;"	t
tags	src/dev/tmux/Makefile.in	/^tags: tags-am$/;"	t
tags-am	src/dev/tmux/Makefile	/^tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)$/;"	t
tags-am	src/dev/tmux/Makefile.in	/^tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)$/;"	t
tags[1]=	src/zplug/base/core/add.zsh	/^    tags[1]=()$/;"	f
tags[1]=	src/zplug/repos/zplug/zplug/base/core/add.zsh	/^    tags[1]=()$/;"	f
target	src/dev/tmux/tmux.h	/^	struct cmd_entry_flag	 target;$/;"	m	struct:cmd_entry	typeref:struct:cmd_entry_flag
target	src/dev/tmux/tmux.h	/^	struct cmd_find_state	 target;$/;"	m	struct:cmdq_item	typeref:struct:cmd_find_state
target_alias	src/dev/tmux/Makefile	/^target_alias = $/;"	m
target_alias	src/dev/tmux/Makefile.in	/^target_alias = @target_alias@$/;"	m
target_name	src/dev/ninja/misc/write_fake_manifests.py	/^    def target_name(self):$/;"	m	class:GenRandom
tat	shells/zsh/tmux.zsh	/^alias tat='tmux attach -t'$/;"	a
teardown_helper	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^teardown_helper() {$/;"	f
temp_dir_	src/dev/ninja/src/build_test.cc	/^  ScopedTempDir temp_dir_;$/;"	m	struct:BuildWithDepsLogTest	typeref:typename:ScopedTempDir	file:
temp_dir_	src/dev/ninja/src/disk_interface_test.cc	/^  ScopedTempDir temp_dir_;$/;"	m	struct:__anonebbddeae0110::DiskInterfaceTest	typeref:typename:ScopedTempDir	file:
temp_dir_name_	src/dev/ninja/src/test.h	/^  string temp_dir_name_;$/;"	m	struct:ScopedTempDir	typeref:typename:string
template	src/dev/tmux/cmd-command-prompt.c	/^	char	*template;$/;"	m	struct:cmd_command_prompt_cdata	typeref:typename:char *	file:
template	src/dev/tmux/xterm-keys.c	/^	const char	*template;$/;"	m	struct:xterm_keys_entry	typeref:typename:const char *	file:
term	src/dev/tmux/tmux.h	/^	char		*term;$/;"	m	struct:client	typeref:typename:char *
term	src/dev/tmux/tmux.h	/^	struct tty_term	*term;$/;"	m	struct:tty	typeref:struct:tty_term *
term_flags	src/dev/tmux/tmux.h	/^	int		 term_flags;$/;"	m	struct:tty	typeref:typename:int
term_name	src/dev/tmux/tmux.h	/^	char		*term_name;$/;"	m	struct:tty	typeref:typename:char *
term_type	src/dev/tmux/tmux.h	/^	} term_type;$/;"	m	struct:tty	typeref:enum:tty::__anonc903038b0603
test	editors/vim/Makefile	/^test:$/;"	t
test	meta/dotbot/lib/pyyaml/Makefile	/^test: build$/;"	t
test	meta/dotbot/lib/pyyaml/setup.py	/^class test(Command):$/;"	c
test	src/zplug/Makefile	/^test: shove ## Unit test for zplug$/;"	t
test	src/zplug/repos/zplug/zplug/Makefile	/^test: shove ## Unit test for zplug$/;"	t
test	src/zplug/repos/zsh-users/zsh-autosuggestions/Makefile	/^test: all$/;"	t
test	src/zplug/repos/zsh-users/zsh-syntax-highlighting/Makefile	/^test:$/;"	t
test_basic	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_basic(self):$/;"	m	class:TestExpand
test_c_emitter	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def test_c_emitter(data_filename, canonical_filename, verbose=False):$/;"	f
test_c_emitter	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def test_c_emitter(data_filename, canonical_filename, verbose=False):$/;"	f
test_c_parser	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def test_c_parser(data_filename, canonical_filename, verbose=False):$/;"	f
test_c_parser	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def test_c_parser(data_filename, canonical_filename, verbose=False):$/;"	f
test_c_scanner	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def test_c_scanner(data_filename, canonical_filename, verbose=False):$/;"	f
test_c_scanner	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def test_c_scanner(data_filename, canonical_filename, verbose=False):$/;"	f
test_c_version	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def test_c_version(verbose=False):$/;"	f
test_c_version	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def test_c_version(verbose=False):$/;"	f
test_canonical_error	meta/dotbot/lib/pyyaml/tests/lib/test_canonical.py	/^def test_canonical_error(data_filename, canonical_filename, verbose=False):$/;"	f
test_canonical_error	meta/dotbot/lib/pyyaml/tests/lib3/test_canonical.py	/^def test_canonical_error(data_filename, canonical_filename, verbose=False):$/;"	f
test_canonical_parser	meta/dotbot/lib/pyyaml/tests/lib/test_canonical.py	/^def test_canonical_parser(canonical_filename, verbose=False):$/;"	f
test_canonical_parser	meta/dotbot/lib/pyyaml/tests/lib3/test_canonical.py	/^def test_canonical_parser(canonical_filename, verbose=False):$/;"	f
test_canonical_scanner	meta/dotbot/lib/pyyaml/tests/lib/test_canonical.py	/^def test_canonical_scanner(canonical_filename, verbose=False):$/;"	f
test_canonical_scanner	meta/dotbot/lib/pyyaml/tests/lib3/test_canonical.py	/^def test_canonical_scanner(canonical_filename, verbose=False):$/;"	f
test_comment_wrap	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_comment_wrap(self):$/;"	m	class:TestLineWordWrap
test_composer	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def test_composer(data_filename, canonical_filename, verbose=False):$/;"	f
test_composer	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def test_composer(data_filename, canonical_filename, verbose=False):$/;"	f
test_constructor	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def test_constructor(data_filename, canonical_filename, verbose=False):$/;"	f
test_constructor	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def test_constructor(data_filename, canonical_filename, verbose=False):$/;"	f
test_constructor_types	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^def test_constructor_types(data_filename, code_filename, verbose=False):$/;"	f
test_constructor_types	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^def test_constructor_types(data_filename, code_filename, verbose=False):$/;"	f
test_custom_tpm_path	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_custom_tpm_path() {$/;"	f
test_default_tpm_path	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_default_tpm_path() {$/;"	f
test_double	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_double(self):$/;"	m	class:TestExpand
test_dumper_error	meta/dotbot/lib/pyyaml/tests/lib/test_errors.py	/^def test_dumper_error(error_filename, verbose=False):$/;"	f
test_dumper_error	meta/dotbot/lib/pyyaml/tests/lib3/test_errors.py	/^def test_dumper_error(error_filename, verbose=False):$/;"	f
test_embedded_dollar_dollar	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_embedded_dollar_dollar(self):$/;"	m	class:TestLineWordWrap
test_emitter_error	meta/dotbot/lib/pyyaml/tests/lib/test_errors.py	/^def test_emitter_error(error_filename, verbose=False):$/;"	f
test_emitter_error	meta/dotbot/lib/pyyaml/tests/lib3/test_errors.py	/^def test_emitter_error(error_filename, verbose=False):$/;"	f
test_emitter_events	meta/dotbot/lib/pyyaml/tests/lib/test_emitter.py	/^def test_emitter_events(events_filename, verbose=False):$/;"	f
test_emitter_events	meta/dotbot/lib/pyyaml/tests/lib3/test_emitter.py	/^def test_emitter_events(events_filename, verbose=False):$/;"	f
test_emitter_on_canonical	meta/dotbot/lib/pyyaml/tests/lib/test_emitter.py	/^def test_emitter_on_canonical(canonical_filename, verbose=False):$/;"	f
test_emitter_on_canonical	meta/dotbot/lib/pyyaml/tests/lib3/test_emitter.py	/^def test_emitter_on_canonical(canonical_filename, verbose=False):$/;"	f
test_emitter_on_data	meta/dotbot/lib/pyyaml/tests/lib/test_emitter.py	/^def test_emitter_on_data(data_filename, canonical_filename, verbose=False):$/;"	f
test_emitter_on_data	meta/dotbot/lib/pyyaml/tests/lib3/test_emitter.py	/^def test_emitter_on_data(data_filename, canonical_filename, verbose=False):$/;"	f
test_emitter_styles	meta/dotbot/lib/pyyaml/tests/lib/test_emitter.py	/^def test_emitter_styles(data_filename, canonical_filename, verbose=False):$/;"	f
test_emitter_styles	meta/dotbot/lib/pyyaml/tests/lib3/test_emitter.py	/^def test_emitter_styles(data_filename, canonical_filename, verbose=False):$/;"	f
test_escaped_spaces	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_escaped_spaces(self):$/;"	m	class:TestLineWordWrap
test_expect_failure	meta/dotbot/test/test-lib.bash	/^test_expect_failure() {$/;"	f
test_expect_success	meta/dotbot/test/test-lib.bash	/^test_expect_success() {$/;"	f
test_few_long_words	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_few_long_words(self):$/;"	m	class:TestLineWordWrap
test_few_long_words_indented	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_few_long_words_indented(self):$/;"	m	class:TestLineWordWrap
test_file_output	meta/dotbot/lib/pyyaml/tests/lib/test_input_output.py	/^def test_file_output(unicode_filename, verbose=False):$/;"	f
test_file_output	meta/dotbot/lib/pyyaml/tests/lib3/test_input_output.py	/^def test_file_output(unicode_filename, verbose=False):$/;"	f
test_fit_many_words	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_fit_many_words(self):$/;"	m	class:TestLineWordWrap
test_implicit_outputs	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_implicit_outputs(self):$/;"	m	class:TestBuild
test_implicit_resolver	meta/dotbot/lib/pyyaml/tests/lib/test_resolver.py	/^def test_implicit_resolver(data_filename, detect_filename, verbose=False):$/;"	f
test_implicit_resolver	meta/dotbot/lib/pyyaml/tests/lib3/test_resolver.py	/^def test_implicit_resolver(data_filename, detect_filename, verbose=False):$/;"	f
test_leading_dollar_dollar	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_leading_dollar_dollar(self):$/;"	m	class:TestLineWordWrap
test_leading_space	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_leading_space(self):$/;"	m	class:TestLineWordWrap
test_legacy_and_new_syntax_for_plugin_installation_work_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_script() {$/;"	f
test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding() {$/;"	f
test_loader_error	meta/dotbot/lib/pyyaml/tests/lib/test_errors.py	/^def test_loader_error(error_filename, verbose=False):$/;"	f
test_loader_error	meta/dotbot/lib/pyyaml/tests/lib3/test_errors.py	/^def test_loader_error(error_filename, verbose=False):$/;"	f
test_loader_error_single	meta/dotbot/lib/pyyaml/tests/lib/test_errors.py	/^def test_loader_error_single(error_filename, verbose=False):$/;"	f
test_loader_error_single	meta/dotbot/lib/pyyaml/tests/lib3/test_errors.py	/^def test_loader_error_single(error_filename, verbose=False):$/;"	f
test_loader_error_string	meta/dotbot/lib/pyyaml/tests/lib/test_errors.py	/^def test_loader_error_string(error_filename, verbose=False):$/;"	f
test_loader_error_string	meta/dotbot/lib/pyyaml/tests/lib3/test_errors.py	/^def test_loader_error_string(error_filename, verbose=False):$/;"	f
test_locals	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_locals(self):$/;"	m	class:TestExpand
test_marks	meta/dotbot/lib/pyyaml/tests/lib/test_mark.py	/^def test_marks(marks_filename, verbose=False):$/;"	f
test_marks	meta/dotbot/lib/pyyaml/tests/lib3/test_mark.py	/^def test_marks(marks_filename, verbose=False):$/;"	f
test_multiple_plugins_installation_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_script() {$/;"	f
test_multiple_plugins_installation_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_tmux_key_binding() {$/;"	f
test_non_existing_plugin_installation_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_script() {$/;"	f
test_non_existing_plugin_installation_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_tmux_key_binding() {$/;"	f
test_parser	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def test_parser(data_filename, canonical_filename, verbose=False):$/;"	f
test_parser	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def test_parser(data_filename, canonical_filename, verbose=False):$/;"	f
test_parser_on_canonical	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def test_parser_on_canonical(canonical_filename, verbose=False):$/;"	f
test_parser_on_canonical	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def test_parser_on_canonical(canonical_filename, verbose=False):$/;"	f
test_path_resolver_dumper	meta/dotbot/lib/pyyaml/tests/lib/test_resolver.py	/^def test_path_resolver_dumper(data_filename, path_filename, verbose=False):$/;"	f
test_path_resolver_dumper	meta/dotbot/lib/pyyaml/tests/lib3/test_resolver.py	/^def test_path_resolver_dumper(data_filename, path_filename, verbose=False):$/;"	f
test_path_resolver_loader	meta/dotbot/lib/pyyaml/tests/lib/test_resolver.py	/^def test_path_resolver_loader(data_filename, path_filename, verbose=False):$/;"	f
test_path_resolver_loader	meta/dotbot/lib/pyyaml/tests/lib3/test_resolver.py	/^def test_path_resolver_loader(data_filename, path_filename, verbose=False):$/;"	f
test_plugin_installation_custom_dir_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_script() {$/;"	f
test_plugin_installation_custom_dir_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding_set_option	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding_set_option() {$/;"	f
test_plugin_sourcing	terminals/tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_plugin_sourcing() {$/;"	f
test_plugin_uninstallation_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_script() {$/;"	f
test_plugin_uninstallation_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_tmux_key_binding() {$/;"	f
test_plugin_update_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_script() {$/;"	f
test_plugin_update_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_script() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_sourced_file_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_script() {$/;"	f
test_plugins_installation_from_sourced_file_via_tmux_key_binding	terminals/tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_tmux_key_binding() {$/;"	f
test_recursive	meta/dotbot/lib/pyyaml/tests/lib/test_recursive.py	/^def test_recursive(recursive_filename, verbose=False):$/;"	f
test_recursive	meta/dotbot/lib/pyyaml/tests/lib3/test_recursive.py	/^def test_recursive(recursive_filename, verbose=False):$/;"	f
test_representer_types	meta/dotbot/lib/pyyaml/tests/lib/test_representer.py	/^def test_representer_types(code_filename, verbose=False):$/;"	f
test_representer_types	meta/dotbot/lib/pyyaml/tests/lib3/test_representer.py	/^def test_representer_types(code_filename, verbose=False):$/;"	f
test_run_	meta/dotbot/test/test-lib.bash	/^test_run_() {$/;"	f
test_scanner	meta/dotbot/lib/pyyaml/tests/lib/test_tokens.py	/^def test_scanner(data_filename, canonical_filename, verbose=False):$/;"	f
test_scanner	meta/dotbot/lib/pyyaml/tests/lib3/test_tokens.py	/^def test_scanner(data_filename, canonical_filename, verbose=False):$/;"	f
test_short_words_indented	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_short_words_indented(self):$/;"	m	class:TestLineWordWrap
test_single_long_word	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_single_long_word(self):$/;"	m	class:TestLineWordWrap
test_space	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_space(self):$/;"	m	class:TestExpand
test_stream_error	meta/dotbot/lib/pyyaml/tests/lib/test_reader.py	/^def test_stream_error(error_filename, verbose=False):$/;"	f
test_stream_error	meta/dotbot/lib/pyyaml/tests/lib3/test_reader.py	/^def test_stream_error(error_filename, verbose=False):$/;"	f
test_structure	meta/dotbot/lib/pyyaml/tests/lib/test_structure.py	/^def test_structure(data_filename, structure_filename, verbose=False):$/;"	f
test_structure	meta/dotbot/lib/pyyaml/tests/lib3/test_structure.py	/^def test_structure(data_filename, structure_filename, verbose=False):$/;"	f
test_tokens	meta/dotbot/lib/pyyaml/tests/lib/test_tokens.py	/^def test_tokens(data_filename, tokens_filename, verbose=False):$/;"	f
test_tokens	meta/dotbot/lib/pyyaml/tests/lib3/test_tokens.py	/^def test_tokens(data_filename, tokens_filename, verbose=False):$/;"	f
test_trailing_dollar_dollar	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_trailing_dollar_dollar(self):$/;"	m	class:TestLineWordWrap
test_two_embedded_dollar_dollars	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_two_embedded_dollar_dollars(self):$/;"	m	class:TestLineWordWrap
test_unicode_input	meta/dotbot/lib/pyyaml/tests/lib/test_input_output.py	/^def test_unicode_input(unicode_filename, verbose=False):$/;"	f
test_unicode_input	meta/dotbot/lib/pyyaml/tests/lib3/test_input_output.py	/^def test_unicode_input(unicode_filename, verbose=False):$/;"	f
test_unicode_input_errors	meta/dotbot/lib/pyyaml/tests/lib/test_input_output.py	/^def test_unicode_input_errors(unicode_filename, verbose=False):$/;"	f
test_unicode_input_errors	meta/dotbot/lib/pyyaml/tests/lib3/test_input_output.py	/^def test_unicode_input_errors(unicode_filename, verbose=False):$/;"	f
test_unicode_output	meta/dotbot/lib/pyyaml/tests/lib/test_input_output.py	/^def test_unicode_output(unicode_filename, verbose=False):$/;"	f
test_unicode_output	meta/dotbot/lib/pyyaml/tests/lib3/test_input_output.py	/^def test_unicode_output(unicode_filename, verbose=False):$/;"	f
test_unicode_transfer	meta/dotbot/lib/pyyaml/tests/lib/test_input_output.py	/^def test_unicode_transfer(unicode_filename, verbose=False):$/;"	f
test_unicode_transfer	meta/dotbot/lib/pyyaml/tests/lib3/test_input_output.py	/^def test_unicode_transfer(unicode_filename, verbose=False):$/;"	f
test_unsuccessful_plugin_uninstallation_via_script	terminals/tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_unsuccessful_plugin_uninstallation_via_script() {$/;"	f
test_var	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_var(self):$/;"	m	class:TestExpand
test_variables_dict	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_variables_dict(self):$/;"	m	class:TestBuild
test_variables_list	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_variables_list(self):$/;"	m	class:TestBuild
test_vars	src/dev/ninja/misc/ninja_syntax_test.py	/^    def test_vars(self):$/;"	m	class:TestExpand
testall	meta/dotbot/lib/pyyaml/Makefile	/^testall:$/;"	t
testext	meta/dotbot/lib/pyyaml/Makefile	/^testext: buildext$/;"	t
testing	src/dev/ninja/src/test.h	/^namespace testing {$/;"	n
tests	src/dev/ninja/src/ninja_test.cc	/^static RegisteredTest tests[10000];$/;"	v	typeref:typename:RegisteredTest[10000]	file:
tests=	meta/dotbot/test/test	/^declare -a tests=()$/;"	f
tests=	meta/dotbot/test/test_travis	/^declare -a tests=()$/;"	f
text	src/dev/tmux/mode-tree.c	/^	const char			*text;$/;"	m	struct:mode_tree_item	typeref:typename:const char *	file:
that modifies the buffer	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^  context 'that modifies the buffer' do$/;"	c
that moves the cursor forward	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^  context 'that moves the cursor forward' do$/;"	c
the `autosuggest-disable` widget	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/widgets/disable_spec.rb	/^describe 'the `autosuggest-disable` widget' do$/;"	d
the `autosuggest-enable` widget	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/widgets/enable_spec.rb	/^describe 'the `autosuggest-enable` widget' do$/;"	d
the `autosuggest-fetch` widget	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/widgets/fetch_spec.rb	/^describe 'the `autosuggest-fetch` widget' do$/;"	d
the `autosuggest-toggle` widget	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/widgets/toggle_spec.rb	/^describe 'the `autosuggest-toggle` widget' do$/;"	d
the default suggestion strategy	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/strategies/default_spec.rb	/^describe 'the default suggestion strategy' do$/;"	d
the match_prev_cmd strategy	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/strategies/match_prev_cmd_spec.rb	/^describe 'the match_prev_cmd strategy' do$/;"	d
the zpty for async suggestions	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/async_zpty_name_spec.rb	/^  describe 'the zpty for async suggestions' do$/;"	d
tim	src/dev/tmux/window-clock.c	/^	time_t			tim;$/;"	m	struct:window_clock_mode_data	typeref:typename:time_t	file:
time	src/dev/tmux/tmux.h	/^	time_t			 time;$/;"	m	struct:cmdq_item	typeref:typename:time_t
timer	src/dev/tmux/input.c	/^	struct event		timer;$/;"	m	struct:input_ctx	typeref:struct:event	file:
timer	src/dev/tmux/tmux.h	/^	struct event	 timer;$/;"	m	struct:tty	typeref:struct:event
timer	src/dev/tmux/window-clock.c	/^	struct event		timer;$/;"	m	struct:window_clock_mode_data	typeref:struct:event	file:
timeradd	src/dev/tmux/compat.h	/^#define	timeradd(/;"	d
timercmp	src/dev/tmux/compat.h	/^#define	timercmp(/;"	d
timersub	src/dev/tmux/compat.h	/^#define timersub(/;"	d
times_	src/dev/ninja/src/build.h	/^    queue<double> times_;$/;"	m	struct:BuildStatus::SlidingRateInfo	typeref:typename:queue<double>
timestamp_regexp	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    timestamp_regexp = re.compile($/;"	v	class:SafeConstructor
timestamp_regexp	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    timestamp_regexp = re.compile($/;"	v	class:SafeConstructor
tio	src/dev/tmux/tmux.h	/^	struct termios	 tio;$/;"	m	struct:tty	typeref:struct:termios
tio	src/dev/tmux/tmux.h	/^	struct termios	*tio;$/;"	m	struct:session	typeref:struct:termios *
title	src/dev/tmux/tmux.h	/^	char			*title;$/;"	m	struct:screen	typeref:typename:char *
title	src/dev/tmux/tmux.h	/^	char		*title;$/;"	m	struct:client	typeref:typename:char *
tk	shells/zsh/tmux.zsh	/^alias tk='tmux kill-session'$/;"	a
tkkk	shells/zsh/tmux.zsh	/^alias tkkk='tmux kill-server' # extra 'k' to make sure$/;"	a
tks	shells/zsh/tmux.zsh	/^alias tks='tmux kill-session -t'$/;"	a
tkw	shells/zsh/tmux.zsh	/^alias tkw='tmux kill-window'$/;"	a
tls	shells/zsh/tmux.zsh	/^alias tls='tmux ls'$/;"	a
tmd	shells/zsh/tmux.zsh	/^alias tmd='tmux detach'$/;"	a
tmux	src/dev/tmux/configure.ac	/^AC_INIT(tmux, master)$/;"	p
tmux$(EXEEXT)	src/dev/tmux/Makefile	/^tmux$(EXEEXT): $(tmux_OBJECTS) $(tmux_DEPENDENCIES) $(EXTRA_tmux_DEPENDENCIES) $/;"	t
tmux$(EXEEXT)	src/dev/tmux/Makefile.in	/^tmux$(EXEEXT): $(tmux_OBJECTS) $(tmux_DEPENDENCIES) $(EXTRA_tmux_DEPENDENCIES) $/;"	t
tmux_DEPENDENCIES	src/dev/tmux/Makefile	/^tmux_DEPENDENCIES = $(LIBOBJS)$/;"	m
tmux_DEPENDENCIES	src/dev/tmux/Makefile.in	/^tmux_DEPENDENCIES = $(LIBOBJS)$/;"	m
tmux_LDADD	src/dev/tmux/Makefile	/^tmux_LDADD = $(LDADD)$/;"	m
tmux_LDADD	src/dev/tmux/Makefile.in	/^tmux_LDADD = $(LDADD)$/;"	m
tmux_OBJECTS	src/dev/tmux/Makefile	/^tmux_OBJECTS = $(dist_tmux_OBJECTS) $(nodist_tmux_OBJECTS)$/;"	m
tmux_OBJECTS	src/dev/tmux/Makefile.in	/^tmux_OBJECTS = $(dist_tmux_OBJECTS) $(nodist_tmux_OBJECTS)$/;"	m
tmux_command	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_command(cmd)$/;"	f	class:TerminalSession
tmux_echo	terminals/tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^tmux_echo() {$/;"	f
tmux_socket_name	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_socket_name$/;"	f	class:TerminalSession
tmux_version_int	terminals/tmux/plugins/tpm/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
tmuxpeer	src/dev/tmux/proc.c	/^struct tmuxpeer {$/;"	s	file:
tmuxproc	src/dev/tmux/proc.c	/^struct tmuxproc {$/;"	s	file:
tns	shells/zsh/tmux.zsh	/^alias tns='tmux new-session -s'$/;"	a
tnw	shells/zsh/tmux.zsh	/^alias tnw='tmux new-window'$/;"	a
tnwn	shells/zsh/tmux.zsh	/^alias tnwn='tmux new-window -n'$/;"	a
to_yaml	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    def to_yaml(cls, dumper, data):$/;"	m	class:YAMLObject
to_yaml	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    to_yaml = classmethod(to_yaml)$/;"	v	class:YAMLObject
to_yaml	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    def to_yaml(cls, dumper, data):$/;"	m	class:YAMLObject
to_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def to_yaml(cls, representer, native):$/;"	m	class:_make_objects.MyTestClass2
to_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def to_yaml(cls, representer, native):$/;"	m	class:_make_objects.MyTestClass3
to_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        to_yaml = classmethod(to_yaml)$/;"	v	class:_make_objects.MyTestClass2
to_yaml	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        to_yaml = classmethod(to_yaml)$/;"	v	class:_make_objects.MyTestClass3
to_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def to_yaml(cls, representer, native):$/;"	m	class:_make_objects.MyTestClass2
to_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def to_yaml(cls, representer, native):$/;"	m	class:_make_objects.MyTestClass3
to_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        to_yaml = classmethod(to_yaml)$/;"	v	class:_make_objects.MyTestClass2
to_yaml	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        to_yaml = classmethod(to_yaml)$/;"	v	class:_make_objects.MyTestClass3
toc.list.type	src/dev/ninja/doc/docbook.xsl	/^  <xsl:param name="toc.list.type">ul<\/xsl:param>$/;"	p
tokens	meta/dotbot/lib/pyyaml/examples/pygments-lexer/yaml.py	/^    tokens = {$/;"	v	class:YAMLLexer
tool	src/dev/ninja/src/ninja.cc	/^  const Tool* tool;$/;"	m	struct:__anon193baac40110::Options	typeref:typename:const Tool *	file:
top_build_prefix	src/dev/tmux/Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	src/dev/tmux/Makefile.in	/^top_build_prefix = @top_build_prefix@$/;"	m
top_builddir	src/dev/tmux/Makefile	/^top_builddir = .$/;"	m
top_builddir	src/dev/tmux/Makefile.in	/^top_builddir = @top_builddir@$/;"	m
top_distdir	src/dev/tmux/Makefile	/^top_distdir = $(distdir)$/;"	m
top_distdir	src/dev/tmux/Makefile.in	/^top_distdir = $(distdir)$/;"	m
top_srcdir	src/dev/tmux/Makefile	/^top_srcdir = .$/;"	m
top_srcdir	src/dev/tmux/Makefile.in	/^top_srcdir = @top_srcdir@$/;"	m
total_edges_	src/dev/ninja/src/build.h	/^  int started_edges_, finished_edges_, total_edges_;$/;"	m	struct:BuildStatus	typeref:typename:int
tpm_path	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_path() {$/;"	f
tpm_path_set	terminals/tmux/plugins/tpm/tpm	/^tpm_path_set() {$/;"	f
tpm_plugins_list_helper	terminals/tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_plugins_list_helper() {$/;"	f
transform	src/dev/tmux/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/dev/tmux/Makefile.in	/^transform = $(program_transform_name)$/;"	m
transitions	src/dev/tmux/input.c	/^	const struct input_transition	*transitions;$/;"	m	struct:input_state	typeref:typename:const struct input_transition *	file:
travis_cleanup	meta/dotbot/test/test_travis	/^travis_cleanup() {$/;"	f
travis_initialize	meta/dotbot/test/test_travis	/^travis_initialize() {$/;"	f
travis_run_test	meta/dotbot/test/test_travis	/^travis_run_test() {$/;"	f
tree	src/dev/tmux/tmux.h	/^	struct args_tree	  tree;$/;"	m	struct:args	typeref:struct:args_tree
tree_session	src/dev/tmux/tmux.h	/^	struct session		*tree_session; \/* session of items in tree *\/$/;"	m	struct:window_choose_data	typeref:struct:session *
tss	shells/zsh/tmux.zsh	/^alias tss='tmux switch -t'$/;"	a
tty	src/dev/tmux/tmux.h	/^	char		 tty[TTY_NAME_MAX];$/;"	m	struct:window_pane	typeref:typename:char[]
tty	src/dev/tmux/tmux.h	/^	struct tty	 tty;$/;"	m	struct:client	typeref:struct:tty
tty	src/dev/tmux/tmux.h	/^struct tty {$/;"	s
tty_acs_cmp	src/dev/tmux/tty-acs.c	/^tty_acs_cmp(const void *key, const void *value)$/;"	f	typeref:typename:int	file:
tty_acs_entry	src/dev/tmux/tty-acs.c	/^struct tty_acs_entry {$/;"	s	file:
tty_acs_get	src/dev/tmux/tty-acs.c	/^tty_acs_get(struct tty *tty, u_char ch)$/;"	f	typeref:typename:const char *
tty_acs_needed	src/dev/tmux/tty-acs.c	/^tty_acs_needed(struct tty *tty)$/;"	f	typeref:typename:int
tty_acs_table	src/dev/tmux/tty-acs.c	/^static const struct tty_acs_entry tty_acs_table[] = {$/;"	v	typeref:typename:const struct tty_acs_entry[]	file:
tty_add	src/dev/tmux/tty.c	/^tty_add(struct tty *tty, const char *buf, size_t len)$/;"	f	typeref:typename:void	file:
tty_attributes	src/dev/tmux/tty.c	/^tty_attributes(struct tty *tty, const struct grid_cell *gc,$/;"	f	typeref:typename:void
tty_block_maybe	src/dev/tmux/tty.c	/^tty_block_maybe(struct tty *tty)$/;"	f	typeref:typename:int	file:
tty_cell	src/dev/tmux/tty.c	/^tty_cell(struct tty *tty, const struct grid_cell *gc,$/;"	f	typeref:typename:void	file:
tty_check_bg	src/dev/tmux/tty.c	/^tty_check_bg(struct tty *tty, const struct window_pane *wp,$/;"	f	typeref:typename:void	file:
tty_check_fg	src/dev/tmux/tty.c	/^tty_check_fg(struct tty *tty, const struct window_pane *wp,$/;"	f	typeref:typename:void	file:
tty_clear_area	src/dev/tmux/tty.c	/^tty_clear_area(struct tty *tty, const struct window_pane *wp, u_int py,$/;"	f	typeref:typename:void	file:
tty_clear_line	src/dev/tmux/tty.c	/^tty_clear_line(struct tty *tty, const struct window_pane *wp, u_int py,$/;"	f	typeref:typename:void	file:
tty_client_ready	src/dev/tmux/tty.c	/^tty_client_ready(struct client *c, struct window_pane *wp)$/;"	f	typeref:typename:int	file:
tty_close	src/dev/tmux/tty.c	/^tty_close(struct tty *tty)$/;"	f	typeref:typename:void
tty_cmd_alignmenttest	src/dev/tmux/tty.c	/^tty_cmd_alignmenttest(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_cell	src/dev/tmux/tty.c	/^tty_cmd_cell(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_cells	src/dev/tmux/tty.c	/^tty_cmd_cells(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_clearcharacter	src/dev/tmux/tty.c	/^tty_cmd_clearcharacter(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_clearendofline	src/dev/tmux/tty.c	/^tty_cmd_clearendofline(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_clearendofscreen	src/dev/tmux/tty.c	/^tty_cmd_clearendofscreen(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_clearline	src/dev/tmux/tty.c	/^tty_cmd_clearline(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_clearscreen	src/dev/tmux/tty.c	/^tty_cmd_clearscreen(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_clearstartofline	src/dev/tmux/tty.c	/^tty_cmd_clearstartofline(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_clearstartofscreen	src/dev/tmux/tty.c	/^tty_cmd_clearstartofscreen(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_deletecharacter	src/dev/tmux/tty.c	/^tty_cmd_deletecharacter(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_deleteline	src/dev/tmux/tty.c	/^tty_cmd_deleteline(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_insertcharacter	src/dev/tmux/tty.c	/^tty_cmd_insertcharacter(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_insertline	src/dev/tmux/tty.c	/^tty_cmd_insertline(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_linefeed	src/dev/tmux/tty.c	/^tty_cmd_linefeed(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_rawstring	src/dev/tmux/tty.c	/^tty_cmd_rawstring(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_reverseindex	src/dev/tmux/tty.c	/^tty_cmd_reverseindex(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_scrollup	src/dev/tmux/tty.c	/^tty_cmd_scrollup(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_cmd_setselection	src/dev/tmux/tty.c	/^tty_cmd_setselection(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void
tty_code	src/dev/tmux/tty-term.c	/^struct tty_code {$/;"	s	file:
tty_code_code	src/dev/tmux/tmux.h	/^enum tty_code_code {$/;"	g
tty_code_type	src/dev/tmux/tty-term.c	/^enum tty_code_type {$/;"	g	file:
tty_colours	src/dev/tmux/tty.c	/^tty_colours(struct tty *tty, const struct grid_cell *gc)$/;"	f	typeref:typename:void	file:
tty_colours_bg	src/dev/tmux/tty.c	/^tty_colours_bg(struct tty *tty, const struct grid_cell *gc)$/;"	f	typeref:typename:void	file:
tty_colours_fg	src/dev/tmux/tty.c	/^tty_colours_fg(struct tty *tty, const struct grid_cell *gc)$/;"	f	typeref:typename:void	file:
tty_create_log	src/dev/tmux/tty.c	/^tty_create_log(void)$/;"	f	typeref:typename:void
tty_ctx	src/dev/tmux/tmux.h	/^struct tty_ctx {$/;"	s
tty_cursor	src/dev/tmux/tty.c	/^tty_cursor(struct tty *tty, u_int cx, u_int cy)$/;"	f	typeref:typename:void
tty_cursor_pane	src/dev/tmux/tty.c	/^tty_cursor_pane(struct tty *tty, const struct tty_ctx *ctx, u_int cx, u_int cy)$/;"	f	typeref:typename:void	file:
tty_cursor_pane_unless_wrap	src/dev/tmux/tty.c	/^tty_cursor_pane_unless_wrap(struct tty *tty, const struct tty_ctx *ctx,$/;"	f	typeref:typename:void	file:
tty_default_attributes	src/dev/tmux/tty.c	/^tty_default_attributes(struct tty *tty, const struct window_pane *wp, u_int bg)$/;"	f	typeref:typename:void	file:
tty_default_code_keys	src/dev/tmux/tty-keys.c	/^static const struct tty_default_key_code tty_default_code_keys[] = {$/;"	v	typeref:typename:const struct tty_default_key_code[]	file:
tty_default_colours	src/dev/tmux/tty.c	/^tty_default_colours(struct grid_cell *gc, const struct window_pane *wp)$/;"	f	typeref:typename:void	file:
tty_default_key_code	src/dev/tmux/tty-keys.c	/^struct tty_default_key_code {$/;"	s	file:
tty_default_key_raw	src/dev/tmux/tty-keys.c	/^struct tty_default_key_raw {$/;"	s	file:
tty_default_raw_keys	src/dev/tmux/tty-keys.c	/^static const struct tty_default_key_raw tty_default_raw_keys[] = {$/;"	v	typeref:typename:const struct tty_default_key_raw[]	file:
tty_draw_line	src/dev/tmux/tty.c	/^tty_draw_line(struct tty *tty, const struct window_pane *wp,$/;"	f	typeref:typename:void
tty_draw_pane	src/dev/tmux/tty.c	/^tty_draw_pane(struct tty *tty, const struct window_pane *wp, u_int py, u_int ox,$/;"	f	typeref:typename:void
tty_emulate_repeat	src/dev/tmux/tty.c	/^tty_emulate_repeat(struct tty *tty, enum tty_code_code code,$/;"	f	typeref:typename:void	file:
tty_fake_bce	src/dev/tmux/tty.c	/^tty_fake_bce(const struct tty *tty, const struct window_pane *wp, u_int bg)$/;"	f	typeref:typename:int	file:
tty_force_cursor_colour	src/dev/tmux/tty.c	/^tty_force_cursor_colour(struct tty *tty, const char *ccolour)$/;"	f	typeref:typename:void	file:
tty_free	src/dev/tmux/tty.c	/^tty_free(struct tty *tty)$/;"	f	typeref:typename:void
tty_init	src/dev/tmux/tty.c	/^tty_init(struct tty *tty, struct client *c, int fd, char *term)$/;"	f	typeref:typename:int
tty_invalidate	src/dev/tmux/tty.c	/^tty_invalidate(struct tty *tty)$/;"	f	typeref:typename:void	file:
tty_key	src/dev/tmux/tmux.h	/^struct tty_key {$/;"	s
tty_keys_add	src/dev/tmux/tty-keys.c	/^tty_keys_add(struct tty *tty, const char *s, key_code key)$/;"	f	typeref:typename:void	file:
tty_keys_add1	src/dev/tmux/tty-keys.c	/^tty_keys_add1(struct tty_key **tkp, const char *s, key_code key)$/;"	f	typeref:typename:void	file:
tty_keys_build	src/dev/tmux/tty-keys.c	/^tty_keys_build(struct tty *tty)$/;"	f	typeref:typename:void
tty_keys_callback	src/dev/tmux/tty-keys.c	/^tty_keys_callback(__unused int fd, __unused short events, void *data)$/;"	f	typeref:typename:void	file:
tty_keys_device_attributes	src/dev/tmux/tty-keys.c	/^tty_keys_device_attributes(struct tty *tty, const char *buf, size_t len,$/;"	f	typeref:typename:int	file:
tty_keys_find	src/dev/tmux/tty-keys.c	/^tty_keys_find(struct tty *tty, const char *buf, size_t len, size_t *size)$/;"	f	typeref:struct:tty_key *	file:
tty_keys_find1	src/dev/tmux/tty-keys.c	/^tty_keys_find1(struct tty_key *tk, const char *buf, size_t len, size_t *size)$/;"	f	typeref:struct:tty_key *	file:
tty_keys_free	src/dev/tmux/tty-keys.c	/^tty_keys_free(struct tty *tty)$/;"	f	typeref:typename:void
tty_keys_free1	src/dev/tmux/tty-keys.c	/^tty_keys_free1(struct tty_key *tk)$/;"	f	typeref:typename:void	file:
tty_keys_mouse	src/dev/tmux/tty-keys.c	/^tty_keys_mouse(struct tty *tty, const char *buf, size_t len, size_t *size)$/;"	f	typeref:typename:int	file:
tty_keys_next	src/dev/tmux/tty-keys.c	/^tty_keys_next(struct tty *tty)$/;"	f	typeref:typename:key_code
tty_keys_next1	src/dev/tmux/tty-keys.c	/^tty_keys_next1(struct tty *tty, const char *buf, size_t len, key_code *key,$/;"	f	typeref:typename:int	file:
tty_large_region	src/dev/tmux/tty.c	/^tty_large_region(__unused struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:int	file:
tty_log_fd	src/dev/tmux/tty.c	/^static int	tty_log_fd = -1;$/;"	v	typeref:typename:int	file:
tty_margin	src/dev/tmux/tty.c	/^tty_margin(struct tty *tty, u_int rleft, u_int rright)$/;"	f	typeref:typename:void	file:
tty_margin_off	src/dev/tmux/tty.c	/^tty_margin_off(struct tty *tty)$/;"	f	typeref:typename:void
tty_margin_pane	src/dev/tmux/tty.c	/^tty_margin_pane(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void	file:
tty_open	src/dev/tmux/tty.c	/^tty_open(struct tty *tty, char **cause)$/;"	f	typeref:typename:int
tty_pane_full_width	src/dev/tmux/tty.c	/^#define tty_pane_full_width(/;"	d	file:
tty_putc	src/dev/tmux/tty.c	/^tty_putc(struct tty *tty, u_char ch)$/;"	f	typeref:typename:void
tty_putcode	src/dev/tmux/tty.c	/^tty_putcode(struct tty *tty, enum tty_code_code code)$/;"	f	typeref:typename:void
tty_putcode1	src/dev/tmux/tty.c	/^tty_putcode1(struct tty *tty, enum tty_code_code code, int a)$/;"	f	typeref:typename:void
tty_putcode2	src/dev/tmux/tty.c	/^tty_putcode2(struct tty *tty, enum tty_code_code code, int a, int b)$/;"	f	typeref:typename:void
tty_putcode3	src/dev/tmux/tty.c	/^tty_putcode3(struct tty *tty, enum tty_code_code code, int a, int b, int c)$/;"	f	typeref:typename:void
tty_putcode_ptr1	src/dev/tmux/tty.c	/^tty_putcode_ptr1(struct tty *tty, enum tty_code_code code, const void *a)$/;"	f	typeref:typename:void
tty_putcode_ptr2	src/dev/tmux/tty.c	/^tty_putcode_ptr2(struct tty *tty, enum tty_code_code code, const void *a,$/;"	f	typeref:typename:void
tty_putn	src/dev/tmux/tty.c	/^tty_putn(struct tty *tty, const void *buf, size_t len, u_int width)$/;"	f	typeref:typename:void
tty_puts	src/dev/tmux/tty.c	/^tty_puts(struct tty *tty, const char *s)$/;"	f	typeref:typename:void
tty_raw	src/dev/tmux/tty.c	/^tty_raw(struct tty *tty, const char *s)$/;"	f	typeref:typename:void
tty_read_callback	src/dev/tmux/tty.c	/^tty_read_callback(__unused int fd, __unused short events, void *data)$/;"	f	typeref:typename:void	file:
tty_redraw_region	src/dev/tmux/tty.c	/^tty_redraw_region(struct tty *tty, const struct tty_ctx *ctx)$/;"	f	typeref:typename:void	file:
tty_region	src/dev/tmux/tty.c	/^tty_region(struct tty *tty, u_int rupper, u_int rlower)$/;"	f	typeref:typename:void	file:
tty_region_off	src/dev/tmux/tty.c	/^tty_region_off(struct tty *tty)$/;"	f	typeref:typename:void
tty_region_pane	src/dev/tmux/tty.c	/^tty_region_pane(struct tty *tty, const struct tty_ctx *ctx, u_int rupper,$/;"	f	typeref:typename:void	file:
tty_repeat_space	src/dev/tmux/tty.c	/^tty_repeat_space(struct tty *tty, u_int n)$/;"	f	typeref:typename:void	file:
tty_reset	src/dev/tmux/tty.c	/^tty_reset(struct tty *tty)$/;"	f	typeref:typename:void
tty_resize	src/dev/tmux/tty.c	/^tty_resize(struct tty *tty)$/;"	f	typeref:typename:void
tty_set_italics	src/dev/tmux/tty.c	/^tty_set_italics(struct tty *tty)$/;"	f	typeref:typename:void	file:
tty_set_size	src/dev/tmux/tty.c	/^tty_set_size(struct tty *tty, u_int sx, u_int sy)$/;"	f	typeref:typename:void
tty_set_title	src/dev/tmux/tty.c	/^tty_set_title(struct tty *tty, const char *title)$/;"	f	typeref:typename:void
tty_set_type	src/dev/tmux/tty.c	/^tty_set_type(struct tty *tty, int type)$/;"	f	typeref:typename:void
tty_start_tty	src/dev/tmux/tty.c	/^tty_start_tty(struct tty *tty)$/;"	f	typeref:typename:void
tty_stop_tty	src/dev/tmux/tty.c	/^tty_stop_tty(struct tty *tty)$/;"	f	typeref:typename:void
tty_term	src/dev/tmux/tmux.h	/^struct tty_term {$/;"	s
tty_term_code_entry	src/dev/tmux/tty-term.c	/^struct tty_term_code_entry {$/;"	s	file:
tty_term_codes	src/dev/tmux/tty-term.c	/^static const struct tty_term_code_entry tty_term_codes[] = {$/;"	v	typeref:typename:const struct tty_term_code_entry[]	file:
tty_term_describe	src/dev/tmux/tty-term.c	/^tty_term_describe(struct tty_term *term, enum tty_code_code code)$/;"	f	typeref:typename:const char *
tty_term_find	src/dev/tmux/tty-term.c	/^tty_term_find(char *name, int fd, char **cause)$/;"	f	typeref:struct:tty_term *
tty_term_flag	src/dev/tmux/tty-term.c	/^tty_term_flag(struct tty_term *term, enum tty_code_code code)$/;"	f	typeref:typename:int
tty_term_free	src/dev/tmux/tty-term.c	/^tty_term_free(struct tty_term *term)$/;"	f	typeref:typename:void
tty_term_has	src/dev/tmux/tty-term.c	/^tty_term_has(struct tty_term *term, enum tty_code_code code)$/;"	f	typeref:typename:int
tty_term_ncodes	src/dev/tmux/tty-term.c	/^tty_term_ncodes(void)$/;"	f	typeref:typename:u_int
tty_term_number	src/dev/tmux/tty-term.c	/^tty_term_number(struct tty_term *term, enum tty_code_code code)$/;"	f	typeref:typename:int
tty_term_override	src/dev/tmux/tty-term.c	/^tty_term_override(struct tty_term *term, const char *override)$/;"	f	typeref:typename:void	file:
tty_term_ptr1	src/dev/tmux/tty-term.c	/^tty_term_ptr1(struct tty_term *term, enum tty_code_code code, const void *a)$/;"	f	typeref:typename:const char *
tty_term_ptr2	src/dev/tmux/tty-term.c	/^tty_term_ptr2(struct tty_term *term, enum tty_code_code code, const void *a,$/;"	f	typeref:typename:const char *
tty_term_string	src/dev/tmux/tty-term.c	/^tty_term_string(struct tty_term *term, enum tty_code_code code)$/;"	f	typeref:typename:const char *
tty_term_string1	src/dev/tmux/tty-term.c	/^tty_term_string1(struct tty_term *term, enum tty_code_code code, int a)$/;"	f	typeref:typename:const char *
tty_term_string2	src/dev/tmux/tty-term.c	/^tty_term_string2(struct tty_term *term, enum tty_code_code code, int a, int b)$/;"	f	typeref:typename:const char *
tty_term_string3	src/dev/tmux/tty-term.c	/^tty_term_string3(struct tty_term *term, enum tty_code_code code, int a, int b, int c)$/;"	f	typeref:typename:const char *
tty_term_strip	src/dev/tmux/tty-term.c	/^tty_term_strip(const char *s)$/;"	f	typeref:typename:char *	file:
tty_terms	src/dev/tmux/tty-term.c	/^struct tty_terms tty_terms = LIST_HEAD_INITIALIZER(tty_terms);$/;"	v	typeref:struct:tty_terms
tty_timer_callback	src/dev/tmux/tty.c	/^tty_timer_callback(__unused int fd, __unused short events, void *data)$/;"	f	typeref:typename:void	file:
tty_try_colour	src/dev/tmux/tty.c	/^tty_try_colour(struct tty *tty, int colour, const char *type)$/;"	f	typeref:typename:int	file:
tty_update_mode	src/dev/tmux/tty.c	/^tty_update_mode(struct tty *tty, int mode, struct screen *s)$/;"	f	typeref:typename:void
tty_use_margin	src/dev/tmux/tty.c	/^#define tty_use_margin(/;"	d	file:
tty_write	src/dev/tmux/tty.c	/^tty_write(void (*cmdfn)(struct tty *, const struct tty_ctx *),$/;"	f	typeref:typename:void
tty_write_callback	src/dev/tmux/tty.c	/^tty_write_callback(__unused int fd, __unused short events, void *data)$/;"	f	typeref:typename:void	file:
ttyname	src/dev/tmux/tmux.h	/^	char		*ttyname;$/;"	m	struct:client	typeref:typename:char *
type	src/dev/tmux/compat/imsg.h	/^	uint32_t	 type;$/;"	m	struct:imsg_hdr	typeref:typename:uint32_t
type	src/dev/tmux/input.c	/^	int		type;$/;"	m	struct:input_table_entry	typeref:typename:int	file:
type	src/dev/tmux/tmux.h	/^	enum cmd_find_type	 type;$/;"	m	struct:cmd_entry_flag	typeref:enum:cmd_find_type
type	src/dev/tmux/tmux.h	/^	enum cmdq_type		 type;$/;"	m	struct:cmdq_item	typeref:enum:cmdq_type
type	src/dev/tmux/tmux.h	/^	enum layout_type type;$/;"	m	struct:layout_cell	typeref:enum:layout_type
type	src/dev/tmux/tmux.h	/^	enum options_table_type	  type;$/;"	m	struct:options_table_entry	typeref:enum:options_table_type
type	src/dev/tmux/tmux.h	/^	int			 type;$/;"	m	struct:window_choose_data	typeref:typename:int
type	src/dev/tmux/tty-term.c	/^	enum tty_code_type	type;$/;"	m	struct:tty_code	typeref:enum:tty_code_type	file:
type	src/dev/tmux/tty-term.c	/^	enum tty_code_type	type;$/;"	m	struct:tty_term_code_entry	typeref:enum:tty_code_type	file:
type	src/dev/tmux/window-tree.c	/^	enum window_tree_type		  type;$/;"	m	struct:window_tree_modedata	typeref:enum:window_tree_type	file:
type	src/dev/tmux/window-tree.c	/^	enum window_tree_type	type;$/;"	m	struct:window_tree_itemdata	typeref:enum:window_tree_type	file:
tzname	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def tzname(self, dt):$/;"	m	class:_make_objects.FixedOffset
tzname	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def tzname(self, dt):$/;"	m	class:_make_objects.FixedOffset
uint16_t	src/dev/ninja/src/win32port.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint64_t	src/dev/ninja/src/win32port.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
unbind	terminals/tmux/tmux.conf	/^unbind =$/;"	k
unclassified_plugins=	src/zplug/base/sources/github.zsh	/^    unclassified_plugins=()$/;"	f
unclassified_plugins=	src/zplug/base/sources/oh-my-zsh.zsh	/^    unclassified_plugins=()$/;"	f
unclassified_plugins=	src/zplug/base/sources/prezto.zsh	/^    unclassified_plugins=()$/;"	f
unclassified_plugins=	src/zplug/repos/zplug/zplug/base/sources/github.zsh	/^    unclassified_plugins=()$/;"	f
unclassified_plugins=	src/zplug/repos/zplug/zplug/base/sources/oh-my-zsh.zsh	/^    unclassified_plugins=()$/;"	f
unclassified_plugins=	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^    unclassified_plugins=()$/;"	f
undo	terminals/tmux/plugins/tpm/lib/tmux-test/setup	/^undo() {$/;"	f
undoskip	editors/vim/plugin/vault.vim	/^	augroup undoskip$/;"	a
unidecode	shells/general/functions.bash	/^function unidecode() {$/;"	f
unidecode	shells/zsh/functions.zsh	/^function unidecode() {$/;"	f
uninstall	editors/vim/Makefile	/^uninstall:$/;"	t
uninstall	src/dev/tmux/Makefile	/^uninstall: uninstall-am$/;"	t
uninstall	src/dev/tmux/Makefile.in	/^uninstall: uninstall-am$/;"	t
uninstall-am	src/dev/tmux/Makefile	/^uninstall-am: uninstall-binPROGRAMS$/;"	t
uninstall-am	src/dev/tmux/Makefile.in	/^uninstall-am: uninstall-binPROGRAMS$/;"	t
uninstall-binPROGRAMS	src/dev/tmux/Makefile	/^uninstall-binPROGRAMS:$/;"	t
uninstall-binPROGRAMS	src/dev/tmux/Makefile.in	/^uninstall-binPROGRAMS:$/;"	t
unlink	src/dev/ninja/src/util.h	/^#define unlink /;"	d
unsetenv	src/dev/tmux/compat/setenv.c	/^unsetenv(const char *name)$/;"	f	typeref:typename:int
unsupported_version_message	terminals/tmux/plugins/tpm/scripts/check_tmux_version.sh	/^unsupported_version_message() {$/;"	f
until_success	meta/dotbot/test/driver-lib.bash	/^until_success() {$/;"	f
unvis	src/dev/tmux/compat/unvis.c	/^unvis(char *cp, char c, int *astate, int flag)$/;"	f	typeref:typename:int
unwind_indent	meta/dotbot/lib/pyyaml/lib/yaml/scanner.py	/^    def unwind_indent(self, column):$/;"	m	class:Scanner
unwind_indent	meta/dotbot/lib/pyyaml/lib3/yaml/scanner.py	/^    def unwind_indent(self, column):$/;"	m	class:Scanner
update	editors/vim/Makefile	/^update:$/;"	t
update	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def update(self, length):$/;"	m	class:Reader
update	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def update(self, length):$/;"	m	class:Reader
update	terminals/tmux/plugins/tpm/scripts/update_plugin.sh	/^update() {$/;"	f
update_all	terminals/tmux/plugins/tpm/scripts/update_plugin.sh	/^update_all() {$/;"	f
update_plugin_prompt	terminals/tmux/plugins/tpm/bindings/update_plugins	/^update_plugin_prompt() {$/;"	f
update_plugins	terminals/tmux/plugins/tpm/scripts/update_plugin.sh	/^update_plugins() {$/;"	f
update_raw	meta/dotbot/lib/pyyaml/lib/yaml/reader.py	/^    def update_raw(self, size=1024):$/;"	m	class:Reader
update_raw	meta/dotbot/lib/pyyaml/lib3/yaml/reader.py	/^    def update_raw(self, size=4096):$/;"	m	class:Reader
updatecb	src/dev/tmux/tmux.h	/^	job_update_cb		 updatecb;$/;"	m	struct:job	typeref:typename:job_update_cb
updated	src/dev/tmux/format.c	/^	int			 updated;$/;"	m	struct:format_job	typeref:typename:int	file:
upgrade	editors/vim/Makefile	/^upgrade: update$/;"	t
upper	src/dev/tmux/tmux.h	/^		int		 upper;$/;"	m	struct:cmd_entry::__anonc903038b0708	typeref:typename:int
upstream_branch	shells/zsh/theme/prompt.zsh	/^upstream_branch() {$/;"	f
usage	src/dev/tmux/tmux.c	/^usage(void)$/;"	f	typeref:typename:__dead void	file:
usage	src/dev/tmux/tmux.h	/^	const char		*usage;$/;"	m	struct:cmd_entry	typeref:typename:const char *
use_cache_	src/dev/ninja/src/disk_interface.h	/^  bool use_cache_;$/;"	m	struct:RealDiskInterface	typeref:typename:bool
use_console	src/dev/ninja/src/graph.cc	/^bool Edge::use_console() const {$/;"	f	class:Edge	typeref:typename:bool
use_console_	src/dev/ninja/src/subprocess.h	/^  bool use_console_;$/;"	m	struct:Subprocess	typeref:typename:bool
use_terminal256formatter	languages/python/pdbrc.py	/^    use_terminal256formatter = False$/;"	v	class:Config
used	src/dev/tmux/screen-write.c	/^	u_int			 used;$/;"	m	struct:screen_write_collect_item	typeref:typename:u_int	file:
user.head.content	src/dev/ninja/doc/docbook.xsl	/^  <xsl:template name="user.head.content"><style>&css;<\/style><\/xsl:template>$/;"	n
user_options	meta/dotbot/lib/pyyaml/setup.py	/^    user_options = []$/;"	v	class:test
uses_usr_local	src/dev/ninja/configure.py	/^    def uses_usr_local(self):$/;"	m	class:Platform
using `zle -U`	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/zle_input_stack_spec.rb	/^describe 'using `zle -U`' do$/;"	d
utcoffset	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        def utcoffset(self, dt):$/;"	m	class:_make_objects.FixedOffset
utcoffset	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        def utcoffset(self, dt):$/;"	m	class:_make_objects.FixedOffset
utempter	src/dev/tmux/configure.ac	/^	utempter,$/;"	e
utf8_append	src/dev/tmux/utf8.c	/^utf8_append(struct utf8_data *ud, u_char ch)$/;"	f	typeref:enum:utf8_state
utf8_combine	src/dev/tmux/utf8.c	/^utf8_combine(const struct utf8_data *ud, wchar_t *wc)$/;"	f	typeref:enum:utf8_state
utf8_copy	src/dev/tmux/utf8.c	/^utf8_copy(struct utf8_data *to, const struct utf8_data *from)$/;"	f	typeref:typename:void
utf8_cstrwidth	src/dev/tmux/utf8.c	/^utf8_cstrwidth(const char *s)$/;"	f	typeref:typename:u_int
utf8_data	src/dev/tmux/tmux.h	/^struct utf8_data {$/;"	s
utf8_fromcstr	src/dev/tmux/utf8.c	/^utf8_fromcstr(const char *src)$/;"	f	typeref:struct:utf8_data *
utf8_isvalid	src/dev/tmux/utf8.c	/^utf8_isvalid(const char *s)$/;"	f	typeref:typename:int
utf8_open	src/dev/tmux/utf8.c	/^utf8_open(struct utf8_data *ud, u_char ch)$/;"	f	typeref:enum:utf8_state
utf8_padcstr	src/dev/tmux/utf8.c	/^utf8_padcstr(const char *s, u_int width)$/;"	f	typeref:typename:char *
utf8_rtrimcstr	src/dev/tmux/utf8.c	/^utf8_rtrimcstr(const char *s, u_int width)$/;"	f	typeref:typename:char *
utf8_sanitize	src/dev/tmux/utf8.c	/^utf8_sanitize(const char *src)$/;"	f	typeref:typename:char *
utf8_set	src/dev/tmux/utf8.c	/^utf8_set(struct utf8_data *ud, u_char ch)$/;"	f	typeref:typename:void
utf8_split	src/dev/tmux/utf8.c	/^utf8_split(wchar_t wc, struct utf8_data *ud)$/;"	f	typeref:enum:utf8_state
utf8_state	src/dev/tmux/tmux.h	/^enum utf8_state {$/;"	g
utf8_stravis	src/dev/tmux/utf8.c	/^utf8_stravis(char **dst, const char *src, int flag)$/;"	f	typeref:typename:int
utf8_strlen	src/dev/tmux/utf8.c	/^utf8_strlen(const struct utf8_data *s)$/;"	f	typeref:typename:size_t
utf8_strvis	src/dev/tmux/utf8.c	/^utf8_strvis(char *dst, const char *src, size_t len, int flag)$/;"	f	typeref:typename:int
utf8_strwidth	src/dev/tmux/utf8.c	/^utf8_strwidth(const struct utf8_data *s, ssize_t n)$/;"	f	typeref:typename:u_int
utf8_tocstr	src/dev/tmux/utf8.c	/^utf8_tocstr(struct utf8_data *src)$/;"	f	typeref:typename:char *
utf8_trimcstr	src/dev/tmux/utf8.c	/^utf8_trimcstr(const char *s, u_int width)$/;"	f	typeref:typename:char *
utf8_width	src/dev/tmux/utf8.c	/^utf8_width(wchar_t wc)$/;"	f	typeref:typename:int	file:
utf8data	src/dev/tmux/input.c	/^	struct utf8_data	utf8data;$/;"	m	struct:input_ctx	typeref:struct:utf8_data	file:
utf8proc	src/dev/tmux/configure.ac	/^	utf8proc,$/;"	e
utf8proc_mbtowc	src/dev/tmux/compat/utf8proc.c	/^utf8proc_mbtowc(wchar_t *pwc, const char *s, size_t n)$/;"	f	typeref:typename:int
utf8proc_wctomb	src/dev/tmux/compat/utf8proc.c	/^utf8proc_wctomb(char *s, wchar_t wc)$/;"	f	typeref:typename:int
utf8proc_wcwidth	src/dev/tmux/compat/utf8proc.c	/^utf8proc_wcwidth(wchar_t wc)$/;"	f	typeref:typename:int
v	editors/vim/config/plugins/all.vim	/^	xmap v <Plug>(expand_region_expand)$/;"	m
val	src/dev/ninja/src/getopt.h	/^  int val;                      \/* determines the value to return if flag is$/;"	m	struct:GETOPT_LONG_OPTION_T	typeref:typename:int
valid	src/dev/tmux/tmux.h	/^	int		valid;$/;"	m	struct:mouse_event	typeref:typename:int
value	src/dev/tmux/arguments.c	/^	char			*value;$/;"	m	struct:args_entry	typeref:typename:char *	file:
value	src/dev/tmux/format.c	/^	char			*value;$/;"	m	struct:format_entry	typeref:typename:char *	file:
value	src/dev/tmux/tmux.h	/^	char		*value;$/;"	m	struct:environ_entry	typeref:typename:char *
value	src/dev/tmux/tty-term.c	/^	} value;$/;"	m	struct:tty_code	typeref:union:tty_code::__anonc9119abe010a	file:
variable	src/dev/ninja/configure.py	/^    def variable(self, key, val):$/;"	m	class:Bootstrap
variable	src/dev/ninja/misc/ninja_syntax.py	/^    def variable(self, key, value, indent=0):$/;"	m	class:Writer
vasprintf	src/dev/tmux/compat/asprintf.c	/^vasprintf(char **ret, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
verbosity	src/dev/ninja/src/build.h	/^  Verbosity verbosity;$/;"	m	struct:BuildConfig	typeref:typename:Verbosity
verify_tpm_path_permissions	terminals/tmux/plugins/tpm/scripts/install_plugins.sh	/^verify_tpm_path_permissions() {$/;"	f
version	src/crouton-clipboard/manifest.json	/^  "version": "1.0",$/;"	s
vim	editors/vim/Makefile	/^vim := $(if $(shell which nvim),nvim,$(shell which vim))$/;"	m
vim	shells/general/aliases.bash	/^alias vim="vim"$/;"	a
vim	shells/zsh/aliases.zsh	/^alias vim="vim"$/;"	a
vim_version	editors/vim/Makefile	/^vim_version := '${shell $(vim) --version}'$/;"	m
viminfoskip	editors/vim/plugin/vault.vim	/^augroup viminfoskip$/;"	a
vis	src/dev/tmux/compat/vis.c	/^vis(char *dst, int c, int flag, int nextc)$/;"	f	typeref:typename:char *
visited_edges_	src/dev/ninja/src/graphviz.h	/^  std::set<Edge*> visited_edges_;$/;"	m	struct:GraphViz	typeref:typename:std::set<Edge * >
visited_nodes_	src/dev/ninja/src/graphviz.h	/^  std::set<Node*> visited_nodes_;$/;"	m	struct:GraphViz	typeref:typename:std::set<Node * >
vpn	shells/general/aliases.bash	/^alias vpn="sudo service openvpn start"$/;"	a
vpn	shells/zsh/aliases.zsh	/^alias vpn="sudo service openvpn start"$/;"	a
w	editors/vim/config/plugins/all.vim	/^	nmap <silent> w <Plug>CamelCaseMotion_w$/;"	m
w	editors/vim/config/plugins/all.vim	/^	omap <silent> w <Plug>CamelCaseMotion_w$/;"	m
w	editors/vim/config/plugins/all.vim	/^	xmap <silent> w <Plug>CamelCaseMotion_w$/;"	m
w	src/dev/tmux/compat/imsg.h	/^	struct msgbuf		 w;$/;"	m	struct:imsgbuf	typeref:struct:msgbuf
w	src/dev/tmux/format.c	/^	struct window		*w;$/;"	m	struct:format_tree	typeref:struct:window *	file:
w	src/dev/tmux/tmux.h	/^	int		w;$/;"	m	struct:mouse_event	typeref:typename:int
w	src/dev/tmux/tmux.h	/^	struct window		*w;$/;"	m	struct:cmd_find_state	typeref:struct:window *
wait_channel	src/dev/tmux/cmd-wait-for.c	/^struct wait_channel {$/;"	s	file:
wait_channel_cmp	src/dev/tmux/cmd-wait-for.c	/^wait_channel_cmp(struct wait_channel *wc1, struct wait_channel *wc2)$/;"	f	typeref:typename:int	file:
wait_channels	src/dev/tmux/cmd-wait-for.c	/^static struct wait_channels wait_channels = RB_INITIALIZER(wait_channels);$/;"	v	typeref:struct:wait_channels	file:
wait_for_vagrant	meta/dotbot/test/driver-lib.bash	/^wait_for_vagrant() {$/;"	f
wait_item	src/dev/tmux/cmd-wait-for.c	/^struct wait_item {$/;"	s	file:
want_	src/dev/ninja/src/build.h	/^  map<Edge*, bool> want_;$/;"	m	struct:Plan	typeref:typename:map<Edge *,bool>
wanted_edges_	src/dev/ninja/src/build.h	/^  int wanted_edges_;$/;"	m	struct:Plan	typeref:typename:int
warn	src/dev/tmux/compat/err.c	/^warn(const char *fmt, ...)$/;"	f	typeref:typename:void
warning	meta/dotbot/dotbot/messenger/messenger.py	/^    def warning(self, message):$/;"	m	class:Messenger
warnx	src/dev/tmux/compat/err.c	/^warnx(const char *fmt, ...)$/;"	f	typeref:typename:void
weight	src/dev/ninja/src/graph.h	/^  int weight() const { return 1; }$/;"	f	struct:Edge	typeref:typename:int
when	src/dev/ninja/src/ninja.cc	/^  } when;$/;"	m	struct:__anon193baac40110::Tool	typeref:enum:__anon193baac40110::Tool::__anon193baac40203	file:
when ZSH_AUTOSUGGEST_ASYNC_PTY_NAME is set	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/async_zpty_name_spec.rb	/^    context 'when ZSH_AUTOSUGGEST_ASYNC_PTY_NAME is set' do$/;"	c
when ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE is specified	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/buffer_max_size_spec.rb	/^  context 'when ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE is specified' do$/;"	c
when ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE is set to a zle_highlight string	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/highlight_style_spec.rb	/^  describe 'when ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE is set to a zle_highlight string' do$/;"	d
when ZSH_AUTOSUGGEST_ORIGINAL_WIDGET_PREFIX is set	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/original_widget_prefix_spec.rb	/^  context 'when ZSH_AUTOSUGGEST_ORIGINAL_WIDGET_PREFIX is set' do$/;"	c
when ZSH_AUTOSUGGEST_STRATEGY is set	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/strategy_spec.rb	/^  context 'when ZSH_AUTOSUGGEST_STRATEGY is set' do$/;"	c
when ZSH_AUTOSUGGEST_USE_ASYNC is set	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/use_async_spec.rb	/^  context 'when ZSH_AUTOSUGGEST_USE_ASYNC is set' do$/;"	c
when added to ZSH_AUTOSUGGEST_ACCEPT_WIDGETS	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^  context 'when added to ZSH_AUTOSUGGEST_ACCEPT_WIDGETS' do$/;"	c
when added to ZSH_AUTOSUGGEST_CLEAR_WIDGETS	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^  context 'when added to ZSH_AUTOSUGGEST_CLEAR_WIDGETS' do$/;"	c
when added to ZSH_AUTOSUGGEST_EXECUTE_WIDGETS	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^  context 'when added to ZSH_AUTOSUGGEST_EXECUTE_WIDGETS' do$/;"	c
when added to ZSH_AUTOSUGGEST_IGNORE_WIDGETS	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^  context 'when added to ZSH_AUTOSUGGEST_IGNORE_WIDGETS' do$/;"	c
when added to ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^    context 'when added to ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS' do$/;"	c
when async suggestions are enabled	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/async_zpty_name_spec.rb	/^context 'when async suggestions are enabled' do$/;"	c
when not added to any of the widget lists	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/options/widget_lists_spec.rb	/^    context 'when not added to any of the widget lists' do$/;"	c
when suggestions are disabled	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/widgets/fetch_spec.rb	/^  context 'when suggestions are disabled' do$/;"	c
whichcd	shells/general/aliases.bash	/^function whichcd() {$/;"	f
whichcd	shells/zsh/aliases.zsh	/^function whichcd() {$/;"	f
width	src/dev/tmux/mode-tree.c	/^	u_int			  width;$/;"	m	struct:mode_tree_data	typeref:typename:u_int	file:
width	src/dev/tmux/tmux.h	/^	u_char	width;	\/* 0xff if invalid *\/$/;"	m	struct:utf8_data	typeref:typename:u_char
windist	meta/dotbot/lib/pyyaml/Makefile	/^windist:$/;"	t
window	src/dev/tmux/notify.c	/^	struct window		*window;$/;"	m	struct:notify_entry	typeref:struct:window *	file:
window	src/dev/tmux/tmux.h	/^	struct window	*window;$/;"	m	struct:window_pane	typeref:struct:window *
window	src/dev/tmux/tmux.h	/^	struct window	*window;$/;"	m	struct:winlink	typeref:struct:window *
window	src/dev/tmux/tmux.h	/^struct window {$/;"	s
window_add_pane	src/dev/tmux/window.c	/^window_add_pane(struct window *w, struct window_pane *other, int before,$/;"	f	typeref:struct:window_pane *
window_add_ref	src/dev/tmux/window.c	/^window_add_ref(struct window *w, const char *from)$/;"	f	typeref:typename:void
window_buffer_add_item	src/dev/tmux/window-buffer.c	/^window_buffer_add_item(struct window_buffer_modedata *data)$/;"	f	typeref:struct:window_buffer_itemdata *	file:
window_buffer_build	src/dev/tmux/window-buffer.c	/^window_buffer_build(void *modedata, u_int sort_type, __unused uint64_t *tag,$/;"	f	typeref:typename:void	file:
window_buffer_cmp_name	src/dev/tmux/window-buffer.c	/^window_buffer_cmp_name(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_buffer_cmp_size	src/dev/tmux/window-buffer.c	/^window_buffer_cmp_size(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_buffer_cmp_time	src/dev/tmux/window-buffer.c	/^window_buffer_cmp_time(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_buffer_do_delete	src/dev/tmux/window-buffer.c	/^window_buffer_do_delete(void* modedata, void *itemdata, __unused key_code key)$/;"	f	typeref:typename:void	file:
window_buffer_draw	src/dev/tmux/window-buffer.c	/^window_buffer_draw(__unused void *modedata, void *itemdata, u_int sx, u_int sy)$/;"	f	typeref:struct:screen *	file:
window_buffer_free	src/dev/tmux/window-buffer.c	/^window_buffer_free(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_buffer_free_item	src/dev/tmux/window-buffer.c	/^window_buffer_free_item(struct window_buffer_itemdata *item)$/;"	f	typeref:typename:void	file:
window_buffer_init	src/dev/tmux/window-buffer.c	/^window_buffer_init(struct window_pane *wp, __unused struct cmd_find_state *fs,$/;"	f	typeref:struct:screen *	file:
window_buffer_itemdata	src/dev/tmux/window-buffer.c	/^struct window_buffer_itemdata {$/;"	s	file:
window_buffer_key	src/dev/tmux/window-buffer.c	/^window_buffer_key(struct window_pane *wp, struct client *c,$/;"	f	typeref:typename:void	file:
window_buffer_mode	src/dev/tmux/window-buffer.c	/^const struct window_mode window_buffer_mode = {$/;"	v	typeref:typename:const struct window_mode
window_buffer_modedata	src/dev/tmux/window-buffer.c	/^struct window_buffer_modedata {$/;"	s	file:
window_buffer_resize	src/dev/tmux/window-buffer.c	/^window_buffer_resize(struct window_pane *wp, u_int sx, u_int sy)$/;"	f	typeref:typename:void	file:
window_buffer_search	src/dev/tmux/window-buffer.c	/^window_buffer_search(__unused void *modedata, void *itemdata, const char *ss)$/;"	f	typeref:typename:int	file:
window_buffer_sort_list	src/dev/tmux/window-buffer.c	/^static const char *window_buffer_sort_list[] = {$/;"	v	typeref:typename:const char * []	file:
window_buffer_sort_type	src/dev/tmux/window-buffer.c	/^enum window_buffer_sort_type {$/;"	g	file:
window_choose_data	src/dev/tmux/tmux.h	/^struct window_choose_data {$/;"	s
window_client_add_item	src/dev/tmux/window-client.c	/^window_client_add_item(struct window_client_modedata *data)$/;"	f	typeref:struct:window_client_itemdata *	file:
window_client_build	src/dev/tmux/window-client.c	/^window_client_build(void *modedata, u_int sort_type, __unused uint64_t *tag,$/;"	f	typeref:typename:void	file:
window_client_cmp_activity_time	src/dev/tmux/window-client.c	/^window_client_cmp_activity_time(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_client_cmp_creation_time	src/dev/tmux/window-client.c	/^window_client_cmp_creation_time(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_client_cmp_name	src/dev/tmux/window-client.c	/^window_client_cmp_name(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_client_cmp_size	src/dev/tmux/window-client.c	/^window_client_cmp_size(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_client_do_detach	src/dev/tmux/window-client.c	/^window_client_do_detach(void* modedata, void *itemdata, key_code key)$/;"	f	typeref:typename:void	file:
window_client_draw	src/dev/tmux/window-client.c	/^window_client_draw(__unused void *modedata, void *itemdata, u_int sx, u_int sy)$/;"	f	typeref:struct:screen *	file:
window_client_free	src/dev/tmux/window-client.c	/^window_client_free(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_client_free_item	src/dev/tmux/window-client.c	/^window_client_free_item(struct window_client_itemdata *item)$/;"	f	typeref:typename:void	file:
window_client_init	src/dev/tmux/window-client.c	/^window_client_init(struct window_pane *wp, __unused struct cmd_find_state *fs,$/;"	f	typeref:struct:screen *	file:
window_client_itemdata	src/dev/tmux/window-client.c	/^struct window_client_itemdata {$/;"	s	file:
window_client_key	src/dev/tmux/window-client.c	/^window_client_key(struct window_pane *wp, struct client *c,$/;"	f	typeref:typename:void	file:
window_client_mode	src/dev/tmux/window-client.c	/^const struct window_mode window_client_mode = {$/;"	v	typeref:typename:const struct window_mode
window_client_modedata	src/dev/tmux/window-client.c	/^struct window_client_modedata {$/;"	s	file:
window_client_resize	src/dev/tmux/window-client.c	/^window_client_resize(struct window_pane *wp, u_int sx, u_int sy)$/;"	f	typeref:typename:void	file:
window_client_sort_list	src/dev/tmux/window-client.c	/^static const char *window_client_sort_list[] = {$/;"	v	typeref:typename:const char * []	file:
window_client_sort_type	src/dev/tmux/window-client.c	/^enum window_client_sort_type {$/;"	g	file:
window_clock_draw_screen	src/dev/tmux/window-clock.c	/^window_clock_draw_screen(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_clock_free	src/dev/tmux/window-clock.c	/^window_clock_free(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_clock_init	src/dev/tmux/window-clock.c	/^window_clock_init(struct window_pane *wp, __unused struct cmd_find_state *fs,$/;"	f	typeref:struct:screen *	file:
window_clock_key	src/dev/tmux/window-clock.c	/^window_clock_key(struct window_pane *wp, __unused struct client *c,$/;"	f	typeref:typename:void	file:
window_clock_mode	src/dev/tmux/window-clock.c	/^const struct window_mode window_clock_mode = {$/;"	v	typeref:typename:const struct window_mode
window_clock_mode_data	src/dev/tmux/window-clock.c	/^struct window_clock_mode_data {$/;"	s	file:
window_clock_resize	src/dev/tmux/window-clock.c	/^window_clock_resize(struct window_pane *wp, u_int sx, u_int sy)$/;"	f	typeref:typename:void	file:
window_clock_table	src/dev/tmux/window-clock.c	/^const char window_clock_table[14][5][5] = {$/;"	v	typeref:typename:const char[14][5][5]
window_clock_timer_callback	src/dev/tmux/window-clock.c	/^window_clock_timer_callback(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
window_cmp	src/dev/tmux/window.c	/^window_cmp(struct window *w1, struct window *w2)$/;"	f	typeref:typename:int
window_copy_add	src/dev/tmux/window-copy.c	/^window_copy_add(struct window_pane *wp, const char *fmt, ...)$/;"	f	typeref:typename:void
window_copy_add_formats	src/dev/tmux/window-copy.c	/^window_copy_add_formats(struct window_pane *wp, struct format_tree *ft)$/;"	f	typeref:typename:void
window_copy_adjust_selection	src/dev/tmux/window-copy.c	/^window_copy_adjust_selection(struct window_pane *wp, u_int *selx, u_int *sely)$/;"	f	typeref:typename:int	file:
window_copy_append_selection	src/dev/tmux/window-copy.c	/^window_copy_append_selection(struct window_pane *wp, const char *bufname)$/;"	f	typeref:typename:void	file:
window_copy_clear_marks	src/dev/tmux/window-copy.c	/^window_copy_clear_marks(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_clear_selection	src/dev/tmux/window-copy.c	/^window_copy_clear_selection(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_command	src/dev/tmux/window-copy.c	/^window_copy_command(struct window_pane *wp, struct client *c, struct session *s,$/;"	f	typeref:typename:void	file:
window_copy_copy_buffer	src/dev/tmux/window-copy.c	/^window_copy_copy_buffer(struct window_pane *wp, const char *bufname, void *buf,$/;"	f	typeref:typename:void	file:
window_copy_copy_line	src/dev/tmux/window-copy.c	/^window_copy_copy_line(struct window_pane *wp, char **buf, size_t *off, u_int sy,$/;"	f	typeref:typename:void	file:
window_copy_copy_pipe	src/dev/tmux/window-copy.c	/^window_copy_copy_pipe(struct window_pane *wp, struct session *s,$/;"	f	typeref:typename:void	file:
window_copy_copy_selection	src/dev/tmux/window-copy.c	/^window_copy_copy_selection(struct window_pane *wp, const char *bufname)$/;"	f	typeref:typename:void	file:
window_copy_cursor_back_to_indentation	src/dev/tmux/window-copy.c	/^window_copy_cursor_back_to_indentation(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_cursor_down	src/dev/tmux/window-copy.c	/^window_copy_cursor_down(struct window_pane *wp, int scroll_only)$/;"	f	typeref:typename:void	file:
window_copy_cursor_end_of_line	src/dev/tmux/window-copy.c	/^window_copy_cursor_end_of_line(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_cursor_jump	src/dev/tmux/window-copy.c	/^window_copy_cursor_jump(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_cursor_jump_back	src/dev/tmux/window-copy.c	/^window_copy_cursor_jump_back(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_cursor_jump_to	src/dev/tmux/window-copy.c	/^window_copy_cursor_jump_to(struct window_pane *wp, int jump_again)$/;"	f	typeref:typename:void	file:
window_copy_cursor_jump_to_back	src/dev/tmux/window-copy.c	/^window_copy_cursor_jump_to_back(struct window_pane *wp, int jump_again)$/;"	f	typeref:typename:void	file:
window_copy_cursor_left	src/dev/tmux/window-copy.c	/^window_copy_cursor_left(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_cursor_next_word	src/dev/tmux/window-copy.c	/^window_copy_cursor_next_word(struct window_pane *wp, const char *separators)$/;"	f	typeref:typename:void	file:
window_copy_cursor_next_word_end	src/dev/tmux/window-copy.c	/^window_copy_cursor_next_word_end(struct window_pane *wp,$/;"	f	typeref:typename:void	file:
window_copy_cursor_previous_word	src/dev/tmux/window-copy.c	/^window_copy_cursor_previous_word(struct window_pane *wp,$/;"	f	typeref:typename:void	file:
window_copy_cursor_right	src/dev/tmux/window-copy.c	/^window_copy_cursor_right(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_cursor_start_of_line	src/dev/tmux/window-copy.c	/^window_copy_cursor_start_of_line(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_cursor_up	src/dev/tmux/window-copy.c	/^window_copy_cursor_up(struct window_pane *wp, int scroll_only)$/;"	f	typeref:typename:void	file:
window_copy_drag_update	src/dev/tmux/window-copy.c	/^window_copy_drag_update(__unused struct client *c, struct mouse_event *m)$/;"	f	typeref:typename:void	file:
window_copy_find_length	src/dev/tmux/window-copy.c	/^window_copy_find_length(struct window_pane *wp, u_int py)$/;"	f	typeref:typename:u_int	file:
window_copy_free	src/dev/tmux/window-copy.c	/^window_copy_free(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_get_selection	src/dev/tmux/window-copy.c	/^window_copy_get_selection(struct window_pane *wp, size_t *len)$/;"	f	typeref:typename:void *	file:
window_copy_goto_line	src/dev/tmux/window-copy.c	/^window_copy_goto_line(struct window_pane *wp, const char *linestr)$/;"	f	typeref:typename:void	file:
window_copy_in_set	src/dev/tmux/window-copy.c	/^window_copy_in_set(struct window_pane *wp, u_int px, u_int py, const char *set)$/;"	f	typeref:typename:int	file:
window_copy_init	src/dev/tmux/window-copy.c	/^window_copy_init(struct window_pane *wp, __unused struct cmd_find_state *fs,$/;"	f	typeref:struct:screen *	file:
window_copy_init_for_output	src/dev/tmux/window-copy.c	/^window_copy_init_for_output(struct window_pane *wp)$/;"	f	typeref:typename:void
window_copy_init_from_pane	src/dev/tmux/window-copy.c	/^window_copy_init_from_pane(struct window_pane *wp, int scroll_exit)$/;"	f	typeref:typename:void
window_copy_is_lowercase	src/dev/tmux/window-copy.c	/^window_copy_is_lowercase(const char *ptr)$/;"	f	typeref:typename:int	file:
window_copy_key_table	src/dev/tmux/window-copy.c	/^window_copy_key_table(struct window_pane *wp)$/;"	f	typeref:typename:const char *	file:
window_copy_mode	src/dev/tmux/window-copy.c	/^const struct window_mode window_copy_mode = {$/;"	v	typeref:typename:const struct window_mode
window_copy_mode_data	src/dev/tmux/window-copy.c	/^struct window_copy_mode_data {$/;"	s	file:
window_copy_move_left	src/dev/tmux/window-copy.c	/^window_copy_move_left(struct screen *s, u_int *fx, u_int *fy)$/;"	f	typeref:typename:void	file:
window_copy_move_mouse	src/dev/tmux/window-copy.c	/^window_copy_move_mouse(struct mouse_event *m)$/;"	f	typeref:typename:void	file:
window_copy_move_right	src/dev/tmux/window-copy.c	/^window_copy_move_right(struct screen *s, u_int *fx, u_int *fy)$/;"	f	typeref:typename:void	file:
window_copy_next_paragraph	src/dev/tmux/window-copy.c	/^window_copy_next_paragraph(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_other_end	src/dev/tmux/window-copy.c	/^window_copy_other_end(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_pagedown	src/dev/tmux/window-copy.c	/^window_copy_pagedown(struct window_pane *wp, int half_page)$/;"	f	typeref:typename:int	file:
window_copy_pageup	src/dev/tmux/window-copy.c	/^window_copy_pageup(struct window_pane *wp, int half_page)$/;"	f	typeref:typename:void
window_copy_previous_paragraph	src/dev/tmux/window-copy.c	/^window_copy_previous_paragraph(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_rectangle_toggle	src/dev/tmux/window-copy.c	/^window_copy_rectangle_toggle(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_redraw_lines	src/dev/tmux/window-copy.c	/^window_copy_redraw_lines(struct window_pane *wp, u_int py, u_int ny)$/;"	f	typeref:typename:void	file:
window_copy_redraw_screen	src/dev/tmux/window-copy.c	/^window_copy_redraw_screen(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_redraw_selection	src/dev/tmux/window-copy.c	/^window_copy_redraw_selection(struct window_pane *wp, u_int old_y)$/;"	f	typeref:typename:void	file:
window_copy_resize	src/dev/tmux/window-copy.c	/^window_copy_resize(struct window_pane *wp, u_int sx, u_int sy)$/;"	f	typeref:typename:void	file:
window_copy_scroll_down	src/dev/tmux/window-copy.c	/^window_copy_scroll_down(struct window_pane *wp, u_int ny)$/;"	f	typeref:typename:void	file:
window_copy_scroll_to	src/dev/tmux/window-copy.c	/^window_copy_scroll_to(struct window_pane *wp, u_int px, u_int py)$/;"	f	typeref:typename:void	file:
window_copy_scroll_up	src/dev/tmux/window-copy.c	/^window_copy_scroll_up(struct window_pane *wp, u_int ny)$/;"	f	typeref:typename:void	file:
window_copy_search	src/dev/tmux/window-copy.c	/^window_copy_search(struct window_pane *wp, int direction, int moveflag)$/;"	f	typeref:typename:int	file:
window_copy_search_compare	src/dev/tmux/window-copy.c	/^window_copy_search_compare(struct grid *gd, u_int px, u_int py,$/;"	f	typeref:typename:int	file:
window_copy_search_down	src/dev/tmux/window-copy.c	/^window_copy_search_down(struct window_pane *wp, int moveflag)$/;"	f	typeref:typename:int	file:
window_copy_search_jump	src/dev/tmux/window-copy.c	/^window_copy_search_jump(struct window_pane *wp, struct grid *gd,$/;"	f	typeref:typename:int	file:
window_copy_search_lr	src/dev/tmux/window-copy.c	/^window_copy_search_lr(struct grid *gd,$/;"	f	typeref:typename:int	file:
window_copy_search_marks	src/dev/tmux/window-copy.c	/^window_copy_search_marks(struct window_pane *wp, struct screen *ssp)$/;"	f	typeref:typename:int	file:
window_copy_search_rl	src/dev/tmux/window-copy.c	/^window_copy_search_rl(struct grid *gd,$/;"	f	typeref:typename:int	file:
window_copy_search_up	src/dev/tmux/window-copy.c	/^window_copy_search_up(struct window_pane *wp, int moveflag)$/;"	f	typeref:typename:int	file:
window_copy_start_drag	src/dev/tmux/window-copy.c	/^window_copy_start_drag(struct client *c, struct mouse_event *m)$/;"	f	typeref:typename:void
window_copy_start_selection	src/dev/tmux/window-copy.c	/^window_copy_start_selection(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_synchronize_cursor	src/dev/tmux/window-copy.c	/^window_copy_synchronize_cursor(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_copy_update_cursor	src/dev/tmux/window-copy.c	/^window_copy_update_cursor(struct window_pane *wp, u_int cx, u_int cy)$/;"	f	typeref:typename:void	file:
window_copy_update_selection	src/dev/tmux/window-copy.c	/^window_copy_update_selection(struct window_pane *wp, int may_redraw)$/;"	f	typeref:typename:int	file:
window_copy_vadd	src/dev/tmux/window-copy.c	/^window_copy_vadd(struct window_pane *wp, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
window_copy_write_line	src/dev/tmux/window-copy.c	/^window_copy_write_line(struct window_pane *wp, struct screen_write_ctx *ctx,$/;"	f	typeref:typename:void	file:
window_copy_write_lines	src/dev/tmux/window-copy.c	/^window_copy_write_lines(struct window_pane *wp, struct screen_write_ctx *ctx,$/;"	f	typeref:typename:void	file:
window_count_panes	src/dev/tmux/window.c	/^window_count_panes(struct window *w)$/;"	f	typeref:typename:u_int
window_create	src/dev/tmux/window.c	/^window_create(u_int sx, u_int sy)$/;"	f	typeref:struct:window *
window_create_spawn	src/dev/tmux/window.c	/^window_create_spawn(const char *name, int argc, char **argv, const char *path,$/;"	f	typeref:struct:window *
window_destroy	src/dev/tmux/window.c	/^window_destroy(struct window *w)$/;"	f	typeref:typename:void	file:
window_destroy_panes	src/dev/tmux/window.c	/^window_destroy_panes(struct window *w)$/;"	f	typeref:typename:void
window_find_by_id	src/dev/tmux/window.c	/^window_find_by_id(u_int id)$/;"	f	typeref:struct:window *
window_find_by_id_str	src/dev/tmux/window.c	/^window_find_by_id_str(const char *s)$/;"	f	typeref:struct:window *
window_find_string	src/dev/tmux/window.c	/^window_find_string(struct window *w, const char *s)$/;"	f	typeref:struct:window_pane *
window_get_active_at	src/dev/tmux/window.c	/^window_get_active_at(struct window *w, u_int x, u_int y)$/;"	f	typeref:struct:window_pane *
window_has_pane	src/dev/tmux/window.c	/^window_has_pane(struct window *w, struct window_pane *wp)$/;"	f	typeref:typename:int
window_lost_pane	src/dev/tmux/window.c	/^window_lost_pane(struct window *w, struct window_pane *wp)$/;"	f	typeref:typename:void
window_mode	src/dev/tmux/tmux.h	/^struct window_mode {$/;"	s
window_pane	src/dev/tmux/tmux.h	/^struct window_pane {$/;"	s
window_pane_alternate_off	src/dev/tmux/window.c	/^window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,$/;"	f	typeref:typename:void
window_pane_alternate_on	src/dev/tmux/window.c	/^window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,$/;"	f	typeref:typename:void
window_pane_at_index	src/dev/tmux/window.c	/^window_pane_at_index(struct window *w, u_int idx)$/;"	f	typeref:struct:window_pane *
window_pane_choose_best	src/dev/tmux/window.c	/^window_pane_choose_best(struct window_pane **list, u_int size)$/;"	f	typeref:struct:window_pane *	file:
window_pane_cmp	src/dev/tmux/window.c	/^window_pane_cmp(struct window_pane *wp1, struct window_pane *wp2)$/;"	f	typeref:typename:int
window_pane_create	src/dev/tmux/window.c	/^window_pane_create(struct window *w, u_int sx, u_int sy, u_int hlimit)$/;"	f	typeref:struct:window_pane *	file:
window_pane_destroy	src/dev/tmux/window.c	/^window_pane_destroy(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_pane_destroy_ready	src/dev/tmux/window.c	/^window_pane_destroy_ready(struct window_pane *wp)$/;"	f	typeref:typename:int
window_pane_error_callback	src/dev/tmux/window.c	/^window_pane_error_callback(__unused struct bufferevent *bufev,$/;"	f	typeref:typename:void	file:
window_pane_find_by_id	src/dev/tmux/window.c	/^window_pane_find_by_id(u_int id)$/;"	f	typeref:struct:window_pane *
window_pane_find_by_id_str	src/dev/tmux/window.c	/^window_pane_find_by_id_str(const char *s)$/;"	f	typeref:struct:window_pane *
window_pane_find_down	src/dev/tmux/window.c	/^window_pane_find_down(struct window_pane *wp)$/;"	f	typeref:struct:window_pane *
window_pane_find_left	src/dev/tmux/window.c	/^window_pane_find_left(struct window_pane *wp)$/;"	f	typeref:struct:window_pane *
window_pane_find_right	src/dev/tmux/window.c	/^window_pane_find_right(struct window_pane *wp)$/;"	f	typeref:struct:window_pane *
window_pane_find_up	src/dev/tmux/window.c	/^window_pane_find_up(struct window_pane *wp)$/;"	f	typeref:struct:window_pane *
window_pane_get_palette	src/dev/tmux/window.c	/^window_pane_get_palette(const struct window_pane *wp, int c)$/;"	f	typeref:typename:int
window_pane_index	src/dev/tmux/window.c	/^window_pane_index(struct window_pane *wp, u_int *i)$/;"	f	typeref:typename:int
window_pane_key	src/dev/tmux/window.c	/^window_pane_key(struct window_pane *wp, struct client *c, struct session *s,$/;"	f	typeref:typename:void
window_pane_mode_timer	src/dev/tmux/window.c	/^window_pane_mode_timer(__unused int fd, __unused short events, void *arg)$/;"	f	typeref:typename:void	file:
window_pane_next_by_number	src/dev/tmux/window.c	/^window_pane_next_by_number(struct window *w, struct window_pane *wp, u_int n)$/;"	f	typeref:struct:window_pane *
window_pane_previous_by_number	src/dev/tmux/window.c	/^window_pane_previous_by_number(struct window *w, struct window_pane *wp,$/;"	f	typeref:struct:window_pane *
window_pane_read_callback	src/dev/tmux/window.c	/^window_pane_read_callback(__unused struct bufferevent *bufev, void *data)$/;"	f	typeref:typename:void	file:
window_pane_reset_mode	src/dev/tmux/window.c	/^window_pane_reset_mode(struct window_pane *wp)$/;"	f	typeref:typename:void
window_pane_reset_palette	src/dev/tmux/window.c	/^window_pane_reset_palette(struct window_pane *wp)$/;"	f	typeref:typename:void
window_pane_resize	src/dev/tmux/window.c	/^window_pane_resize(struct window_pane *wp, u_int sx, u_int sy)$/;"	f	typeref:typename:void
window_pane_search	src/dev/tmux/window.c	/^window_pane_search(struct window_pane *wp, const char *searchstr)$/;"	f	typeref:typename:u_int
window_pane_set_mode	src/dev/tmux/window.c	/^window_pane_set_mode(struct window_pane *wp, const struct window_mode *mode,$/;"	f	typeref:typename:int
window_pane_set_palette	src/dev/tmux/window.c	/^window_pane_set_palette(struct window_pane *wp, u_int n, int colour)$/;"	f	typeref:typename:void
window_pane_spawn	src/dev/tmux/window.c	/^window_pane_spawn(struct window_pane *wp, int argc, char **argv,$/;"	f	typeref:typename:int
window_pane_unset_palette	src/dev/tmux/window.c	/^window_pane_unset_palette(struct window_pane *wp, u_int n)$/;"	f	typeref:typename:void
window_pane_visible	src/dev/tmux/window.c	/^window_pane_visible(struct window_pane *wp)$/;"	f	typeref:typename:int
window_printable_flags	src/dev/tmux/window.c	/^window_printable_flags(struct winlink *wl)$/;"	f	typeref:typename:const char *
window_redraw_active_switch	src/dev/tmux/window.c	/^window_redraw_active_switch(struct window *w, struct window_pane *wp)$/;"	f	typeref:typename:void
window_remove_pane	src/dev/tmux/window.c	/^window_remove_pane(struct window *w, struct window_pane *wp)$/;"	f	typeref:typename:void
window_remove_ref	src/dev/tmux/window.c	/^window_remove_ref(struct window *w, const char *from)$/;"	f	typeref:typename:void
window_resize	src/dev/tmux/window.c	/^window_resize(struct window *w, u_int sx, u_int sy)$/;"	f	typeref:typename:void
window_set_active_pane	src/dev/tmux/window.c	/^window_set_active_pane(struct window *w, struct window_pane *wp)$/;"	f	typeref:typename:int
window_set_name	src/dev/tmux/window.c	/^window_set_name(struct window *w, const char *new_name)$/;"	f	typeref:typename:void
window_tree_add_item	src/dev/tmux/window-tree.c	/^window_tree_add_item(struct window_tree_modedata *data)$/;"	f	typeref:struct:window_tree_itemdata *	file:
window_tree_build	src/dev/tmux/window-tree.c	/^window_tree_build(void *modedata, u_int sort_type, uint64_t *tag,$/;"	f	typeref:typename:void	file:
window_tree_build_pane	src/dev/tmux/window-tree.c	/^window_tree_build_pane(struct session *s, struct winlink *wl,$/;"	f	typeref:typename:void	file:
window_tree_build_session	src/dev/tmux/window-tree.c	/^window_tree_build_session(struct session *s, void* modedata,$/;"	f	typeref:typename:void	file:
window_tree_build_window	src/dev/tmux/window-tree.c	/^window_tree_build_window(struct session *s, struct winlink *wl, void* modedata,$/;"	f	typeref:typename:int	file:
window_tree_cmp_pane_time	src/dev/tmux/window-tree.c	/^window_tree_cmp_pane_time(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_tree_cmp_session_name	src/dev/tmux/window-tree.c	/^window_tree_cmp_session_name(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_tree_cmp_session_time	src/dev/tmux/window-tree.c	/^window_tree_cmp_session_time(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_tree_cmp_window_name	src/dev/tmux/window-tree.c	/^window_tree_cmp_window_name(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_tree_cmp_window_time	src/dev/tmux/window-tree.c	/^window_tree_cmp_window_time(const void *a0, const void *b0)$/;"	f	typeref:typename:int	file:
window_tree_command_callback	src/dev/tmux/window-tree.c	/^window_tree_command_callback(struct client *c, void *modedata, const char *s,$/;"	f	typeref:typename:int	file:
window_tree_command_done	src/dev/tmux/window-tree.c	/^window_tree_command_done(__unused struct cmdq_item *item, void *modedata)$/;"	f	typeref:enum:cmd_retval	file:
window_tree_command_each	src/dev/tmux/window-tree.c	/^window_tree_command_each(void* modedata, void* itemdata, __unused key_code key)$/;"	f	typeref:typename:void	file:
window_tree_command_free	src/dev/tmux/window-tree.c	/^window_tree_command_free(void *modedata)$/;"	f	typeref:typename:void	file:
window_tree_destroy	src/dev/tmux/window-tree.c	/^window_tree_destroy(struct window_tree_modedata *data)$/;"	f	typeref:typename:void	file:
window_tree_draw	src/dev/tmux/window-tree.c	/^window_tree_draw(void *modedata, void *itemdata, u_int sx, u_int sy)$/;"	f	typeref:struct:screen *	file:
window_tree_draw_session	src/dev/tmux/window-tree.c	/^window_tree_draw_session(struct window_tree_modedata *data, struct session *s,$/;"	f	typeref:typename:void	file:
window_tree_draw_window	src/dev/tmux/window-tree.c	/^window_tree_draw_window(struct window_tree_modedata *data, struct session *s,$/;"	f	typeref:typename:void	file:
window_tree_filter_pane	src/dev/tmux/window-tree.c	/^window_tree_filter_pane(struct session *s, struct winlink *wl,$/;"	f	typeref:typename:int	file:
window_tree_free	src/dev/tmux/window-tree.c	/^window_tree_free(struct window_pane *wp)$/;"	f	typeref:typename:void	file:
window_tree_free_item	src/dev/tmux/window-tree.c	/^window_tree_free_item(struct window_tree_itemdata *item)$/;"	f	typeref:typename:void	file:
window_tree_get_target	src/dev/tmux/window-tree.c	/^window_tree_get_target(struct window_tree_itemdata *item,$/;"	f	typeref:typename:char *	file:
window_tree_init	src/dev/tmux/window-tree.c	/^window_tree_init(struct window_pane *wp, struct cmd_find_state *fs,$/;"	f	typeref:struct:screen *	file:
window_tree_itemdata	src/dev/tmux/window-tree.c	/^struct window_tree_itemdata {$/;"	s	file:
window_tree_key	src/dev/tmux/window-tree.c	/^window_tree_key(struct window_pane *wp, struct client *c,$/;"	f	typeref:typename:void	file:
window_tree_mode	src/dev/tmux/window-tree.c	/^const struct window_mode window_tree_mode = {$/;"	v	typeref:typename:const struct window_mode
window_tree_modedata	src/dev/tmux/window-tree.c	/^struct window_tree_modedata {$/;"	s	file:
window_tree_pull_item	src/dev/tmux/window-tree.c	/^window_tree_pull_item(struct window_tree_itemdata *item, struct session **sp,$/;"	f	typeref:typename:void	file:
window_tree_resize	src/dev/tmux/window-tree.c	/^window_tree_resize(struct window_pane *wp, u_int sx, u_int sy)$/;"	f	typeref:typename:void	file:
window_tree_search	src/dev/tmux/window-tree.c	/^window_tree_search(__unused void *modedata, void *itemdata, const char *ss)$/;"	f	typeref:typename:int	file:
window_tree_sort_list	src/dev/tmux/window-tree.c	/^static const char *window_tree_sort_list[] = {$/;"	v	typeref:typename:const char * []	file:
window_tree_sort_type	src/dev/tmux/window-tree.c	/^enum window_tree_sort_type {$/;"	g	file:
window_tree_type	src/dev/tmux/window-tree.c	/^enum window_tree_type {$/;"	g	file:
window_unzoom	src/dev/tmux/window.c	/^window_unzoom(struct window *w)$/;"	f	typeref:typename:int
window_update_activity	src/dev/tmux/window.c	/^window_update_activity(struct window *w)$/;"	f	typeref:typename:void
window_zoom	src/dev/tmux/window.c	/^window_zoom(struct window_pane *wp)$/;"	f	typeref:typename:int
windows	src/dev/tmux/tmux.h	/^	struct winlinks	 windows;$/;"	m	struct:session	typeref:struct:winlinks
windows	src/dev/tmux/window.c	/^struct windows windows;$/;"	v	typeref:struct:windows
winlink	src/dev/tmux/tmux.h	/^struct winlink {$/;"	s
winlink	src/dev/tmux/window-tree.c	/^	int			winlink;$/;"	m	struct:window_tree_itemdata	typeref:typename:int	file:
winlink_add	src/dev/tmux/window.c	/^winlink_add(struct winlinks *wwl, int idx)$/;"	f	typeref:struct:winlink *
winlink_clear_flags	src/dev/tmux/window.c	/^winlink_clear_flags(struct winlink *wl)$/;"	f	typeref:typename:void
winlink_cmp	src/dev/tmux/window.c	/^winlink_cmp(struct winlink *wl1, struct winlink *wl2)$/;"	f	typeref:typename:int
winlink_count	src/dev/tmux/window.c	/^winlink_count(struct winlinks *wwl)$/;"	f	typeref:typename:u_int
winlink_find_by_index	src/dev/tmux/window.c	/^winlink_find_by_index(struct winlinks *wwl, int idx)$/;"	f	typeref:struct:winlink *
winlink_find_by_window	src/dev/tmux/window.c	/^winlink_find_by_window(struct winlinks *wwl, struct window *w)$/;"	f	typeref:struct:winlink *
winlink_find_by_window_id	src/dev/tmux/window.c	/^winlink_find_by_window_id(struct winlinks *wwl, u_int id)$/;"	f	typeref:struct:winlink *
winlink_next	src/dev/tmux/window.c	/^winlink_next(struct winlink *wl)$/;"	f	typeref:struct:winlink *
winlink_next_by_number	src/dev/tmux/window.c	/^winlink_next_by_number(struct winlink *wl, struct session *s, int n)$/;"	f	typeref:struct:winlink *
winlink_next_index	src/dev/tmux/window.c	/^winlink_next_index(struct winlinks *wwl, int idx)$/;"	f	typeref:typename:int	file:
winlink_previous	src/dev/tmux/window.c	/^winlink_previous(struct winlink *wl)$/;"	f	typeref:struct:winlink *
winlink_previous_by_number	src/dev/tmux/window.c	/^winlink_previous_by_number(struct winlink *wl, struct session *s, int n)$/;"	f	typeref:struct:winlink *
winlink_remove	src/dev/tmux/window.c	/^winlink_remove(struct winlinks *wwl, struct winlink *wl)$/;"	f	typeref:typename:void
winlink_set_window	src/dev/tmux/window.c	/^winlink_set_window(struct winlink *wl, struct window *w)$/;"	f	typeref:typename:void
winlink_shuffle_up	src/dev/tmux/window.c	/^winlink_shuffle_up(struct session *s, struct winlink *wl)$/;"	f	typeref:typename:int
winlink_stack_push	src/dev/tmux/window.c	/^winlink_stack_push(struct winlink_stack *stack, struct winlink *wl)$/;"	f	typeref:typename:void
winlink_stack_remove	src/dev/tmux/window.c	/^winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl)$/;"	f	typeref:typename:void
with suggestions disabled while pasting	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/integrations/bracketed_paste_magic_spec.rb	/^  context 'with suggestions disabled while pasting' do$/;"	c
with_history	src/zplug/repos/zsh-users/zsh-autosuggestions/spec/spec_helper.rb	/^  def with_history(*commands, &block)$/;"	f
with_metaclass	meta/dotbot/dotbot/util/compat.py	/^def with_metaclass(meta, *bases):$/;"	f
with_pyrex	meta/dotbot/lib/pyyaml/setup.py	/^            with_pyrex = 'pyrex'$/;"	v
with_pyrex	meta/dotbot/lib/pyyaml/setup.py	/^        with_pyrex = 'cython'$/;"	v
with_pyrex	meta/dotbot/lib/pyyaml/setup.py	/^with_pyrex = None$/;"	v
wl	src/dev/tmux/format.c	/^	struct winlink		*wl;$/;"	m	struct:format_tree	typeref:struct:winlink *	file:
wl	src/dev/tmux/tmux.h	/^	struct winlink		*wl;$/;"	m	struct:cmd_find_state	typeref:struct:winlink *
wl	src/dev/tmux/tmux.h	/^	struct winlink		*wl;$/;"	m	struct:window_choose_data	typeref:struct:winlink *
wlmouse	src/dev/tmux/tmux.h	/^	int		 wlmouse;$/;"	m	struct:client	typeref:typename:int
woken	src/dev/tmux/cmd-wait-for.c	/^	int			woken;$/;"	m	struct:wait_channel	typeref:typename:int	file:
wordmark	src/dev/tmux/logo/tmux-logo-1-color.svg	/^            <path d="M242,148 C230.854266,147.834568 222.637888,144.967107 217.123457,139.232099/;"	i
wordmark	src/dev/tmux/logo/tmux-logo.svg	/^            <path d="M241.77284,147.834568 C230.854266,147.834568 222.637888,144.967107 217.1234/;"	i
working_dir	src/dev/ninja/src/ninja.cc	/^  const char* working_dir;$/;"	m	struct:__anon193baac40110::Options	typeref:typename:const char *	file:
wp	src/dev/tmux/format.c	/^	struct window_pane	*wp;$/;"	m	struct:format_tree	typeref:struct:window_pane *	file:
wp	src/dev/tmux/input.c	/^	struct window_pane     *wp;$/;"	m	struct:input_ctx	typeref:struct:window_pane *	file:
wp	src/dev/tmux/mode-tree.c	/^	struct window_pane	 *wp;$/;"	m	struct:mode_tree_data	typeref:struct:window_pane *	file:
wp	src/dev/tmux/tmux.h	/^	int		wp;$/;"	m	struct:mouse_event	typeref:typename:int
wp	src/dev/tmux/tmux.h	/^	struct window_pane	*wp;$/;"	m	struct:cmd_find_state	typeref:struct:window_pane *
wp	src/dev/tmux/tmux.h	/^	struct window_pane	*wp;$/;"	m	struct:screen_write_ctx	typeref:struct:window_pane *
wp	src/dev/tmux/tmux.h	/^	struct window_pane	*wp;$/;"	m	struct:tty_ctx	typeref:struct:window_pane *
wp	src/dev/tmux/tmux.h	/^	struct window_pane *wp;$/;"	m	struct:layout_cell	typeref:struct:window_pane *
wp	src/dev/tmux/window-tree.c	/^	struct window_pane		 *wp;$/;"	m	struct:window_tree_modedata	typeref:struct:window_pane *	file:
wp_id	src/dev/tmux/cmd-run-shell.c	/^	int			 wp_id;$/;"	m	struct:cmd_run_shell_data	typeref:typename:int	file:
wpos	src/dev/tmux/compat/imsg.h	/^	size_t			 wpos;$/;"	m	struct:ibuf	typeref:typename:size_t
wpos	src/dev/tmux/compat/imsg.h	/^	size_t			 wpos;$/;"	m	struct:ibuf_read	typeref:typename:size_t
wrap_ext	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def wrap_ext(collections):$/;"	f
wrap_ext	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def wrap_ext(collections):$/;"	f
wrap_ext_function	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^def wrap_ext_function(function):$/;"	f
wrap_ext_function	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^def wrap_ext_function(function):$/;"	f
wrapped	src/dev/tmux/screen-write.c	/^	int			 wrapped;$/;"	m	struct:screen_write_collect_item	typeref:typename:int	file:
wrapped	src/dev/tmux/tmux.h	/^	int			 wrapped;$/;"	m	struct:tty_ctx	typeref:typename:int
wrapper	meta/dotbot/lib/pyyaml/tests/lib/test_yaml_ext.py	/^    def wrapper(*args, **kwds):$/;"	f	function:wrap_ext_function	file:
wrapper	meta/dotbot/lib/pyyaml/tests/lib3/test_yaml_ext.py	/^    def wrapper(*args, **kwds):$/;"	f	function:wrap_ext_function	file:
write_double_quoted	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_double_quoted(self, text, split=True):$/;"	m	class:Emitter
write_double_quoted	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_double_quoted(self, text, split=True):$/;"	m	class:Emitter
write_folded	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_folded(self, text):$/;"	m	class:Emitter
write_folded	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_folded(self, text):$/;"	m	class:Emitter
write_indent	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_indent(self):$/;"	m	class:Emitter
write_indent	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_indent(self):$/;"	m	class:Emitter
write_indicator	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_indicator(self, indicator, need_whitespace,$/;"	m	class:Emitter
write_indicator	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_indicator(self, indicator, need_whitespace,$/;"	m	class:Emitter
write_line_break	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_line_break(self, data=None):$/;"	m	class:Emitter
write_line_break	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_line_break(self, data=None):$/;"	m	class:Emitter
write_literal	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_literal(self, text):$/;"	m	class:Emitter
write_literal	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_literal(self, text):$/;"	m	class:Emitter
write_master_ninja	src/dev/ninja/misc/write_fake_manifests.py	/^def write_master_ninja(master_ninja, targets):$/;"	f
write_plain	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_plain(self, text, split=True):$/;"	m	class:Emitter
write_plain	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_plain(self, text, split=True):$/;"	m	class:Emitter
write_single_quoted	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_single_quoted(self, text, split=True):$/;"	m	class:Emitter
write_single_quoted	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_single_quoted(self, text, split=True):$/;"	m	class:Emitter
write_sources	src/dev/ninja/misc/write_fake_manifests.py	/^def write_sources(target, root_dir):$/;"	f
write_stream_end	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_stream_end(self):$/;"	m	class:Emitter
write_stream_end	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_stream_end(self):$/;"	m	class:Emitter
write_stream_start	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_stream_start(self):$/;"	m	class:Emitter
write_stream_start	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_stream_start(self):$/;"	m	class:Emitter
write_tag_directive	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_tag_directive(self, handle_text, prefix_text):$/;"	m	class:Emitter
write_tag_directive	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_tag_directive(self, handle_text, prefix_text):$/;"	m	class:Emitter
write_target_ninja	src/dev/ninja/misc/write_fake_manifests.py	/^def write_target_ninja(ninja, target, src_dir):$/;"	f
write_version_directive	meta/dotbot/lib/pyyaml/lib/yaml/emitter.py	/^    def write_version_directive(self, version_text):$/;"	m	class:Emitter
write_version_directive	meta/dotbot/lib/pyyaml/lib3/yaml/emitter.py	/^    def write_version_directive(self, version_text):$/;"	m	class:Emitter
written	src/dev/tmux/tmux.h	/^	size_t		 written;$/;"	m	struct:client	typeref:typename:size_t
written	src/dev/tmux/tmux.h	/^	u_int			 written;$/;"	m	struct:screen_write_ctx	typeref:typename:u_int
ws	src/crouton-clipboard/background.js	/^var ws = new WebSocket('ws:\/\/localhost:' + PORT)$/;"	v
wtail	src/dev/tmux/mdoc2man.awk	/^function wtail() {$/;"	f
x	src/dev/tmux/screen-write.c	/^	u_int			 x;$/;"	m	struct:screen_write_collect_item	typeref:typename:u_int	file:
x	src/dev/tmux/tmux.h	/^	u_int		x;$/;"	m	struct:mouse_event	typeref:typename:u_int
x	src/zplug/repos/zsh-users/zsh-syntax-highlighting/highlighters/main/test-data/noglob-alias.zsh	/^alias x=command$/;"	a
xasprintf	src/dev/tmux/xmalloc.c	/^xasprintf(char **ret, const char *fmt, ...)$/;"	f	typeref:typename:int
xcalloc	src/dev/tmux/xmalloc.c	/^xcalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
xiwi	shells/zsh/crouton.zsh	/^xiwi() {$/;"	f
xmalloc	src/dev/tmux/xmalloc.c	/^xmalloc(size_t size)$/;"	f	typeref:typename:void *
xoff	src/dev/tmux/tmux.h	/^	u_int		 xoff;$/;"	m	struct:layout_cell	typeref:typename:u_int
xoff	src/dev/tmux/tmux.h	/^	u_int		 xoff;$/;"	m	struct:tty_ctx	typeref:typename:u_int
xoff	src/dev/tmux/tmux.h	/^	u_int		 xoff;$/;"	m	struct:window_pane	typeref:typename:u_int
xrealloc	src/dev/tmux/xmalloc.c	/^xrealloc(void *ptr, size_t size)$/;"	f	typeref:typename:void *
xreallocarray	src/dev/tmux/xmalloc.c	/^xreallocarray(void *ptr, size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
xsnprintf	src/dev/tmux/xmalloc.c	/^xsnprintf(char *str, size_t len, const char *fmt, ...)$/;"	f	typeref:typename:int
xstrdup	src/dev/tmux/xmalloc.c	/^xstrdup(const char *str)$/;"	f	typeref:typename:char *
xstrndup	src/dev/tmux/xmalloc.c	/^xstrndup(const char *str, size_t maxlen)$/;"	f	typeref:typename:char *
xterm_keys_entry	src/dev/tmux/xterm-keys.c	/^struct xterm_keys_entry {$/;"	s	file:
xterm_keys_find	src/dev/tmux/xterm-keys.c	/^xterm_keys_find(const char *buf, size_t len, size_t *size, key_code *key)$/;"	f	typeref:typename:int
xterm_keys_lookup	src/dev/tmux/xterm-keys.c	/^xterm_keys_lookup(key_code key)$/;"	f	typeref:typename:char *
xterm_keys_match	src/dev/tmux/xterm-keys.c	/^xterm_keys_match(const char *template, const char *buf, size_t len,$/;"	f	typeref:typename:int	file:
xterm_keys_modifiers	src/dev/tmux/xterm-keys.c	/^xterm_keys_modifiers(const char *buf, size_t len, size_t *pos,$/;"	f	typeref:typename:int	file:
xterm_keys_table	src/dev/tmux/xterm-keys.c	/^static const struct xterm_keys_entry xterm_keys_table[] = {$/;"	v	typeref:typename:const struct xterm_keys_entry[]	file:
xvasprintf	src/dev/tmux/xmalloc.c	/^xvasprintf(char **ret, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
xvsnprintf	src/dev/tmux/xmalloc.c	/^xvsnprintf(char *str, size_t len, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
y	editors/vim/config/plugins/all.vim	/^	map y <Plug>(operator-flashy)$/;"	m
y	src/dev/tmux/tmux.h	/^	u_int		y;$/;"	m	struct:mouse_event	typeref:typename:u_int
yaml_constructors	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    yaml_constructors = {}$/;"	v	class:BaseConstructor
yaml_constructors	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    yaml_constructors = {}$/;"	v	class:BaseConstructor
yaml_dumper	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    yaml_dumper = Dumper$/;"	v	class:YAMLObject
yaml_dumper	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    yaml_dumper = Dumper$/;"	v	class:YAMLObject
yaml_dumper	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_dumper = MyDumper$/;"	v	class:_make_objects.MyTestClass2
yaml_dumper	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_dumper = MyDumper$/;"	v	class:_make_objects.YAMLObject1
yaml_dumper	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_dumper = MyDumper$/;"	v	class:_make_objects.YAMLObject2
yaml_dumper	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_dumper = MyDumper$/;"	v	class:_make_objects.MyTestClass2
yaml_dumper	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_dumper = MyDumper$/;"	v	class:_make_objects.YAMLObject1
yaml_dumper	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_dumper = MyDumper$/;"	v	class:_make_objects.YAMLObject2
yaml_flow_style	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    yaml_flow_style = None$/;"	v	class:YAMLObject
yaml_flow_style	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    yaml_flow_style = None$/;"	v	class:YAMLObject
yaml_implicit_resolvers	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    yaml_implicit_resolvers = {}$/;"	v	class:BaseResolver
yaml_implicit_resolvers	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    yaml_implicit_resolvers = {}$/;"	v	class:BaseResolver
yaml_loader	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    yaml_loader = Loader$/;"	v	class:YAMLObject
yaml_loader	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    yaml_loader = Loader$/;"	v	class:YAMLObject
yaml_loader	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_loader = MyLoader$/;"	v	class:_make_objects.MyTestClass2
yaml_loader	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_loader = MyLoader$/;"	v	class:_make_objects.YAMLObject1
yaml_loader	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_loader = MyLoader$/;"	v	class:_make_objects.YAMLObject2
yaml_loader	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_loader = MyLoader$/;"	v	class:_make_objects.MyTestClass2
yaml_loader	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_loader = MyLoader$/;"	v	class:_make_objects.YAMLObject1
yaml_loader	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_loader = MyLoader$/;"	v	class:_make_objects.YAMLObject2
yaml_multi_constructors	meta/dotbot/lib/pyyaml/lib/yaml/constructor.py	/^    yaml_multi_constructors = {}$/;"	v	class:BaseConstructor
yaml_multi_constructors	meta/dotbot/lib/pyyaml/lib3/yaml/constructor.py	/^    yaml_multi_constructors = {}$/;"	v	class:BaseConstructor
yaml_multi_representers	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    yaml_multi_representers = {}$/;"	v	class:BaseRepresenter
yaml_multi_representers	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    yaml_multi_representers = {}$/;"	v	class:BaseRepresenter
yaml_path_resolvers	meta/dotbot/lib/pyyaml/lib/yaml/resolver.py	/^    yaml_path_resolvers = {}$/;"	v	class:BaseResolver
yaml_path_resolvers	meta/dotbot/lib/pyyaml/lib3/yaml/resolver.py	/^    yaml_path_resolvers = {}$/;"	v	class:BaseResolver
yaml_representers	meta/dotbot/lib/pyyaml/lib/yaml/representer.py	/^    yaml_representers = {}$/;"	v	class:BaseRepresenter
yaml_representers	meta/dotbot/lib/pyyaml/lib3/yaml/representer.py	/^    yaml_representers = {}$/;"	v	class:BaseRepresenter
yaml_tag	meta/dotbot/lib/pyyaml/lib/yaml/__init__.py	/^    yaml_tag = None$/;"	v	class:YAMLObject
yaml_tag	meta/dotbot/lib/pyyaml/lib3/yaml/__init__.py	/^    yaml_tag = None$/;"	v	class:YAMLObject
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_tag = "!tag2"$/;"	v	class:_make_objects.MyTestClass2
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_tag = "!tag3"$/;"	v	class:_make_objects.MyTestClass3
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_tag = '!bar'$/;"	v	class:_make_objects.YAMLObject2
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib/test_constructor.py	/^        yaml_tag = '!foo'$/;"	v	class:_make_objects.YAMLObject1
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_tag = "!tag2"$/;"	v	class:_make_objects.MyTestClass2
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_tag = "!tag3"$/;"	v	class:_make_objects.MyTestClass3
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_tag = '!bar'$/;"	v	class:_make_objects.YAMLObject2
yaml_tag	meta/dotbot/lib/pyyaml/tests/lib3/test_constructor.py	/^        yaml_tag = '!foo'$/;"	v	class:_make_objects.YAMLObject1
yellow	meta/dotbot/test/driver-lib.bash	/^yellow() {$/;"	f
yoff	src/dev/tmux/tmux.h	/^	u_int		 yoff;$/;"	m	struct:layout_cell	typeref:typename:u_int
yoff	src/dev/tmux/tmux.h	/^	u_int		 yoff;$/;"	m	struct:tty_ctx	typeref:typename:u_int
yoff	src/dev/tmux/tmux.h	/^	u_int		 yoff;$/;"	m	struct:window_pane	typeref:typename:u_int
z#	editors/vim/config/plugins/all.vim	/^	map z#  <Plug>(asterisk-z#)$/;"	m
z*	editors/vim/config/plugins/all.vim	/^	map z*  <Plug>(asterisk-z*)$/;"	m
zplugs=	src/zplug/init.zsh	/^zplugs=()$/;"	f
zplugs=	src/zplug/repos/zplug/zplug/init.zsh	/^zplugs=()$/;"	f
zshexit	src/zplug/repos/zsh-users/zsh-autosuggestions/src/async.zsh	/^	zshexit() {$/;"	f
zshexit	src/zplug/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh	/^	zshexit() {$/;"	f
zz	editors/vim/config/mappings.vim	/^nnoremap <expr> zz (winline() == (winheight(0)+1) \/ 2) ?$/;"	m
{	src/zplug/base/sources/prezto.zsh	/^        function {$/;"	f
{	src/zplug/repos/zplug/zplug/base/sources/prezto.zsh	/^        function {$/;"	f
{cur_widget}	src/zplug/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^           _zsh_highlight_widget_${cur_widget}() { :; _zsh_highlight }$/;"	f
{{	editors/vim/config/plugins/all.vim	/^	nmap <buffer> {{ [%$/;"	m
|	terminals/tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^	for test in $(compgen -A function | grep "^test_"); do$/;"	f
}}	editors/vim/config/plugins/all.vim	/^	nmap <buffer> }} ]%$/;"	m
~BindingEnv	src/dev/ninja/src/eval_env.h	/^  virtual ~BindingEnv() {}$/;"	f	struct:BindingEnv
~BuildLog	src/dev/ninja/src/build_log.cc	/^BuildLog::~BuildLog() {$/;"	f	class:BuildLog
~BuildTest	src/dev/ninja/src/build_test.cc	/^  ~BuildTest() {$/;"	f	struct:BuildTest	file:
~Builder	src/dev/ninja/src/build.cc	/^Builder::~Builder() {$/;"	f	class:Builder
~CommandRunner	src/dev/ninja/src/build.h	/^  virtual ~CommandRunner() {}$/;"	f	struct:CommandRunner
~Deps	src/dev/ninja/src/deps_log.h	/^    ~Deps() { delete [] nodes; }$/;"	f	struct:DepsLog::Deps
~DepsLog	src/dev/ninja/src/deps_log.cc	/^DepsLog::~DepsLog() {$/;"	f	class:DepsLog
~DryRunCommandRunner	src/dev/ninja/src/build.cc	/^  virtual ~DryRunCommandRunner() {}$/;"	f	struct:__anon965c94440110::DryRunCommandRunner	file:
~Env	src/dev/ninja/src/eval_env.h	/^  virtual ~Env() {}$/;"	f	struct:Env
~FileReader	src/dev/ninja/src/disk_interface.h	/^  virtual ~FileReader() {}$/;"	f	struct:FileReader
~RealCommandRunner	src/dev/ninja/src/build.cc	/^  virtual ~RealCommandRunner() {}$/;"	f	struct:RealCommandRunner	file:
~RealDiskInterface	src/dev/ninja/src/disk_interface.h	/^  virtual ~RealDiskInterface() {}$/;"	f	struct:RealDiskInterface
~ScopedMetric	src/dev/ninja/src/metrics.cc	/^ScopedMetric::~ScopedMetric() {$/;"	f	class:ScopedMetric
~Subprocess	src/dev/ninja/src/subprocess-posix.cc	/^Subprocess::~Subprocess() {$/;"	f	class:Subprocess
~Subprocess	src/dev/ninja/src/subprocess-win32.cc	/^Subprocess::~Subprocess() {$/;"	f	class:Subprocess
~SubprocessSet	src/dev/ninja/src/subprocess-posix.cc	/^SubprocessSet::~SubprocessSet() {$/;"	f	class:SubprocessSet
~SubprocessSet	src/dev/ninja/src/subprocess-win32.cc	/^SubprocessSet::~SubprocessSet() {$/;"	f	class:SubprocessSet
~Test	src/dev/ninja/src/test.h	/^  virtual ~Test() {}$/;"	f	class:testing::Test
