# Use 'tmux list-keys' to see all the key bindings

# General
#------------------------------
# Set Terminal colors
#  enable terminal compability
set -g default-shell $SHELL
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

set-option -g set-titles on
set-option -g set-titles-string '#T #W tmux{#S}:#I.#P'

set-window-option -g automatic-rename on
set-window-option -g xterm-keys on

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 0
setw -g pane-base-index 0

# setting time for tmux to wait for escape
set -s escape-time 0

# Set the repeat-time to 1 second so that multiple commands can be entered
# without sending the prefix-key within 1 second. Commands are made repeatable
# by -r option of bind-key. By default it is 500 ms.
set -g repeat-time 1000

# don't rename windows automatically
set-option -g allow-rename off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on


# Key Binding
# ----------------------------------
# remap prefix from 'C-b' tc 'C-a'
# to the to bind tmux is to use `ctrl + a` similar to Vim
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# tile all windows
unbind =
bind = select-layout tiled
# Quick layout shortcuts
bind-key b set-window-option main-pane-width 90\; select-layout main-vertical
bind-key B set-window-option main-pane-height 30\; select-layout main-horizontal

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# quickly open a new window
bind-key k confirm-before kill-pane
bind-key K confirm-before kill-window
bind-key x confirm-before kill-session
bind-key X confirm-before kill-server

# Use a tick for renaming the window prompt
unbind-key 'n'
bind-key n command-prompt -I '#W' -p 'Rename window>' "rename-window '%%'"
unbind-key '$'
bind-key '$' command-prompt -I '#S' -p 'Rename session>' "rename-session '%%'"

# split panes using | and -
# Use v and g for splitting from current path
unbind-key %
unbind-key '"'
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# cycling through avai windows, do bind, release, then ctrl+h or ctrl+l to cycle
bind-key -r h previous-window
bind-key -r l next-window

# resizing panes
bind-key -r Left resize-pane -L 5
bind-key -r Down resize-pane -D 5
bind-key -r Up resize-pane -U 5
bind-key -r Right resize-pane -R 5

# moving window left and right
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# Quick view of processes
bind-key P split-window -h 'exec top'

# Help screen: rebind list-keys window into a new pane
bind-key ? split-window -h 'exec tmux list-keys | less'

# Disable Ctrl+Arrows to maintain word jump
unbind-key -n C-Left
unbind-key -n C-Right
unbind-key -n C-Up
unbind-key -n C-Down

# Control Options
# ---------------------------
# bind vi key-mapping
set-option -g status-keys vi

# vi-style controls for copy mode
set-window-option -g mode-keys vi


# setting copy and pasting from system clipboard
# to tmux needs to be in visual mode!! this is done by "leader + esc" to get into visual mode. Then navigate just as you do in vim. copy and paste as you do in vim.
# read here http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/

# to use copy and paste in Tmu
# 1. `ctrl + a` + `esc` to start the bind and get into copy mode
# 2. use `v` or `shift + v` to start the selection process
# 3. use `y` to yank the selection into the BUFFER AND THE CLIPBOARD
# 4. Pasting can come from TWO different location, one is from the buffer
# (`ctrl+a` + `p`) and the other is from the clipboard (if using Terminal on
# Ubuntu, `ctrl+shift+v`

bind Escape copy-mode  # make it vim like
unbind -T copy-mode-vi Enter

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -T copy-mode-vi Escape send -X clear-selection

unbind p
bind p paste-buffer
# bind-key p save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b <~/.tmux-buffer && rm ~/.tmux-buffer"

##############################
### Color & Style Settings ###
##############################

# set -g pane-border-style fg=magenta
# set -g pane-active-border-style fg=magenta
# set -g pane-active-border-style bg=default
#
# sourcing tmuxline colors
# source ~/.dotfiles/terminals/tmux/tmuxline.conf
source ~/.dotfiles/terminals/tmux/rafi.sh


###############
### Plugins ###
###############

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
