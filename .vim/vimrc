" Vim Initialization
" " ------------------
set nocompatible
filetype off

" Respect XDG
if isdirectory($XDG_CONFIG_HOME.'/vim')
	let $VIMPATH=expand('$XDG_CONFIG_HOME/vim')
	let $VARPATH=expand('$XDG_CACHE_HOME/vim')
else
	let $VIMPATH=expand('$HOME/.vim')
	let $VARPATH=expand('$HOME/.cache/vim')
endif

function! s:source_file(path)
	execute 'source' fnameescape($VIMPATH.'/config/'.a:path)
endfunction

" Vim Directories {{{
" ---------------
if ! isdirectory(expand($VARPATH))
	" Create missing dirs i.e. cache/{undo,backup}
	call mkdir(expand('$VARPATH/undo'), 'p')
	call mkdir(expand('$VARPATH/backup'))
endif

" Ensure custom spelling directory
if ! isdirectory(expand('$VIMPATH/spell'))
	call mkdir(expand('$VIMPATH/spell'))
endif
set undofile swapfile nobackup
set directory=$VARPATH/swap//,$VARPATH,~/tmp,/var/tmp,/tmp
set undodir=$VARPATH/undo//,$VARPATH,~/tmp,/var/tmp,/tmp
set backupdir=$VARPATH/backup/,$VARPATH,~/tmp,/var/tmp,/tmp
set viewdir=$VARPATH/view/
set nospell spellfile=$VIMPATH/spell/en.utf-8.add


""""
let $PROJECT=getcwd()
let $ROOT_MARKER =".project"
let $PROJECTCONFIG=$PROJECT."/".$ROOT_MARKER


""" PLUGINS START """"
"""""" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin('~/.vim/bundle')

Plugin 'Vundle.vim'

Plugin 'vim-easymotion'
Plugin 'vim-surround'
Plugin 'vim-unimpaired'
Plugin 'vim-easy-align'
Plugin 'vim-commentary'
Plugin 'matchit'      " expand vim '%' operation

Plugin 'vim-localvimrc'
Plugin 'ctrlp.vim'
Plugin 'nerdtree'

Plugin 'tagbar'

" Plugin 'vim-autocomplpop'
"" Plugin 'snipmate.vim'
"Plugin 'ultisnips'
Plugin 'syntastic'

"""""" COMPLETION
" Plugin 'omnicppcomplete-0.41'
Plugin 'clang-complete'
Plugin 'vim-mucomplete'
" Plugin 'quickr-cscope.vim'

""""" FORMATTING
Plugin 'vim-clang-format'


"""""" FILETYPE
" Plugin 'csv.vim'
Plugin 'rainbow_csv'

call vundle#end()
filetype plugin indent on
syntax on
""" PLUGINS END """"

" Initialize base requirements
call s:source_file('init.vim')

let g:mapleader="\<Space>"
let g:maplocalleader=';'

" Release keymappings for other purposes
nnoremap <Space>  <Nop>
xnoremap <Space>  <Nop>
nnoremap ;        <Nop>
xnoremap ;        <Nop>


" settings BEFORE loading all the plugins
call s:source_file('general.vim')
call s:source_file('all.vim')

" Loading configuration modules {{{
call s:source_file('filetype.vim')
call s:source_file('utils.vim')
call s:source_file('tabline.vim')
call s:source_file('completion.vim')
call s:source_file('linting.vim')
call s:source_file('looks.vim')

" source all configurations for plugins
for f in split(glob('$VIMPATH/config/plugins/*.vim'), '\n')
	exe 'source' f
endfor



" vim: set ts=2 sw=2 tw=80 noet :
